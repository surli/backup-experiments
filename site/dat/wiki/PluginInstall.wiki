= Installing Plugins Manager =

The easiest way to get the plugins is to install [/wiki/PluginsManager/ Plugins Manager]. Then you'll be able to install any other plugins just by clicking chekbox.

<div class="alert alert-success">
Download *[/get/ plugins-manager.jar]* and put it into {{{lib/ext}}} directory, then restart JMeter.
</div>

If you experience any issues with plugins installation, don't hesitate to ask at [/support/ Support Forums].

== PerfMon Agent ==

ServerAgent does not required to be installed into JMeter directory. You should install and launch it on the target server instead. See [PerfMonAgent] wiki page for details.

= Configure JMeter =

== JTL files ==

By default, JMeter do not save threads count in JTL files. If you plan to work with JMeter JTL files, you should enable it by uncommenting in {{{JMETER-INSTALL-DIR/bin/jmeter.properties}}} the line:

{{{
#jmeter.save.saveservice.thread_counts=false
}}} 

and set it to *true*:

{{{
jmeter.save.saveservice.thread_counts=true
}}}

This will enable correct graphs display which deal with threads after reloading the JTL file.

== Write Result to File ==

You need to do similar configuration if you plan to use the save to file functionality in JMeter GUI. You must select "Save Active Thread Counts" in the configuration window:

Click the Configure button:

[/img/wiki/config_active_thread_count_button.png]

And select the option:

[/img/wiki/config_active_thread_count.png]

= Configure Plugins =

You can configure some of the default behaviors of the plugin by editing JMETER_INSTALL_DIR/bin/user.properties file and adding the following lines at its end:

{{{
#---------------------------------------------------------------------------
# JMeter Plugins config (jmeter-plugins.org)
#---------------------------------------------------------------------------
# Enable or disable the gradient paint for graphs. Value is true or false, default is true.
jmeterPlugin.drawGradient=true
# Globaly disable final zeroing lines in all graphs. Value is true or false, default is false.
jmeterPlugin.neverDrawFinalZeroingLines=true
# Globaly disable current X lines drawing in all concerned graphs. Value is true or false,  default is false.
jmeterPlugin.neverDrawCurrentX=true
# Enable or disable graphs Y Axis scaling for better readability. Value is true or false, default is true.
jmeterPlugin.optimizeYAxis=true
# Use relative time in time based graphs. Value is true or false, default is true.
jmeterPlugin.useRelativeTime=true
# Force csv separator character. Default is ',' if decimal separator is '.', ';' otherwise
#jmeterPlugin.csvSeparator=;
# Force csv time format (see http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html)
#jmeterPlugin.csvTimeFormat=HH:mm:ss
# Prefix or not plugin items in JMeter menus. Value is true or false, default is true.
jmeterPlugin.prefixPlugins=true
# Force line width for all line graphs. Default is '1.0'.
jmeterPlugin.graphLineWidth=3
# Draw markers in relevent line graphs. Default is true.
meterPlugin.drawLineMarker=false
}}}

This is not mandatory, only if you want to change the default behaviors. The options drawGradient, neverDrawFinalZeroingLines, neverDrawCurrentX  and useRelativeTime can also be dynamically changed with the [SettingsPanel#Tuning_the_Graphs_Plugins Settings Panel].

= Old-Style Plugin Sets =

If you look for old-style plugin sets up to version 1.4.0, find them [/downloads/old/ here].

= Installing Versions Before 1.1.1 =
JMeter-Plugins version—ã  before 1.1.1 were shipped via three distribution ZIPs:
  # JMeterPlugins-x.x.x.zip - contains plugins, must be unpacked into _lib/ext_ directory inside JMeter
  # JMeterPlugins-libs-x.x.x.zip - contains additional JARs used by JSON/HBase/Hadoop/etc plugins, must be upnacked into _lib_ directory inside JMeter
  # ServerAgent-x.x.x.zip - contains [PerfMonAgent server resource monitoring agent] to use with [PerfMon PerfMon Metrics Collector] plugin, standalone utility

= Installing Versions Before 1.0.0 =

To install the JMeter Plugins, you simply have to copy the JMeterPlugins.jar file from JMeterPlugins-VERSION.zip inside JMETER_INSTALL_DIR/lib/ext. Now you can restart your JMeter and see _jp@gc_-prefixed plugins in menus.

If you plan to use the Servers Monitoring Listener, you must also install the server agent on all servers as described [/wiki/PerfMon#Installation here].