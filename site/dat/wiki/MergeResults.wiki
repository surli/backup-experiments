= Merge Results =

<span class=''>[/?search=jpgc-mergeresults <i class='fa fa-download'></i> Download]</span>

Merge Results is a tool to merge files of results (to simplify the comparison of two or more load tests). It requires both Standard Set and Extras Set to be installed.

Each file can be filtered using the Include / exclude field (regular expression can be used by checking the appropriate box) or Start / End offset field.
The results file is made from input files concatenated with a new reference date.
Each label is prefixed by the one specified in the table (ie: *TEST1:*SEARCH, *TEST2:*SEARCH).

The newly created file can be read by classical JMeter reports or graphs.

== Getting Started ==

You can find the Merge Results tool in WorkBench Non-Test Elements

[/img/wiki/merge_results_start.png]

Add some results in the table and setup filtering

[/img/wiki/merge_results_ui.png]

Don't forget to indicate an output file before clicking the merge button.
If the output file already exist it will be erased.
If you have specified a directory that doesn't exist it will be created.

Before merge :

|| *TEST 1* || *TEST 2* ||
|| [/img/wiki/merge_results_test1.png] || [/img/wiki/merge_results_test2.png] ||

After merge :

|| *TEST 1-2* ||
|| [/img/wiki/merge_results_test1-2.png] ||

Merge tool could be call in Command Line Interface.
cat merge-results.properties

{{{

# When you are running MergeResults tool with JMeterPluginsCMD use the following parameters
# --input-jtl merge-results.properties
# --plugin-type MergeResults
#
# example :
# java -Xms256m -Xmx512m -jar CMDRunner.jar --tool Reporter --generate-csv test1-test2.csv --input-jtl merge-results.properties --plugin-type MergeResults
# or
# <JMETER_HOME>\lib\ext\JMeterPluginsCMD.bat --generate-csv test1-test2.csv --input-jtl merge-results.properties --plugin-type MergeResults

# === FILE 1 ===
inputJtl1=test1.csv
prefixLabel1=TEST1:
includeLabels1=P[0-9].*
excludeLabelsl=
includeLabelRegex1=true
excludeLabelRegex1=
startOffset1=
endOffset1=1500

# === FILE 2 ===
inputJtl2=test2.csv
prefixLabel2=TEST2:
includeLabels2=P[0-9].*
excludeLabels2=
includeLabelRegex2=true
excludeLabelRegex2=
startOffset2=
endOffset2=1500

# === FILE 3 ===
#inputJtl3=
#prefixLabel3=
#includeLabels3=
#excludeLabels3=
#includeLabelRegex3=
#excludeLabelRegex3=
#startOffset3=
#endOffset3=

# === FILE 4 ===
#inputJtl4=
#prefixLabel4=
#includeLabels4=
#excludeLabels4=
#includeLabelRegex4=
#excludeLabelRegex4=
#startOffset4=
#endOffset4=

}}}