{
  "pr-base-commit-id": "344413762fb2dab7a036d86aa3a8d92d1b440eb0",
  "pr-head-commit-id": "0ac49cbb7b5008d9cda43a19fd5a138b555efa70",
  "totalNumberSkippingTests": 0,
  "pr-remote-repo": "kokosing/presto",
  "error-types": [
    "java.lang.AssertionError",
    "java.lang.ClassCastException"
  ],
  "totalNumberFailingTests": 11,
  "buildid": 223548341,
  "totalNumberErroringTests": 0,
  "is-pr": "true",
  "totalNumberRunningTests": 3046,
  "pr-head-commit-id-url": "https://github.com/kokosing/presto/commit/0ac49cbb7b5008d9cda43a19fd5a138b555efa70",
  "pr-id": 7355,
  "repo": "prestodb/presto",
  "failing-test-cases": [
    {
      "className": "com.facebook.presto.sql.planner.iterative.rule.test.TestSwapAdjacentWindowsByPartitionsOrder",
      "failingMethods": [
        "com.facebook.presto.sql.planner.iterative.rule.test.TestSwapAdjacentWindowsByPartitionsOrder#doesNotFireOnPlanWithoutWindowFunctions"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.ValuesNode cannot be cast to com.facebook.presto.sql.planner.plan.WindowNode",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.TestLogicalPlanner",
      "failingMethods": [
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testCorrelatedSubqueries",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testDistinctLimitOverInequalityJoin",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testRemoveUnreferencedScalarInputApplyNodes",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSameQualifiedSubqueryIsAppliedOnlyOnce",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSubqueryPruning",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testUncorrelatedSubqueries",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSameScalarSubqueryIsAppliedOnlyOnce",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testSameInSubqueryIsAppliedOnlyOnce",
        "com.facebook.presto.sql.planner.TestLogicalPlanner#testDoubleNestedCorrelatedSubqueries"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.EnforceSingleRowNode cannot be cast to com.facebook.presto.sql.planner.plan.ProjectNode",
          "isError": false
        },
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.ProjectNode cannot be cast to com.facebook.presto.sql.planner.plan.LimitNode",
          "isError": false
        },
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.EnforceSingleRowNode cannot be cast to com.facebook.presto.sql.planner.plan.ProjectNode",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT (SELECT 1)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT * FROM orders o1 JOIN orders o2 ON o1.orderkey IN (SELECT 1) AND (o1.orderkey IN (SELECT 1) OR o1.orderkey IN (SELECT 1))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT * FROM orders o1 JOIN orders o2 ON o1.orderkey \u003c\u003d ALL(SELECT 1) AND (o1.orderkey \u003c\u003d ALL(SELECT 1) OR o1.orderkey \u003c\u003d ALL(SELECT 1))",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT * FROM orders WHERE CAST(orderkey AS INTEGER) \u003d (SELECT 1) AND custkey \u003d (SELECT 2) AND CAST(custkey as REAL) !\u003d (SELECT 1)",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Invalid SQL: SELECT COUNT(*) FROM (SELECT EXISTS(SELECT orderkey FROM lineitem WHERE orderkey % 2 \u003d 0) FROM orders)",
          "isError": false
        },
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.TableScanNode cannot be cast to com.facebook.presto.sql.planner.plan.ProjectNode",
          "isError": false
        }
      ],
      "nbFailures": 9,
      "nbErrors": 0
    },
    {
      "className": "com.facebook.presto.sql.planner.iterative.rule.TestTransformExistsApplyToScalarApply",
      "failingMethods": [
        "com.facebook.presto.sql.planner.iterative.rule.TestTransformExistsApplyToScalarApply#testDoesNotFire"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.ClassCastException",
          "failureDetail": "com.facebook.presto.sql.planner.plan.ValuesNode cannot be cast to com.facebook.presto.sql.planner.plan.ApplyNode",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ],
  "step-durations": {
    "CheckoutBuild": 4,
    "": 1,
    "ComputeClasspath": 4,
    "CloneRepository": 28,
    "ResolveDependency": 131,
    "TestProject": 403,
    "BuildProject": 580,
    "PushIncriminatedBuild": 8,
    "SquashRepository": 11
  },
  "nbLibraries": 138,
  "workspace": "./workspace",
  "pr-base-commit-id-url": "https://github.com/prestodb/presto/commit/344413762fb2dab7a036d86aa3a8d92d1b440eb0",
  "failingModule": "/root/workspace/prestodb/presto/223548341/presto-main"
}