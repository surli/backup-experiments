{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "phoenixnap/springmvc-raml-plugin",
  "failingModule": "/root/workspace/phoenixnap/springmvc-raml-plugin/294641463/springmvc-raml-parser",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 28,
  "error-types": [
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 213,
  "failing-test-cases": [
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue176RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue176RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/formUrlencodedTest\") @Validated public class FormUrlencodedTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateFormUrlencodedTest(         @RequestParam(name \u003d \"form_int_param\")         Long formIntParam,         @RequestParam(name \u003d \"form_string_param\")         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.MultipartFormTestController.java-----------------------------------  package com.gen.test;  import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/multipartFormTest\") @Validated public class MultipartFormTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateMultipartFormTest(         @RequestParam(name \u003d \"multipart_int_param\")         Long multipartIntParam,         @RequestParam(name \u003d \"multipart_string_param\")]         String mult...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/formUrlencodedTest\") @Validated public class FormUrlencodedTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateFormUrlencodedTest(         @RequestParam(name \u003d \"form_int_param\")         @Valid         Long formIntParam,         @RequestParam(name \u003d \"form_string_param\")         @Valid         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.MultipartFormTestController.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/multipartFormTest\") @Validated public class MultipartFormTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateMultipartFormTest(         @RequestParam(name \u003d \"multipart_int_param\")         @Valid         Long multipartIntParam,         @RequestParam(name \u003d \"multipart_string_param\")         @Valid]         String mult...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...a.util.Date; import [org.springframework.format.annotation.DateTimeFormat; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/dates\", produces \u003d \"application/json\") @Validated public class DateController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getDates(         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\")         Date dateOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"HH:mm:ss\")         Date timeOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         Date datetimeOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         Date datetimeNoFormat,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         Date datetimeRFC3339,         @RequestParam         @DateTimeFormat(pattern \u003d \"EEE, dd MMM yyyy HH:mm:ss z\")         Date datetimeRFC2616) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...a.util.Date; import [javax.validation.Valid; import org.springframework.format.annotation.DateTimeFormat; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/dates\", produces \u003d \"application/json\") @Validated public class DateController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getDates(         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\")         @Valid         Date dateOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"HH:mm:ss\")         @Valid         Date timeOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         @Valid         Date datetimeOnly,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         @Valid         Date datetimeNoFormat,         @RequestParam         @DateTimeFormat(pattern \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\")         @Valid         Date datetimeRFC3339,         @RequestParam         @DateTimeFormat(pattern \u003d \"EEE, dd MMM yyyy HH:mm:ss z\")         @Valid         Date datetimeRFC2616) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...rt javax.validation.[constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/b_resource\", produces \u003d \"application/json\") @Validated public class BResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBResource(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 3, max \u003d 13)         @RequestParam(name \u003d \"query_string_param\", required \u003d false)         String queryStringParam,         @Min(13L)         @Max(23L)         @RequestParam(name \u003d \"query_int_param\", required \u003d false)         Long queryIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/string/{uri_string_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getStringById(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 4, max \u003d 14)         @PathVariable(name \u003d \"uri_string_param\", required \u003d false)         String uriStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/integer/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntegerByUri_int_param(         @Min(14L)         @Max(24L)         @PathVariable(name \u003d \"uri_int_param\", required \u003d false)         Long uriIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import javax.validation.constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/c_resource\", produces \u003d \"application/json\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...rt javax.validation.[Valid; import javax.validation.constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/b_resource\", produces \u003d \"application/json\") @Validated public class BResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBResource(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 3, max \u003d 13)         @RequestParam(name \u003d \"query_string_param\", required \u003d false)         @Valid         String queryStringParam,         @Min(13L)         @Max(23L)         @RequestParam(name \u003d \"query_int_param\", required \u003d false)         @Valid         Long queryIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/string/{uri_string_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getStringById(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 4, max \u003d 14)         @PathVariable(name \u003d \"uri_string_param\", required \u003d false)         String uriStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/integer/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntegerByUri_int_param(         @Min(14L)         @Max(24L)         @PathVariable(name \u003d \"uri_int_param\", required \u003d false)         Long uriIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import javax.validation.constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/c_resource\", produces \u003d \"application/json\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         @Valid         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         @Valid         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...parser v.0.10.12)  *[  */ public interface BaseController {       /**      * No description      *      */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *      */     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(String id);      /**      * No description      *      */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *      */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c...parser v.0.10.12)  *[   */ public interface BaseController {       /**      * No description      *       */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *       */     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(String id);      /**      * No description      *       */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader);  } ] \u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader);  }] \u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...nt.Callable; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *      */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c...nt.Callable; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) {     ]        return null;...\u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...nt.Callable; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *      */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c...nt.Callable; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...parser v.0.10.12)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c...parser v.0.10.12)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 6,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...rt javax.validation.[constraints.Pattern; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/endpoint/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEndpointById(         @Pattern(regexp \u003d \"^.{1,255}$\")         @PathVariable(required \u003d false)         String id,         @Pattern(regexp \u003d \"^.{1,255}$\")         @RequestParam]         String para...\u003e but was:\u003c...rt javax.validation.[Valid; import javax.validation.constraints.Pattern; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/endpoint/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEndpointById(         @Pattern(regexp \u003d \"^.{1,255}$\")         @PathVariable(required \u003d false)         String id,         @Pattern(regexp \u003d \"^.{1,255}$\")         @RequestParam         @Valid]         String para...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest#applySpringFeignClient_shouldCreate_defaultVaules"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [org.springframework.cloud.netflix.feign.FeignClient; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * Some description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @FeignClient(url \u003d \"/api/base\", name \u003d \"baseClient\") public interface BaseClient {       /**      * Get all objects      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity getBase(         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"someDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"3\")]         BigDecimal ...\u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import org.springframework.cloud.netflix.feign.FeignClient; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * Some description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @FeignClient(url \u003d \"/api/base\", name \u003d \"baseClient\") public interface BaseClient {       /**      * Get all objects      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity getBase(         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"someDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"3\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(      @RequestHeader      HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders);  } ] \u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders);  }] \u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(      @RequestHeader      HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...\u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...parser v.0.10.12)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c...parser v.0.10.12)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...\u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... BaseController {   [ /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c... BaseController {   [    /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(      @RequestHeader      HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders);  } ] \u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders);  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [com.gen.test.model.TestT; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/enums\", produces \u003d \"application/json\") @Validated public class EnumController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEnums(         @RequestParam         TestT commonType) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import com.gen.test.model.TestT; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/enums\", produces \u003d \"application/json\") @Validated public class EnumController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEnums(         @RequestParam         @Valid         TestT commonType) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerInterfaceRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) {     ]        return null;...\u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... BaseController {   [ /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")]         BigDecimal ...\u003e but was:\u003c... BaseController {   [    /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid]         BigDecimal ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c....BigDecimal; import [com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader);  } ] \u003e but was:\u003c....BigDecimal; import [javax.validation.Valid; import com.gen.test.model.NamedResponseType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         @Valid         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         @Valid         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         @Valid         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader);  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_configuration_disableArray",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring3ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") public interface FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam]         String[] st...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") public interface FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         @Valid         String notArray,         @RequestParam         @Valid]         String[] st...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         @Valid         String notArray,         @RequestParam         @Valid         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         @Valid         String notArray,         @RequestParam         @Valid         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileControllerDecorator     implements FileController {      @Autowired     private FileController fileControllerDelegate;      /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam]         String stri...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileControllerDecorator     implements FileController {      @Autowired     private FileController fileControllerDelegate;      /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         @Valid         String notArray,         @RequestParam         @Valid]         String stri...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileControllerDecorator     implements FileController {      @Autowired     private FileController fileControllerDelegate;      /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam]         String[] st...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileControllerDecorator     implements FileController {      @Autowired     private FileController fileControllerDelegate;      /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         @Valid         String notArray,         @RequestParam         @Valid]         String[] st...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 5,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/b_resource\") @Validated public class BResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBResource(         @RequestParam(name \u003d \"query_string_param\")         String queryStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/str/{uri_string_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getStrById(         @PathVariable(name \u003d \"uri_string_param\")         String uriStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/int/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntById(         @PathVariable(name \u003d \"uri_int_param\")         Long uriIntDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/c_resource\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @RequestParam(name \u003d \"form_string_param\")]         String form...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/b_resource\") @Validated public class BResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBResource(         @RequestParam(name \u003d \"query_string_param\")         @Valid         String queryStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/str/{uri_string_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getStrById(         @PathVariable(name \u003d \"uri_string_param\")         String uriStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/int/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntById(         @PathVariable(name \u003d \"uri_int_param\")         Long uriIntDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @RestController @RequestMapping(\"/api/c_resource\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @RequestParam(name \u003d \"form_string_param\")         @Valid]         String form...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest#applySpring3ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateBase(         @RequestParam]         MultipartFi...\u003e but was:\u003c...m.gen.test;  import [javax.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.12)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateBase(         @RequestParam         @Valid]         MultipartFi...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}