{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "phoenixnap/springmvc-raml-plugin",
  "failingModule": "/root/workspace/phoenixnap/springmvc-raml-plugin/314782565/springmvc-raml-parser",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 9,
  "error-types": [
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 222,
  "failing-test-cases": [
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue176RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue176RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...c ResponseEntity\u003c?\u003e [updateFormUrlencodedTest(         @RequestParam(name \u003d \"form_int_param\")         Long formIntParam,         @RequestParam(name \u003d \"form_string_param\")         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.MultipartFormTestController.java-----------------------------------  package com.gen.test;  import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/multipartFormTest\") @Validated public class MultipartFormTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e upd]ateMultipartFormTest...\u003e but was:\u003c...c ResponseEntity\u003c?\u003e [createFormUrlencodedTest(         @RequestParam(name \u003d \"form_int_param\")         Long formIntParam,         @RequestParam(name \u003d \"form_string_param\")         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.MultipartFormTestController.java-----------------------------------  package com.gen.test;  import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/multipartFormTest\") @Validated public class MultipartFormTestController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e cre]ateMultipartFormTest...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue204RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue204RulesTest#applySpring4ControllerInterfaceRule_shouldCreate_valid_class_inheritance"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...c ResponseEntity\u003c?\u003e [updateTest(         @RequestParam         Long[] locationIds,         @RequestParam         String[] someStrings);  }]\u003e but was:\u003c...c ResponseEntity\u003c?\u003e [createTest(         @RequestParam         Long[] locationIds,         @RequestParam         String[] someStrings);  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerInterfaceRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @Validated @RequestMapping(\"/api/base\") public interface BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest);  } ] \u003e but was:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.CreateBaseRequest; import com.gen.test.model.CreateBaseResponse; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @Validated @RequestMapping(\"/api/base\") public interface BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cCreateBaseResponse\u003e createBase(         @Valid         @RequestBody         CreateBaseRequest createBaseRequest);  }] \u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public UpdateBaseResponse updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.CreateBaseRequest; import com.gen.test.model.CreateBaseResponse; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public CreateBaseResponse createBase(         @Valid         @RequestBody         CreateBaseRequest createBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ public interface BaseController {       /**      * No description      *      */     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(         @Valid         UpdateBaseRequest updateBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return this.baseControllerDelegate.updateBase(updateBaseRequest);     }  } ] \u003e but was:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.CreateBaseRequest; import com.gen.test.model.CreateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003cCreateBaseResponse\u003e createBase(         @Valid         CreateBaseRequest createBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.CreateBaseRequest; import com.gen.test.model.CreateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cCreateBaseResponse\u003e createBase(         @Valid         @RequestBody         CreateBaseRequest createBaseRequest) {         return this.baseControllerDelegate.createBase(createBaseRequest);     }  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...c ResponseEntity\u003c?\u003e [updateCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...c ResponseEntity\u003c?\u003e [createCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...c ResponseEntity\u003c?\u003e [upd]ateCResource(       ...\u003e but was:\u003c...c ResponseEntity\u003c?\u003e [cre]ateCResource(       ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue199RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue199RulesTest#applySpring4ControllerInterfaceRule_shouldCreate_valid_class_inheritance"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...new Employee.      *[      */     public Employee() {         super();     }      /**      * Creates a new Employee.      *      */     public Employee(String name, String skill) {         super();         this.name \u003d name;         this.skill \u003d skill;     }      /**      * Returns the name.      *      * @return      *     name      */     public String getName() {         return name;     }      /**      * Set the name.      *      * @param name      *     the new name      */     public void setName(String name) {         this.name \u003d name;     }      /**      * Returns the skill.      *      * @return      *     skill      */     public String getSkill() {         return skill;     }      /**      * Set the skill.      *      * @param skill      *     the new skill      */     public void setSkill(String skill) {         this.skill \u003d skill;     }      public int hashCode() {         return new HashCodeBuilder().append(name).append(skill).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Employee otherObject \u003d ((Employee) other);         return new EqualsBuilder().append(name, otherObject.name).append(skill, otherObject.skill).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"name\", name).append(\"skill\", skill).toString();     }  } -----------------------------------com.gen.test.model.EmployeeExtended.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeExtended     extends Employee     implements Serializable {      private String job;      /**      * Creates a new EmployeeExtended.      *      */     public EmployeeExtended() {         super();     }      /**      * Creates a new EmployeeExtended.      *      */     public EmployeeExtended(String name, String skill, String job) {         super(name, skill);         this.job \u003d job;     }      /**      * Returns the job.      *      * @return      *     job      */     public String getJob() {         return job;     }      /**      * Set the job.      *      * @param job      *     the new job      */     public void setJob(String job) {         this.job \u003d job;     }      public int hashCode() {         return new HashCodeBuilder().appendSuper(super.hashCode()).append(job).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeExtended otherObject \u003d ((EmployeeExtended) other);         return new EqualsBuilder().appendSuper(super.equals(otherObject)).append(job, otherObject.job).isEquals();     }      public String toString() {         return new ToStringBuilder(this).appendSuper(super.toString()).append(\"job\", job).toString();     }  } -----------------------------------com.gen.test.model.EmployeeRq.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import java.util.ArrayList; import java.util.List; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeRq implements Serializable {      private List\u003cEmployee\u003e employees \u003d new ArrayList\u003cEmployee\u003e();      /**      * Creates a new EmployeeRq.      *      */     public EmployeeRq() {         super();     }      /**      * Creates a new EmployeeRq.      *      */     public EmployeeRq(List\u003cEmployee\u003e employees) {         super();         this.employees \u003d employees;     }      /**      * Returns the employees.      *      * @return      *     employees      */     public List\u003cEmployee\u003e getEmployees() {         return employees;     }      /**      * Set the employees.      *      * @param employees      *     the new employees      */     public void setEmployees(List\u003cEmployee\u003e employees) {         this.employees \u003d employees;     }      public int hashCode() {         return new HashCodeBuilder().append(employees).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeRq otherObject \u003d ((EmployeeRq) other);         return new EqualsBuilder().append(employees, otherObject.employees).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"employees\", employees).toString();     }  } -----------------------------------com.gen.test.model.EmployeeRs.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import java.util.ArrayList; import java.util.List; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeRs implements Serializable {      private List\u003cEmployeeExtended\u003e employees \u003d new ArrayList\u003cEmployeeExtended\u003e();      /**      * Creates a new EmployeeRs.      *      */     public EmployeeRs() {         super();     }      /**      * Creates a new EmployeeRs.      *      */     public EmployeeRs(List\u003cEmployeeExtended\u003e employees) {         super();         this.employees \u003d employees;     }      /**      * Returns the employees.      *      * @return      *     employees      */     public List\u003cEmployeeExtended\u003e getEmployees() {         return employees;     }      /**      * Set the employees.      *      * @param employees      *     the new employees      */     public void setEmployees(List\u003cEmployeeExtended\u003e employees) {         this.employees \u003d employees;     }      public int hashCode() {         return new HashCodeBuilder().append(employees).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeRs otherObject \u003d ((EmployeeRs) other);         return new EqualsBuilder().append(employees, otherObject.employees).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"employees\", employees).toString();     }  } -----------------------------------com.gen.test.EmployeeController.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.EmployeeRq; import com.gen.test.model.EmployeeRs; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @Validated @RequestMapping(value \u003d \"/api/employee\", produces \u003d \"application/json\") public interface EmployeeController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cEmployeeRs\u003e upd]ateEmployee(        ...\u003e but was:\u003c...new Employee.      *[       */     public Employee() {         super();     }      /**      * Creates a new Employee.      *       */     public Employee(String name, String skill) {         super();         this.name \u003d name;         this.skill \u003d skill;     }      /**      * Returns the name.      *       * @return      *     name      */     public String getName() {         return name;     }      /**      * Set the name.      *       * @param name      *     the new name      */     public void setName(String name) {         this.name \u003d name;     }      /**      * Returns the skill.      *       * @return      *     skill      */     public String getSkill() {         return skill;     }      /**      * Set the skill.      *       * @param skill      *     the new skill      */     public void setSkill(String skill) {         this.skill \u003d skill;     }      public int hashCode() {         return new HashCodeBuilder().append(name).append(skill).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Employee otherObject \u003d ((Employee) other);         return new EqualsBuilder().append(name, otherObject.name).append(skill, otherObject.skill).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"name\", name).append(\"skill\", skill).toString();     }  } -----------------------------------com.gen.test.model.EmployeeExtended.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeExtended     extends Employee     implements Serializable {      private String job;      /**      * Creates a new EmployeeExtended.      *       */     public EmployeeExtended() {         super();     }      /**      * Creates a new EmployeeExtended.      *       */     public EmployeeExtended(String name, String skill, String job) {         super(name, skill);         this.job \u003d job;     }      /**      * Returns the job.      *       * @return      *     job      */     public String getJob() {         return job;     }      /**      * Set the job.      *       * @param job      *     the new job      */     public void setJob(String job) {         this.job \u003d job;     }      public int hashCode() {         return new HashCodeBuilder().appendSuper(super.hashCode()).append(job).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeExtended otherObject \u003d ((EmployeeExtended) other);         return new EqualsBuilder().appendSuper(super.equals(otherObject)).append(job, otherObject.job).isEquals();     }      public String toString() {         return new ToStringBuilder(this).appendSuper(super.toString()).append(\"job\", job).toString();     }  } -----------------------------------com.gen.test.model.EmployeeRq.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import java.util.ArrayList; import java.util.List; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeRq implements Serializable {      private List\u003cEmployee\u003e employees \u003d new ArrayList\u003cEmployee\u003e();      /**      * Creates a new EmployeeRq.      *       */     public EmployeeRq() {         super();     }      /**      * Creates a new EmployeeRq.      *       */     public EmployeeRq(List\u003cEmployee\u003e employees) {         super();         this.employees \u003d employees;     }      /**      * Returns the employees.      *       * @return      *     employees      */     public List\u003cEmployee\u003e getEmployees() {         return employees;     }      /**      * Set the employees.      *       * @param employees      *     the new employees      */     public void setEmployees(List\u003cEmployee\u003e employees) {         this.employees \u003d employees;     }      public int hashCode() {         return new HashCodeBuilder().append(employees).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeRq otherObject \u003d ((EmployeeRq) other);         return new EqualsBuilder().append(employees, otherObject.employees).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"employees\", employees).toString();     }  } -----------------------------------com.gen.test.model.EmployeeRs.java-----------------------------------  package com.gen.test.model;  import java.io.Serializable; import java.util.ArrayList; import java.util.List; import org.apache.commons.lang.builder.EqualsBuilder; import org.apache.commons.lang.builder.HashCodeBuilder; import org.apache.commons.lang.builder.ToStringBuilder;  public class EmployeeRs implements Serializable {      private List\u003cEmployeeExtended\u003e employees \u003d new ArrayList\u003cEmployeeExtended\u003e();      /**      * Creates a new EmployeeRs.      *       */     public EmployeeRs() {         super();     }      /**      * Creates a new EmployeeRs.      *       */     public EmployeeRs(List\u003cEmployeeExtended\u003e employees) {         super();         this.employees \u003d employees;     }      /**      * Returns the employees.      *       * @return      *     employees      */     public List\u003cEmployeeExtended\u003e getEmployees() {         return employees;     }      /**      * Set the employees.      *       * @param employees      *     the new employees      */     public void setEmployees(List\u003cEmployeeExtended\u003e employees) {         this.employees \u003d employees;     }      public int hashCode() {         return new HashCodeBuilder().append(employees).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         EmployeeRs otherObject \u003d ((EmployeeRs) other);         return new EqualsBuilder().append(employees, otherObject.employees).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"employees\", employees).toString();     }  } -----------------------------------com.gen.test.EmployeeController.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.EmployeeRq; import com.gen.test.model.EmployeeRs; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @Validated @RequestMapping(value \u003d \"/api/employee\", produces \u003d \"application/json\") public interface EmployeeController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cEmployeeRs\u003e cre]ateEmployee(        ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest#applySpring3ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...parser v.0.10.13)  *[  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e upd]ateBase(         @Re...\u003e but was:\u003c...parser v.0.10.13)  *[   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e cre]ateBase(         @Re...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}