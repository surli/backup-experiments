{
  "pr-base-commit-id": "293d2fd177551736e4270c31cf4c7e65c4912352",
  "totalNumberSkippingTests": 0,
  "pr-head-commit-id": "9eec07b310b4ac9e99342cfd632293acd2a45d8b",
  "pr-remote-repo": "lukaszlenart/struts",
  "error-types": [
    "junit.framework.ComparisonFailure"
  ],
  "totalNumberFailingTests": 5,
  "buildid": 224702919,
  "totalNumberErroringTests": 0,
  "freeMemory": 138336376,
  "hostname": "repairnator",
  "is-pr": "true",
  "bugType": "only_fail",
  "totalNumberRunningTests": 1717,
  "pr-head-commit-id-url": "https://github.com/lukaszlenart/struts/commit/9eec07b310b4ac9e99342cfd632293acd2a45d8b",
  "pr-id": 130,
  "repo": "apache/struts",
  "failing-test-cases": [
    {
      "className": "org.apache.struts2.views.jsp.ui.FormTagTest",
      "failingMethods": [
        "org.apache.struts2.views.jsp.ui.FormTagTest#testFormWithCustomOnsubmitEnabledWithValidateEnabled3 on instance testFormWithCustomOnsubmitEnabledWithValidateEnabled3",
        "org.apache.struts2.views.jsp.ui.FormTagTest#testFormWithCustomOnsubmitEnabledWithValidateEnabled1 on instance testFormWithCustomOnsubmitEnabledWithValidateEnabled1",
        "org.apache.struts2.views.jsp.ui.FormTagTest#testFormWithCustomOnsubmitEnabledWithValidateEnabled4 on instance testFormWithCustomOnsubmitEnabledWithValidateEnabled4"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...ld[0].type;if(type\u003d\u003d[\u0027select-one\u0027||type\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!]\u003dnull){varvalue\u003dpars...\u003e but was:\u003c...ld[0].type;if(type\u003d\u003d[\u003d\u0027select-one\u0027||type\u003d\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!\u003d]\u003dnull){varvalue\u003dpars...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...ld[0].type;if(type\u003d\u003d[\u0027select-one\u0027||type\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!]\u003dnull){varvalue\u003dpars...\u003e but was:\u003c...ld[0].type;if(type\u003d\u003d[\u003d\u0027select-one\u0027||type\u003d\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!\u003d]\u003dnull){varvalue\u003dpars...\u003e",
          "isError": false
        },
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003c...ld[0].type;if(type\u003d\u003d[\u0027select-one\u0027||type\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!]\u003dnull){varvalue\u003dpars...\u003e but was:\u003c...ld[0].type;if(type\u003d\u003d[\u003d\u0027select-one\u0027||type\u003d\u003d\u003d\u0027select-multiple\u0027){return(field.selectedIndex\u003d\u003d\u003d-1?\"\":field.options[field.selectedIndex].value);}elseif(type\u003d\u003d\u003d\u0027checkbox\u0027||type\u003d\u003d\u003d\u0027radio\u0027){if(!field.length){field\u003d[field];}for(vari\u003d0;i\u003cfield.length;i++){if(field[i].checked){returnfield[i].value;}}return\"\";}returnfield.value;}form\u003ddocument.getElementById(\"doubleValidationAction\");clearErrorMessages(form);clearErrorLabels(form);varerrors\u003dfalse;varcontinueValidation\u003dtrue;//fieldname:myUpDownSelectTag//validatorname:doubleif(form.elements[\u0027myUpDownSelectTag\u0027]){field\u003dform.elements[\u0027myUpDownSelectTag\u0027];varerror\u003d\"barmustbebetween6000.1and10000.1.\";varfieldValue\u003dgetFieldValue(field);if(continueValidation\u0026\u0026fieldValue!\u003d]\u003dnull){varvalue\u003dpars...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    },
    {
      "className": "com.opensymphony.xwork2.config.providers.EnvsValueSubstitutorTest",
      "failingMethods": [
        "com.opensymphony.xwork2.config.providers.EnvsValueSubstitutorTest#testSimpleValue on instance testSimpleValue"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cnull\u003e but was:\u003c${env.USER}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.opensymphony.xwork2.config.providers.XmlConfigurationProviderEnvsSubstitutionTest",
      "failingMethods": [
        "com.opensymphony.xwork2.config.providers.XmlConfigurationProviderEnvsSubstitutionTest#testSubstitution on instance testSubstitution"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "junit.framework.ComparisonFailure",
          "failureDetail": "expected:\u003cnull\u003e but was:\u003c${env.USER}\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ],
  "step-durations": {
    "CheckoutBuild": 4,
    "ComputeClasspath": 3,
    "CloneRepository": 19,
    "ResolveDependency": 37,
    "TestProject": 86,
    "BuildProject": 106,
    "GatherTestInformation": 0,
    "PushIncriminatedBuild": 7,
    "SquashRepository": 9
  },
  "nbLibraries": 60,
  "workspace": "./workspace",
  "pr-base-commit-id-url": "https://github.com/apache/struts/commit/293d2fd177551736e4270c31cf4c7e65c4912352",
  "totalMemory": 332922880,
  "nbCPU": 4,
  "failingModule": "/root/workspace/apache/struts/224702919/core"
}