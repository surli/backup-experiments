{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "phoenixnap/springmvc-raml-plugin",
  "failingModule": "/root/workspace/phoenixnap/springmvc-raml-plugin/318209900/springmvc-raml-parser",
  "hostname": "spirals-librepair",
  "totalNumberFailingTests": 10,
  "error-types": [
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 226,
  "failing-test-cases": [
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue181RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue181RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...tity\u003c?\u003e updateUserBy[Id(         @PathVariable         Long userId,         @Valid         @RequestBody         User user) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{userId}\", method \u003d RequestMethod.PATCH)     public ResponseEntity\u003c?\u003e modifyUserById(         @PathVariable         Long userId,         @RequestBody         User user) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ] \u003e but was:\u003c...tity\u003c?\u003e updateUserBy[UserId(         @PathVariable         Long userId,         @Valid         @RequestBody         User user) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{userId}\", method \u003d RequestMethod.PATCH)     public ResponseEntity\u003c?\u003e modifyUserByUserId(         @PathVariable         Long userId,         @RequestBody         User user) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue212RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue212RulesTest#testWithMatchingResourseNameAndPathVariable",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue212RulesTest#testWithLongRootUrl"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... new Booking.      *[      */     public Booking() {         super();     }      /**      * Creates a new Booking.      *      */     public Booking(String firstName, String lastName) {         super();         this.firstName \u003d firstName;         this.lastName \u003d lastName;     }      /**      * Returns the firstName.      *      * @return      *     firstName      */     public String getFirstName() {         return firstName;     }      /**      * Set the firstName.      *      * @param firstName      *     the new firstName      */     public void setFirstName(String firstName) {         this.firstName \u003d firstName;     }      /**      * Returns the lastName.      *      * @return      *     lastName      */     public String getLastName() {         return lastName;     }      /**      * Set the lastName.      *      * @param lastName      *     the new lastName      */     public void setLastName(String lastName) {         this.lastName \u003d lastName;     }      public int hashCode() {         return new HashCodeBuilder().append(firstName).append(lastName).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Booking otherObject \u003d ((Booking) other);         return new EqualsBuilder().append(firstName, otherObject.firstName).append(lastName, otherObject.lastName).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"firstName\", firstName).append(\"lastName\", lastName).toString();     }  } -----------------------------------com.gen.test.BookingController.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.List; import com.gen.test.model.Booking; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @Validated @RequestMapping(\"/api/bookings\") public interface BookingController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003cBooking\u003e\u003e getBookings();      /**      * No description      *      */     @RequestMapping(value \u003d \"/{bookingRef}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cBooking\u003e getBookingById](         @PathVaria...\u003e but was:\u003c... new Booking.      *[       */     public Booking() {         super();     }      /**      * Creates a new Booking.      *       */     public Booking(String firstName, String lastName) {         super();         this.firstName \u003d firstName;         this.lastName \u003d lastName;     }      /**      * Returns the firstName.      *       * @return      *     firstName      */     public String getFirstName() {         return firstName;     }      /**      * Set the firstName.      *       * @param firstName      *     the new firstName      */     public void setFirstName(String firstName) {         this.firstName \u003d firstName;     }      /**      * Returns the lastName.      *       * @return      *     lastName      */     public String getLastName() {         return lastName;     }      /**      * Set the lastName.      *       * @param lastName      *     the new lastName      */     public void setLastName(String lastName) {         this.lastName \u003d lastName;     }      public int hashCode() {         return new HashCodeBuilder().append(firstName).append(lastName).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Booking otherObject \u003d ((Booking) other);         return new EqualsBuilder().append(firstName, otherObject.firstName).append(lastName, otherObject.lastName).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"firstName\", firstName).append(\"lastName\", lastName).toString();     }  } -----------------------------------com.gen.test.BookingController.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.List; import com.gen.test.model.Booking; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @Validated @RequestMapping(\"/api/bookings\") public interface BookingController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003cBooking\u003e\u003e getBookings();      /**      * No description      *       */     @RequestMapping(value \u003d \"/{bookingRef}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cBooking\u003e getBookingByBookingRef](         @PathVaria...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... new Booking.      *[      */     public Booking() {         super();     }      /**      * Creates a new Booking.      *      */     public Booking(String firstName, String lastName) {         super();         this.firstName \u003d firstName;         this.lastName \u003d lastName;     }      /**      * Returns the firstName.      *      * @return      *     firstName      */     public String getFirstName() {         return firstName;     }      /**      * Set the firstName.      *      * @param firstName      *     the new firstName      */     public void setFirstName(String firstName) {         this.firstName \u003d firstName;     }      /**      * Returns the lastName.      *      * @return      *     lastName      */     public String getLastName() {         return lastName;     }      /**      * Set the lastName.      *      * @param lastName      *     the new lastName      */     public void setLastName(String lastName) {         this.lastName \u003d lastName;     }      public int hashCode() {         return new HashCodeBuilder().append(firstName).append(lastName).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Booking otherObject \u003d ((Booking) other);         return new EqualsBuilder().append(firstName, otherObject.firstName).append(lastName, otherObject.lastName).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"firstName\", firstName).append(\"lastName\", lastName).toString();     }  } -----------------------------------com.gen.test.BookingController.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.List; import com.gen.test.model.Booking; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *  */ @RestController @Validated @RequestMapping(\"/api/customers/{customerId}/bookings\") public interface BookingController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003cBooking\u003e\u003e getCustomerBookings(         @PathVariable         BigDecimal customerId);      /**      * No description      *      */     @RequestMapping(value \u003d \"/{bookingRef}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cBooking\u003e get]ByBookingRef(       ...\u003e but was:\u003c... new Booking.      *[       */     public Booking() {         super();     }      /**      * Creates a new Booking.      *       */     public Booking(String firstName, String lastName) {         super();         this.firstName \u003d firstName;         this.lastName \u003d lastName;     }      /**      * Returns the firstName.      *       * @return      *     firstName      */     public String getFirstName() {         return firstName;     }      /**      * Set the firstName.      *       * @param firstName      *     the new firstName      */     public void setFirstName(String firstName) {         this.firstName \u003d firstName;     }      /**      * Returns the lastName.      *       * @return      *     lastName      */     public String getLastName() {         return lastName;     }      /**      * Set the lastName.      *       * @param lastName      *     the new lastName      */     public void setLastName(String lastName) {         this.lastName \u003d lastName;     }      public int hashCode() {         return new HashCodeBuilder().append(firstName).append(lastName).toHashCode();     }      public boolean equals(Object other) {         if (other \u003d\u003d null) {             return false;         }         if (other \u003d\u003d this) {             return true;         }         if (this.getClass()!\u003d other.getClass()) {             return false;         }         Booking otherObject \u003d ((Booking) other);         return new EqualsBuilder().append(firstName, otherObject.firstName).append(lastName, otherObject.lastName).isEquals();     }      public String toString() {         return new ToStringBuilder(this).append(\"firstName\", firstName).append(\"lastName\", lastName).toString();     }  } -----------------------------------com.gen.test.BookingController.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.List; import com.gen.test.model.Booking; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @Validated @RequestMapping(\"/api/customers/{customerId}/bookings\") public interface BookingController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003cBooking\u003e\u003e getCustomerBookings(         @PathVariable         BigDecimal customerId);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{bookingRef}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cBooking\u003e getBooking]ByBookingRef(       ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue175RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...ntity\u003c?\u003e getStringBy[Id(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 4, max \u003d 14)         @PathVariable(name \u003d \"uri_string_param\", required \u003d false)         Optional\u003cString\u003e uriStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/integer/{uri_int_param}\",         \"/integer/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntegerByUri_int_param(         @Min(14L)         @Max(24L)         @PathVariable(name \u003d \"uri_int_param\", required \u003d false)         Optional\u003cLong\u003e uriIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import javax.validation.constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(value \u003d \"/api/c_resource\", produces \u003d \"application/json\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...ntity\u003c?\u003e getStringBy[Uri_string_param(         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 4, max \u003d 14)         @PathVariable(name \u003d \"uri_string_param\", required \u003d false)         Optional\u003cString\u003e uriStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/integer/{uri_int_param}\",         \"/integer/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntegerByUri_int_param(         @Min(14L)         @Max(24L)         @PathVariable(name \u003d \"uri_int_param\", required \u003d false)         Optional\u003cLong\u003e uriIntParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } -----------------------------------com.gen.test.CResourceController.java-----------------------------------  package com.gen.test;  import javax.validation.constraints.Max; import javax.validation.constraints.Min; import javax.validation.constraints.Pattern; import javax.validation.constraints.Size; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(value \u003d \"/api/c_resource\", produces \u003d \"application/json\") @Validated public class CResourceController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e updateCResource(         @Min(15L)         @Max(25L)         @RequestParam(name \u003d \"form_int_param\", required \u003d false)         Long formIntParam,         @Pattern(regexp \u003d \"^[a-z]+$\")         @Size(min \u003d 5, max \u003d 15)         @RequestParam(name \u003d \"form_string_param\", required \u003d false)         String formStringParam) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.ShortcutMappingsTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.ShortcutMappingsTest#applySpring4ControllerInterfaceWithShortcutAnnotationsRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...parser v.0.10.13)  *[  */ @RestController @Validated @RequestMapping(value \u003d \"/api/organization/persons/managers\", produces \u003d \"application/json\") public interface PersonManagerController {       /**      * No description      *      */     @GetMapping     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers();      /**      * No description      *      */     @PostMapping     public ResponseEntity\u003cManager\u003e createPersonsManager(         @Valid         @RequestBody         Manager manager);      /**      * No description      *      */     @PatchMapping     public ResponseEntity\u003cManager\u003e modifyPersonsManagers(         @RequestBody         Manager manager);      /**      * No description      *      */     @PutMapping(\"/{id}\")     public ResponseEntity\u003c?\u003e updateById(         @PathVariable         String id,         @Valid         @RequestBody         Manager manager);      /**      * No description      *      */     @DeleteMapping(\"/{id}\")     public ResponseEntity\u003c?\u003e delete]ById(         @PathV...\u003e but was:\u003c...parser v.0.10.13)  *[   */ @RestController @Validated @RequestMapping(value \u003d \"/api/organization/persons/managers\", produces \u003d \"application/json\") public interface PersonManagerController {       /**      * No description      *       */     @GetMapping     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers();      /**      * No description      *       */     @PostMapping     public ResponseEntity\u003cManager\u003e createPersonsManager(         @Valid         @RequestBody         Manager manager);      /**      * No description      *       */     @PatchMapping     public ResponseEntity\u003cManager\u003e modifyPersonsManagers(         @RequestBody         Manager manager);      /**      * No description      *       */     @PutMapping(\"/{id}\")     public ResponseEntity\u003c?\u003e updateManagerById(         @PathVariable         String id,         @Valid         @RequestBody         Manager manager);      /**      * No description      *       */     @DeleteMapping(\"/{id}\")     public ResponseEntity\u003c?\u003e deleteManager]ById(         @PathV...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue177RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...seEntity\u003c?\u003e getStrBy[Id(         @PathVariable(name \u003d \"uri_string_param\")         String uriStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/int/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntById](         @PathVaria...\u003e but was:\u003c...seEntity\u003c?\u003e getStrBy[Uri_string_param(         @PathVariable(name \u003d \"uri_string_param\")         String uriStrDisplayName) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/int/{uri_int_param}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getIntByUri_int_param](         @PathVaria...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue208RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue208RulesTest#applySpring4ControllerInterfaceRule_shouldCreate_valid_class_inheritance"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...roduct\u003e getProductBy[Id(         @PathVariable         Long productId);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{productId}\", method \u003d RequestMethod.PUT)     public ResponseEntity\u003c?\u003e updateProductById(         @PathVariable         Long productId,         @Valid         @RequestBody         ProductUpdate productUpdate);  }]\u003e but was:\u003c...roduct\u003e getProductBy[ProductId(         @PathVariable         Long productId);      /**      * No description      *       */     @RequestMapping(value \u003d \"/{productId}\", method \u003d RequestMethod.PUT)     public ResponseEntity\u003c?\u003e updateProductByProductId(         @PathVariable         Long productId,         @Valid         @RequestBody         ProductUpdate productUpdate);  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest#applySpringFeignClient_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...odel.Song\u003e getSongBy[Id(         @PathVariable         String songId);      /**      * Updates song      *       */     @RequestMapping(value \u003d \"/{songId}\", method \u003d RequestMethod.PUT)     public ResponseEntity\u003ccom.gen.test.model.Song\u003e updateSongById(         @PathVariable         String songId,         @javax.validation.Valid         @org.springframework.web.bind.annotation.RequestBody         com.gen.test.model.Song song);      /**      * Deletes song      *       */     @RequestMapping(value \u003d \"/{songId}\", method \u003d RequestMethod.DELETE)     public ResponseEntity deleteSongBy]Id(         @PathVar...\u003e but was:\u003c...odel.Song\u003e getSongBy[SongId(         @PathVariable         String songId);      /**      * Updates song      *       */     @RequestMapping(value \u003d \"/{songId}\", method \u003d RequestMethod.PUT)     public ResponseEntity\u003ccom.gen.test.model.Song\u003e updateSongBySongId(         @PathVariable         String songId,         @javax.validation.Valid         @org.springframework.web.bind.annotation.RequestBody         com.gen.test.model.Song song);      /**      * Deletes song      *       */     @RequestMapping(value \u003d \"/{songId}\", method \u003d RequestMethod.DELETE)     public ResponseEntity deleteSongBySong]Id(         @PathVar...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue215RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue215RulesTest#optional_param_as_resource_level",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue215RulesTest#two_optional_parms"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...ity\u003cString\u003e getCarBy[Id(Optional\u003cBigDecimal\u003e carId);      /**      * No description      *       */     public ResponseEntity\u003cString\u003e getWheelById(Optional\u003cBigDecimal\u003e wheelId, Optional\u003cBigDecimal\u003e carId);  } -----------------------------------com.gen.test.CarControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.Optional; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/cars\") @Validated public class CarControllerDecorator     implements CarController {      @Autowired     private CarController carControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}\",         \"/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getCarById(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e carId) {         return this.carControllerDelegate.getCarById(carId);     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}/wheels/{wheelId}\",         \"/wheels/{wheelId}\",         \"/wheels/\",         \"/{carId}/wheels/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getWheelById(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e wheelId,         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e carId) {         return this.carControllerDelegate.getWheelBy]Id(wheelId, carId); ...\u003e but was:\u003c...ity\u003cString\u003e getCarBy[CarId(Optional\u003cBigDecimal\u003e carId);      /**      * No description      *       */     public ResponseEntity\u003cString\u003e getWheelByWheelId(Optional\u003cBigDecimal\u003e wheelId, Optional\u003cBigDecimal\u003e carId);  } -----------------------------------com.gen.test.CarControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.Optional; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/cars\") @Validated public class CarControllerDecorator     implements CarController {      @Autowired     private CarController carControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}\",         \"/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getCarByCarId(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e carId) {         return this.carControllerDelegate.getCarByCarId(carId);     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}/wheels/{wheelId}\",         \"/wheels/{wheelId}\",         \"/wheels/\",         \"/{carId}/wheels/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getWheelByWheelId(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e wheelId,         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e carId) {         return this.carControllerDelegate.getWheelByWheel]Id(wheelId, carId); ...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...ity\u003cString\u003e getCarBy[Id(BigDecimal carId);      /**      * No description      *       */     public ResponseEntity\u003cString\u003e getWheelById(Optional\u003cBigDecimal\u003e wheelId, BigDecimal carId);  } -----------------------------------com.gen.test.CarControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.Optional; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/cars\") @Validated public class CarControllerDecorator     implements CarController {      @Autowired     private CarController carControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/{carId}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getCarById(         @PathVariable         BigDecimal carId) {         return this.carControllerDelegate.getCarById(carId);     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}/wheels/{wheelId}\",         \"/{carId}/wheels/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getWheelById(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e wheelId,         @PathVariable         BigDecimal carId) {         return this.carControllerDelegate.getWheelBy]Id(wheelId, carId); ...\u003e but was:\u003c...ity\u003cString\u003e getCarBy[CarId(BigDecimal carId);      /**      * No description      *       */     public ResponseEntity\u003cString\u003e getWheelByWheelId(Optional\u003cBigDecimal\u003e wheelId, BigDecimal carId);  } -----------------------------------com.gen.test.CarControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.Optional; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.13)  *   */ @RestController @RequestMapping(\"/api/cars\") @Validated public class CarControllerDecorator     implements CarController {      @Autowired     private CarController carControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/{carId}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getCarByCarId(         @PathVariable         BigDecimal carId) {         return this.carControllerDelegate.getCarByCarId(carId);     }      /**      * No description      *       */     @RequestMapping(value \u003d {         \"/{carId}/wheels/{wheelId}\",         \"/{carId}/wheels/\"     }, method \u003d RequestMethod.GET)     public ResponseEntity\u003cString\u003e getWheelByWheelId(         @PathVariable(required \u003d false)         Optional\u003cBigDecimal\u003e wheelId,         @PathVariable         BigDecimal carId) {         return this.carControllerDelegate.getWheelByWheel]Id(wheelId, carId); ...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    }
  ]
}