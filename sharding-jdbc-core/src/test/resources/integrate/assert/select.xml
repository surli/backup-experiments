<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <sql id="assertSelectEqualsWithSingleTable" value="SELECT * FROM t_order WHERE user_id = %s AND order_id = %s">
        <sharding-rule value="tbl">
            <data parameter="10,1000" expected="select/SelectEqualsWithSingleTable_0.xml" />
            <data parameter="11,1109" expected="select/SelectEqualsWithSingleTable_1.xml" />
            <data parameter="12,1000" />
        </sharding-rule>
        <sharding-rule value="db,masterslave,dbtbl">
            <data parameter="10,1000" expected="select/SelectEqualsWithSingleTable_0.xml" />
            <data parameter="12,1201" expected="select/SelectEqualsWithSingleTable_1.xml" />
            <data parameter="12,1000" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectBetweenWithSingleTable" value="SELECT * FROM t_order WHERE user_id BETWEEN %s AND %s AND order_id BETWEEN %s AND %s ORDER BY user_id, order_id">
        <sharding-rule value="tbl,masterslave,dbtbl">
            <data parameter="10,12,1009,1108" expected="select/SelectBetweenWithSingleTable.xml" />
        </sharding-rule>
        <sharding-rule value="db">
            <data parameter="10,12,1001,1200" expected="select/SelectBetweenWithSingleTable.xml" />
        </sharding-rule>
        <data parameter="10,12,1309,1408" />
    </sql>
    <sql id="assertSelectInWithSingleTable" value="SELECT * FROM t_order WHERE user_id IN (%s, %s, %s) AND order_id IN (%s, %s) ORDER BY user_id, order_id">
        <sharding-rule value="tbl">
            <data parameter="10,11,15,1009,1108" expected="select/SelectInWithSingleTable_0.xml" />
            <data parameter="10,12,15,1009,1108" expected="select/SelectInWithSingleTable_1.xml" />
            <data parameter="10,12,15,1309,1408" />
        </sharding-rule>
        <sharding-rule value="db">
            <data parameter="10,12,15,1000,1201" expected="select/SelectInWithSingleTable_0.xml" />
            <data parameter="10,12,15,1000,1101" expected="select/SelectInWithSingleTable_1.xml" />
            <data parameter="10,12,15,1309,1408" />
        </sharding-rule>
        <sharding-rule value="masterslave,dbtbl">
            <data parameter="10,12,15,1009,1208" expected="select/SelectInWithSingleTable_0.xml" />
            <data parameter="10,12,15,1009,1108" expected="select/SelectInWithSingleTable_1.xml" />
            <data parameter="10,12,15,1309,1408" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectIterator" value="SELECT t.* FROM t_order_item t WHERE t.item_id IN (%s, %s)">
        <sharding-rule value="tbl">
            <data parameter="100000,100001" expected="select/SelectIteratorSql_0.xml" />
            <data parameter="100900,100901" expected="select/SelectIteratorSql_1.xml" />
            <data parameter="100000,100900" expected="select/SelectIteratorSql_2.xml" />
            <data parameter="100000,100200" expected="select/SelectIteratorSql_3.xml" />
        </sharding-rule>
        <sharding-rule value="db">
            <data parameter="100001,100002" expected="select/SelectIteratorSql_0.xml" />
            <data parameter="200101,200102" expected="select/SelectIteratorSql_1.xml" />
            <data parameter="100001,200102" expected="select/SelectIteratorSql_2.xml" />
            <data parameter="100001,100101" expected="select/SelectIteratorSql_3.xml" />
        </sharding-rule>
        <sharding-rule value="masterslave,dbtbl">
            <data parameter="100000,100001" expected="select/SelectIteratorSql_0.xml" />
            <data parameter="190900,190901" expected="select/SelectIteratorSql_1.xml" />
            <data parameter="100000,100900" expected="select/SelectIteratorSql_2.xml" />
            <data parameter="100000,100200" expected="select/SelectIteratorSql_3.xml" />
        </sharding-rule>
        <sharding-rule>
            <data parameter="10,11" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectNoShardingTable" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id ORDER BY i.item_id">
        <sharding-rule value="tbl,db,dbtbl">
            <data expected="select/SelectNoShardingTable.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectLikeWithCount" value="SELECT count(0) as orders_count FROM `t_order` o WHERE o.status LIKE CONCAT('%%', %s, '%%') AND o.`user_id` IN (%s, %s) AND o.`order_id` BETWEEN %s AND %s" type="MySQL,H2">
        <sharding-rule value="tbl">
            <data parameter="'init',10,11,1000,1909" expected="select/SelectLikeWithCount.xml" />
        </sharding-rule>
        <sharding-rule value="db,masterslave,dbtbl">
            <data parameter="'init',10,11,1000,2901" expected="select/SelectLikeWithCount.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectWithBindingTable" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s ORDER BY i.item_id">
        <sharding-rule value="tbl">
            <data parameter="10,11,1009,1108" expected="select/SelectWithBindingTable.xml" />
        </sharding-rule>
        <sharding-rule value="db">
            <data parameter="10,11,1000,1909" expected="select/SelectWithBindingTable.xml" />
        </sharding-rule>
        <sharding-rule value="masterslave,dbtbl">
            <data parameter="10,11,1009,1108" expected="select/SelectWithBindingTable.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectWithBindingTableAndConfigTable" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id JOIN t_config c ON o.status = c.status WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s AND c.status = %s ORDER BY i.item_id">
        <sharding-rule value="tbl">
            <data parameter="10,11,1009,1108,'init'" expected="select/SelectWithBindingTableAndConfigTable.xml" />
            
        </sharding-rule>
        <sharding-rule value="masterslave">
            <data parameter="10,11,1009,1108,'init_slave'" expected="select/SelectWithBindingTableAndConfigTable.xml" />
        </sharding-rule>
        <sharding-rule value="dbtbl">
            <data parameter="10,11,1009,1108,'init'" expected="select/SelectWithBindingTableAndConfigTable.xml" />
        </sharding-rule>
        <sharding-rule>
            <data parameter="10,11,1009,1108,'none"/>
        </sharding-rule>
    </sql>
    <sql id="assertSelectSubQuerySingleTableWithParentheses" value="SELECT t.* FROM ((SELECT o.* FROM t_order o WHERE o.order_id IN (%s, %s))) t ORDER BY t.order_id" type="MySQL,PostgreSQL,SQLServer,Oracle">
        <sharding-rule>
            <data parameter="1000,1001" expected="select/SelectSubquerySingleTableWithParentheses.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectSubQueryMultiTableWithParentheses" value="SELECT t.* FROM ((SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id and o.order_id IN (%s, %s))) t ORDER BY t.item_id" type="MySQL,PostgreSQL,SQLServer,Oracle">
        <sharding-rule>
            <data parameter="1000,1001" expected="select/SelectSubqueryMultiTableWithParentheses.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithOffset" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s ORDER BY i.item_id DESC OFFSET %s" type="PostgreSQL">
        <sharding-rule value="tbl,db">
            <data parameter="10,19,1000,1909,18" expected="select/postgresql/SelectPagingWithOffsetSql.xml" />
        </sharding-rule>
        <sharding-rule value="masterslave,dbtbl">
            <data parameter="10,19,1000,1909,38" expected="select/postgresql/SelectPagingWithOffsetSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithRowCount" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s ORDER BY i.item_id DESC LIMIT %s" type="MySQL,H2,PostgreSQL">
        <sharding-rule>
            <data parameter="10,19,1000,1909,2" expected="select/SelectPagingWithRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithRowCountInSQLServer" value="SELECT * FROM (SELECT TOP (%s) row_number() OVER (ORDER BY i.item_id DESC) AS rownum_, i.item_id, o.order_id as order_id, o.status as status, o.user_id as user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s) AS row_" type="SQLServer">
        <sharding-rule>
            <data parameter="2,10,19,1000,1909" expected="select/sqlserver/SelectPagingWithRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithRowCountInOracle" value="SELECT * FROM (SELECT row_.*, rownum rownum_ FROM (SELECT order0_.order_id as order_id, order0_.status as status, order0_.user_id as user_id FROM t_order order0_ JOIN t_order_item i ON order0_.user_id = i.user_id AND order0_.order_id = i.order_id WHERE order0_.user_id IN (%s, %s) AND order0_.order_id BETWEEN %s AND %s ORDER BY i.item_id DESC) row_ WHERE rownum &lt;= %s)" type="Oracle">
        <sharding-rule>
            <data parameter="10,19,1000,1909,2" expected="select/oracle/SelectPagingWithRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithOffsetAndRowCount" value="SELECT i.* FROM `t_order` o JOIN `t_order_item` i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.`user_id` IN (%s, %s) AND o.`order_id` BETWEEN %s AND %s ORDER BY i.item_id DESC LIMIT %s, %s" type="MySQL,H2">
        <sharding-rule>
            <data parameter="10,19,1000,1909,2,2" expected="select/SelectPagingWithOffsetAndRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithOffsetAndRowCountInPostgreSQL" value="SELECT i.* FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s ORDER BY i.item_id DESC OFFSET %s LIMIT %s" type="PostgreSQL">
        <sharding-rule>
            <data parameter="10,19,1000,1909,2,2" expected="select/postgresql/SelectPagingWithOffsetAndRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithOffsetAndRowCountInSQLServer" value="SELECT * FROM (SELECT TOP (%s) row_number() OVER (ORDER BY i.item_id DESC) AS rownum_, i.item_id, o.order_id as order_id, o.status as status, o.user_id as user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (%s, %s) AND o.order_id BETWEEN %s AND %s) AS row_ WHERE row_.rownum_ &gt; %s" type="SQLServer">
        <sharding-rule>
            <data parameter="4,10,19,1000,1909,2" expected="select/sqlserver/SelectPagingWithOffsetAndRowCountSql.xml" />
        </sharding-rule>
    </sql>
    <sql id="assertSelectPagingWithOffsetAndRowCountInOracle" value="SELECT * FROM (SELECT row_.*, rownum rownum_ FROM (SELECT order0_.order_id as order_id, order0_.status as status, order0_.user_id as user_id FROM t_order order0_ JOIN t_order_item i ON order0_.user_id = i.user_id AND order0_.order_id = i.order_id WHERE order0_.user_id IN (%s, %s) AND order0_.order_id BETWEEN %s AND %s ORDER BY i.item_id DESC) row_ WHERE rownum &lt;= %s) t WHERE t.rownum_ &gt; %s" type="Oracle">
        <sharding-rule>
            <data parameter="10,19,1000,1909,4,2" expected="select/oracle/SelectPagingWithOffsetAndRowCountSql.xml" />
        </sharding-rule>
    </sql>
</sqls>
