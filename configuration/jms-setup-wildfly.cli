connect

#/subsystem=logging/console-handler=AEROGEAR:add(formatter="%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n",autoflush=true)
#/subsystem=logging/logger=org.jboss.aerogear.unifiedpush:add(level=FINEST,use-parent-handlers=false,handlers=["AEROGEAR"])

batch

/subsystem=messaging-activemq/server=default/jms-queue=AdmPushMessageQueue:add(entries=[queue/AdmPushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.AdmPushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=AdmTokenBatchQueue:add(entries=[queue/AdmTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.AdmTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)

/subsystem=messaging-activemq/server=default/jms-queue=APNsPushMessageQueue:add(entries=[queue/APNsPushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.APNsPushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=APNsTokenBatchQueue:add(entries=[queue/APNsTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.APNsTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)

/subsystem=messaging-activemq/server=default/jms-queue=GCMPushMessageQueue:add(entries=[queue/GCMPushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.GCMPushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=GCMTokenBatchQueue:add(entries=[queue/GCMTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.GCMTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)

/subsystem=messaging-activemq/server=default/jms-queue=MPNSPushMessageQueue:add(entries=[queue/MPNSPushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.MPNSPushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=MPNSTokenBatchQueue:add(entries=[queue/MPNSTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.MPNSTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)

/subsystem=messaging-activemq/server=default/jms-queue=SimplePushMessageQueue:add(entries=[queue/SimplePushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.SimplePushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=SimplePushTokenBatchQueue:add(entries=[queue/SimplePushTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.SimplePushTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)

/subsystem=messaging-activemq/server=default/jms-queue=WNSPushMessageQueue:add(entries=[queue/WNSPushMessageQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.WNSPushMessageQueue:add(redelivery-delay=1500, redelivery-multiplier=1.5, max-redelivery-delay=5000, max-delivery-attempts=-1)
/subsystem=messaging-activemq/server=default/jms-queue=WNSTokenBatchQueue:add(entries=[queue/WNSTokenBatchQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.WNSTokenBatchQueue:add(address-full-policy=FAIL, max-size-bytes=40000)



/subsystem=messaging-activemq/server=default/jms-queue=MetricsQueue:add(entries=[queue/MetricsQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.MetricsQueue:add(max-delivery-attempts=-1)

/subsystem=messaging-activemq/server=default/jms-queue=TriggerMetricCollectionQueue:add(entries=[queue/TriggerMetricCollectionQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.TriggerMetricCollectionQueue:add(redelivery-delay=1000, max-delivery-attempts=-1)

/subsystem=messaging-activemq/server=default/jms-queue=TriggerVariantMetricCollectionQueue:add(entries=[queue/TriggerVariantMetricCollectionQueue])



/subsystem=messaging-activemq/server=default/jms-queue=BatchLoadedQueue:add(entries=[queue/BatchLoadedQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.BatchLoadedQueue:add(max-delivery-attempts=-1)

/subsystem=messaging-activemq/server=default/jms-queue=AllBatchesLoadedQueue:add(entries=[queue/AllBatchesLoadedQueue])
/subsystem=messaging-activemq/server=default/address-setting=jms.queue.AllBatchesLoadedQueue:add(max-delivery-attempts=-1)


# This queue is populated with number of messages corresponding to limit of how many services can be created for given push network.
# The message is borrowed from this queue when new service is created.
# The message is returned to this queue when service is destroyed.
# That ensures that there won't be created more service instances in entire cluster of servers than given limit.
/subsystem=messaging-activemq/server=default/jms-queue=FreeServiceSlotQueue:add(entries=[queue/FreeServiceSlotQueue])



/subsystem=messaging-activemq/server=default/jms-topic=MetricsProcessingStartedTopic:add(entries=[topic/MetricsProcessingStartedTopic])

run-batch