nopolinfo #0
location: FailureLocation{className='org.apache.calcite.test.JdbcTest', failingMethods=[org.apache.calcite.test.JdbcTest#testRightJoin, org.apache.calcite.test.JdbcTest#testArrayIndexing, org.apache.calcite.test.JdbcTest#testScalarSubQueryInCase, org.apache.calcite.test.JdbcTest#testJoinJoin, org.apache.calcite.test.JdbcTest#testNotExistsCorrelated2, org.apache.calcite.test.JdbcTest#testLateral, org.apache.calcite.test.JdbcTest#testTableFunctionNonNullableMustBeLiterals, org.apache.calcite.test.JdbcTest#testScalarSubQuery, org.apache.calcite.test.JdbcTest#testNtileConstantArgs, org.apache.calcite.test.JdbcTest#testComparingIntAndString, org.apache.calcite.test.JdbcTest#testArray2, org.apache.calcite.test.JdbcTest#testFoodmartLattice, org.apache.calcite.test.JdbcTest#testNoCalcBetweenJoins, org.apache.calcite.test.JdbcTest#testCartesianJoin, org.apache.calcite.test.JdbcTest#testUnnestMultiset2, org.apache.calcite.test.JdbcTest#testWithInsideWhereExists, org.apache.calcite.test.JdbcTest#testJoinFiveWay, org.apache.calcite.test.JdbcTest#testBushy, org.apache.calcite.test.JdbcTest#testExplainJoinOrderingWithOr, org.apache.calcite.test.JdbcTest#testCloneGroupBy2Plan, org.apache.calcite.test.JdbcTest#testUnnestArrayColumn, org.apache.calcite.test.JdbcTest#testEquiThetaJoin, org.apache.calcite.test.JdbcTest#testCloneGroupBy2, org.apache.calcite.test.JdbcTest#testExplainJoin, org.apache.calcite.test.JdbcTest#testMergeJoin, org.apache.calcite.test.JdbcTest#testUnionWithSameColumnNames, org.apache.calcite.test.JdbcTest#testLeftJoin, org.apache.calcite.test.JdbcTest#testExistsCorrelated, org.apache.calcite.test.JdbcTest#testIn, org.apache.calcite.test.JdbcTest#testCloneQueries, org.apache.calcite.test.JdbcTest#testFullJoin, org.apache.calcite.test.JdbcTest#testNotExistsCorrelated, org.apache.calcite.test.JdbcTest#testCorrelatedScalarSubQuery, org.apache.calcite.test.JdbcTest#testTableFunctionCursorsInputs, org.apache.calcite.test.JdbcTest#testModelWithMaterializedView, org.apache.calcite.test.JdbcTest#testSimpleIn, org.apache.calcite.test.JdbcTest#testExplainJoin4, org.apache.calcite.test.JdbcTest#testUnnestArrayScalarArray, org.apache.calcite.test.JdbcTest#testExplainJoin3, org.apache.calcite.test.JdbcTest#testTableFunctionCursorInputs, org.apache.calcite.test.JdbcTest#testThetaJoin, org.apache.calcite.test.JdbcTest#testExplainJoin2], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...ptno=10; name=Sales
[]> but was:<...ptno=10; name=Sales
[empid=200; deptno=20; name=HR
]>', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; I=true\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; I=true\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null; I=true\nempid=200; deptno=20; name=Eric; salary=8000.0; commission=500; I=null"
     but: was "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; I=true\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; I=true\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null; I=true\nempid=200; deptno=20; name=Eric; salary=8000.0; commission=500; I=true"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=200; deptno=20; name=Eric; salary=8000.0; commission=500"
     but: was ""', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=20; deptno=null"
     but: was "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=20; deptno=20"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Have no idea how to validate that expression is constant', isError=false}, FailureType{failureName='skipped', failureDetail='[CALCITE-685]', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...es; name=Bill
empid=[]150; name=Sales; nam...> but was:<...es; name=Bill
empid=[200; name=HR; name=Eric
empid=]150; name=Sales; nam...>', isError=false}, FailureType{failureName='skipped', failureDetail='extremely slow - a bit better if you disable ProjectMergeRule', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null"
     but: was "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null\nempid=200; deptno=20; name=Eric; salary=8000.0; commission=500"', isError=false}, FailureType{failureName='skipped', failureDetail='SQLException does not include message from nested exception', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=null; deptno=30\ndeptno=null; deptno=40"
     but: was "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=20; deptno=20\ndeptno=null; deptno=30"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "name=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500; EXPR$1=1\nname=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500; EXPR$1=2\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000; EXPR$1=1\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000; EXPR$1=2\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null; EXPR$1=1\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null; EXPR$1=2"
     but: was "name=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500; EXPR$1=1\nname=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500; EXPR$1=2\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000; EXPR$1=1\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000; EXPR$1=2\nname=Sales; empid=110; deptno=10; name0=Theodore; salary=11500.0; commission=250; EXPR$1=1\nname=Sales; empid=110; deptno=10; name0=Theodore; salary=11500.0; commission=250; EXPR$1=2\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null; EXPR$1=1\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null; EXPR$1=2"', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#24:Subset#6.ENUMERABLE.[]] could not be implemented', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}"
     but: was "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}, {110, 10, Theodore, 11500.0, 250}]; location={-122, 38}\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}, {110, 10, Theodore, 11500.0, 250}]; location={-122, 38}\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null; deptno0=10; name0=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}, {110, 10, Theodore, 11500.0, 250}]; location={-122, 38}\nempid=200; deptno=20; name=Eric; salary=8000.0; commission=500; deptno0=20; name0=HR; employees=[{200, 20, Eric, 8000.0, 500}]; location=null"', isError=false}, FailureType{failureName='skipped', failureDetail='The actual and expected plan differ', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10\ndeptno=10\ndeptno=10"
     but: was "deptno=10\ndeptno=10\ndeptno=10\ndeptno=20"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "name=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null"
     but: was "name=HR; empid=200; deptno=20; name0=Eric; salary=8000.0; commission=500\nname=Sales; empid=100; deptno=10; name0=Bill; salary=10000.0; commission=1000\nname=Sales; empid=110; deptno=10; name0=Theodore; salary=11500.0; commission=250\nname=Sales; empid=150; deptno=10; name0=Sebastian; salary=7000.0; commission=null"', isError=false}, FailureType{failureName='skipped', failureDetail='The test returns expected results. Not sure why it is disabled', isError=false}, FailureType{failureName='skipped', failureDetail='until JdbcSchema can define materialized views', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=30; name0=Marketing; employees=[]; location={0, 52}\nempid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=40; name0=HR; employees=[{200, 20, Eric, 8000.0, 500}]; location=null\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=30; name0=Marketing; employees=[]; location={0, 52}\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=40; name0=HR; employees=[{200, 20, Eric, 8000.0, 500}]; location=null"
     but: was "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000; deptno0=30; name0=Marketing; employees=[]; location={0, 52}\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250; deptno0=30; name0=Marketing; employees=[]; location={0, 52}"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='Fails with org.codehaus.commons.compiler.CompileException: Line 16, Column 112: Cannot compare types "int" and "java.lang.String"
', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; name=HR; name=Bill\nempid=100; name=Marketing; name=Bill\nempid=110; name=HR; name=Theodore\nempid=110; name=Marketing; name=Theodore\nempid=150; name=HR; name=Sebastian\nempid=150; name=Marketing; name=Sebastian\nempid=200; name=HR; name=Eric\nempid=200; name=Marketing; name=Eric"
     but: was "empid=100; name=HR; name=Bill\nempid=100; name=Marketing; name=Bill\nempid=110; name=HR; name=Theodore\nempid=110; name=Marketing; name=Theodore\nempid=150; name=HR; name=Sebastian\nempid=150; name=Marketing; name=Sebastian\nempid=200; name=Marketing; name=Eric"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; E={100, 10, Bill, 10000.0, 1000}\ndeptno=30; E=null\ndeptno=40; E={200, 20, Eric, 8000.0, 500}"
     but: was "deptno=10; E={100, 10, Bill, 10000.0, 1000}\ndeptno=20; E={200, 20, Eric, 8000.0, 500}\ndeptno=30; E=null"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; DNAME=Sales\nempid=110; deptno=10; DNAME=Sales\nempid=150; deptno=10; DNAME=Sales\nempid=200; deptno=20; DNAME=null"
     but: was "empid=100; deptno=10; DNAME=Sales\nempid=110; deptno=10; DNAME=Sales\nempid=150; deptno=10; DNAME=Sales\nempid=200; deptno=20; DNAME=HR"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; name=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}]; location={-122, 38}"
     but: was "deptno=10; name=Sales; employees=[{100, 10, Bill, 10000.0, 1000}, {150, 10, Sebastian, 7000.0, null}, {110, 10, Theodore, 11500.0, 250}]; location={-122, 38}"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; C=2\ndeptno=30; C=0\ndeptno=40; C=1"
     but: was "deptno=10; C=3\ndeptno=20; C=1\ndeptno=30; C=0"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='CannotPlanException: Node [rel#18:Subset#4.ENUMERABLE.[]] could not be implemented', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null"
     but: was "empid=100; deptno=10; name=Bill; salary=10000.0; commission=1000\nempid=110; deptno=10; name=Theodore; salary=11500.0; commission=250\nempid=150; deptno=10; name=Sebastian; salary=7000.0; commission=null"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; deptno=10\ndeptno=10; deptno=100\ndeptno=10; deptno=110\ndeptno=10; deptno=150\ndeptno=20; deptno=200\ndeptno=30; deptno=30\ndeptno=40; deptno=40"
     but: was "deptno=10; deptno=10\ndeptno=10; deptno=100\ndeptno=10; deptno=110\ndeptno=10; deptno=150\ndeptno=20; deptno=20\ndeptno=20; deptno=200\ndeptno=30; deptno=30"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "name=Bill; DEPTNAME=Sales\nname=Eric; DEPTNAME=DepartmentNotFound\nname=Sebastian; DEPTNAME=Sales\nname=Theodore; DEPTNAME=Sales"
     but: was "name=Bill; DEPTNAME=Sales\nname=Eric; DEPTNAME=HR\nname=Sebastian; DEPTNAME=Sales\nname=Theodore; DEPTNAME=Sales"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=20; deptno=null\ndeptno=null; deptno=30\ndeptno=null; deptno=40"
     but: was "deptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=10; deptno=10\ndeptno=20; deptno=20\ndeptno=null; deptno=30"', isError=false}], nbFailures=42, nbErrors=0}
status: NOPATCH
dateEnd: Mon Apr 24 21:05:55 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/225223603/core/src/main/java], projectClasspath='[Ljava.net.URL;@7bc9e6ab', projectTests=[org.apache.calcite.test.JdbcTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='org.apache.calcite.test.MaterializationTest', failingMethods=[org.apache.calcite.test.MaterializationTest#testFilterQueryOnFilterView2, org.apache.calcite.test.MaterializationTest#testFilterQueryOnFilterView3, org.apache.calcite.test.MaterializationTest#testOrderByQueryOnProjectView, org.apache.calcite.test.MaterializationTest#testPartialUnion, org.apache.calcite.test.MaterializationTest#testAggregateProject, org.apache.calcite.test.MaterializationTest#testFilterQueryOnProjectView5, org.apache.calcite.test.MaterializationTest#testQueryOnStar, org.apache.calcite.test.MaterializationTest#testAggregateMaterializationAggregateFuncs8, org.apache.calcite.test.MaterializationTest#testOrderByQueryOnOrderByView, org.apache.calcite.test.MaterializationTest#testDifferentType, org.apache.calcite.test.MaterializationTest#testMaterializationReferencesTableInOtherSchema, org.apache.calcite.test.MaterializationTest#testSwapJoin, org.apache.calcite.test.MaterializationTest#testMultiMaterializationOnJoinQuery, org.apache.calcite.test.MaterializationTest#testNonDisjointUnion, org.apache.calcite.test.MaterializationTest#testDifferentColumnNames, org.apache.calcite.test.MaterializationTest#testJoinOnUnionMaterialization, org.apache.calcite.test.MaterializationTest#testFilterGroupQueryOnStar], erroringMethods=[], failures=[FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='not implemented', isError=false}, FailureType{failureName='skipped', failureDetail='Creating mv for depts considering all its column throws exception', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: a string containing "EnumerableCalc(expr#0..2=[{inputs}], expr#3=[2], expr#4=[=($t0, $t3)], name=[$t2], E=[$t1], $condition=[$t4])\n  EnumerableTableScan(table=[[hr, m0]]"
     but: was "PLAN=EnumerableCalc(expr#0..2=[{inputs}], expr#3=[2], expr#4=[=($t0, $t3)], name=[$t2], EE=[$t1], $condition=[$t4])
  EnumerableTableScan(table=[[hr, m0]])

"', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='skipped', isError=false}, FailureType{failureName='skipped', failureDetail='work in progress', isError=false}], nbFailures=17, nbErrors=0}
status: NOPATCH
dateEnd: Mon Apr 24 21:06:19 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/225223603/core/src/main/java], projectClasspath='[Ljava.net.URL;@459c7fa1', projectTests=[org.apache.calcite.test.MaterializationTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='org.apache.calcite.test.enumerable.EnumerableCorrelateTest', failingMethods=[org.apache.calcite.test.enumerable.EnumerableCorrelateTest#simpleCorrelateDecorrelated, org.apache.calcite.test.enumerable.EnumerableCorrelateTest#simpleCorrelate], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; name=Bill\nempid=110; name=Theodore\nempid=150; name=Sebastian"
     but: was "empid=100; name=Bill\nempid=110; name=Theodore\nempid=150; name=Sebastian\nempid=200; name=Eric"', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='
Expected: "empid=100; name=Bill\nempid=110; name=Theodore\nempid=150; name=Sebastian"
     but: was "empid=100; name=Bill\nempid=110; name=Theodore\nempid=150; name=Sebastian\nempid=200; name=Eric"', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Mon Apr 24 21:06:42 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/225223603/core/src/main/java], projectClasspath='[Ljava.net.URL;@72900861', projectTests=[org.apache.calcite.test.enumerable.EnumerableCorrelateTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='org.apache.calcite.test.QuidemTest', failingMethods=[], erroringMethods=[org.apache.calcite.test.QuidemTest#test[0: quidem(sql/misc.iq)]], failures=[FailureType{failureName='java.lang.reflect.InvocationTargetException', failureDetail='null', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Mon Apr 24 21:07:03 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/apache/calcite/225223603/core/src/main/java], projectClasspath='[Ljava.net.URL;@86e68a1', projectTests=[org.apache.calcite.test.QuidemTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



