# First two blocks doesn't need to be translated for epubcheck, as @murata0204 noted in
# https://github.com/IDPF/epubcheck/pull/472#issuecomment-58265808
#
# Non-unicode chars (german umlauts, etc..) must be escaped like \u00DF
# because otherwise Jing can't parse them. Bad UTF8-support

# Properties file specifying messages
illegal_href_attribute=\u4E0D\u6B63\u306A \"href\" \u5C5E\u6027
ns_attribute_ignored=\"ns\" \u5C5E\u6027\u306F\u7121\u8996\u3055\u308C\u307E\u3059
reference_to_undefined=\u672A\u5B9A\u7FA9\u306E\u30D1\u30BF\u30FC\u30F3 \"{0}\" \u3078\u306E\u53C2\u7167
missing_start_element=\"start\" \u8981\u7D20\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093
recursive_reference=\u30D1\u30BF\u30FC\u30F3 \"{0}\" \u3078\u306E\u9593\u9055\u3063\u305F\u518D\u5E30\u7684\u53C2\u7167
recursive_include=recursive inclusion of URL \"{0}\"
duplicate_define=multiple definitions of \"{0}\" without \"combine\" attribute
duplicate_start=multiple definitions of start without \"combine\" attribute
conflict_combine_define=conflicting values of \"combine\" attribute for definition of \"{0}\"
conflict_combine_start=conflicting values of \"combine\" attribute for definition of start
missing_start_replacement=\"start\" in \"include\" does not override anything
missing_define_replacement=definition of \"{0}\" in \"include\" does not override anything
interleave_string=interleave of \"string\" or \"data\" element
group_string=group of \"string\" or \"data\" element
one_or_more_string=repeat of \"string\" or \"data\" element
unrecognized_datatype=datatype \"{1}\" from library \"{0}\" not recognized
unsupported_datatype_detail=datatype \"{1}\" from library \"{0}\" not supported: {2}
unrecognized_datatype_library=datatype library \"{0}\" not recognized
unrecognized_builtin_datatype=\u305D\u306E\u3088\u3046\u306A\u30D3\u30EB\u30C8\u30A4\u30F3\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7 \"{0}\" \u306F\u3042\u308A\u307E\u305B\u3093: \"string\" \u304B \"token\" \u3092\u4F7F\u308F\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093
invalid_value=\"{0}\" \u306F\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7\u306E\u9069\u5207\u306A\u5024\u3067\u306F\u3042\u308A\u307E\u305B\u3093
parent_ref_outside_grammar=reference to non-existent parent grammar
ref_outside_grammar=reference to non-existent grammar
expected_one_name_class=found \"{0}\" element but expected no further content
builtin_param=\u30D3\u30EB\u30C8\u30A4\u30F3\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7\u306F\u30D1\u30E9\u30E1\u30BF\u3092\u6301\u3063\u3066\u3044\u307E\u305B\u3093
invalid_param_display=\u4E0D\u9069\u5207\u306A\u30D1\u30E9\u30E1\u30BF:\n{0}
invalid_param_detail_display=invalid parameter: {0}:\n{1}
display_param={0}>>>>{1}
invalid_param_detail=\u4E0D\u9069\u5207\u306A\u30D1\u30E9\u30E1\u30BF: {0}
invalid_param=\u4E0D\u9069\u5207\u306A\u30D1\u30E9\u30E1\u30BF
invalid_params_detail=\u4E0D\u9069\u5207\u306A\u30D1\u30E9\u30E1\u30BF: {0}
invalid_params=\u4E0D\u9069\u5207\u306A\u30D1\u30E9\u30E1\u30BF
datatype_requires_parameter=\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7\u306F\u30D1\u30E9\u30E1\u30BF\u306A\u3057\u306B\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093
datatype_requires_parameter_detail=\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7\u306F\u30D1\u30E9\u30E1\u30BF\u306A\u3057\u306B\u4F7F\u3046\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093: {0}

attribute_contains_attribute=an attribute pattern must not contain an attribute pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path attribute//attribute)
attribute_contains_element=an attribute pattern must not contain an element pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path attribute//ref)
data_except_contains_attribute=a data pattern must not exclude an attribute pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//attribute)
data_except_contains_element=a data pattern must not exclude an element pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//ref)
data_except_contains_empty=a data pattern must not exclude an empty pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//empty)
data_except_contains_group=a data pattern must not exclude a group (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//group)
data_except_contains_interleave=a data pattern must not exclude an interleaved group (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//interleave)
data_except_contains_list=a data pattern must not exclude a list pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//list)
data_except_contains_one_or_more=a data pattern must not exclude a repetition (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//oneOrMore)
data_except_contains_text=a data pattern must not exclude a text pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path data/except//text)
list_contains_attribute=a list pattern must not contain an attribute pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path list//attribute)
list_contains_element=a list pattern must not contain an element pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path list//ref)
list_contains_list=a list pattern must not contain a list pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path list//list)
list_contains_text=a list pattern must not contain a text pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path list//text)
list_contains_interleave=a list pattern must not contain an interleave pattern (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path list//interleave)
one_or_more_contains_group_contains_attribute=a group of attributes must not be repeatable (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path oneOrMore//group//attribute)
one_or_more_contains_interleave_contains_attribute=an interleaved group of attributes must not be repeatable (section 7.1 of the RELAX NG specification requires that the simplified XML form of the schema not contain any elements matching the path oneOrMore//interleave//attribute)
start_contains_attribute=found element matching the prohibited path start//attribute in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_data=found element matching the prohibited path start//data in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_empty=found element matching the prohibited path start//empty in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_group=found element matching the prohibited path start//group in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_interleave=found element matching the prohibited path start//interleave in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_list=found element matching the prohibited path start//list in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_one_or_more=found element matching the prohibited path start//oneOrMore in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_text=found element matching the prohibited path start//text in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
start_contains_value=found element matching the prohibited path start//value in the simplified XML form of the schema (see section 7.1 of the RELAX NG specification)
duplicate_attribute=\u91CD\u8907\u3057\u305F\u5C5E\u6027
duplicate_attribute_name=\u91CD\u8907\u3057\u305F\u5C5E\u6027 {0}
duplicate_attribute_ns=attributes from namespace \"{0}\" can occur more than once
interleave_element_overlap=overlapping element names in operands of \"interleave\"
interleave_element_overlap_name=the element {0} can occur in more than one operand of \"interleave\"
interleave_element_overlap_ns=elements from namespace \"{0}\" can occur in more than one operand of \"interleave\"
interleave_text_overlap=\"interleave\" \u306E\u4E21\u65B9\u306E\u30AA\u30DA\u30E9\u30F3\u30C9\u304C \"text\" \u3092\u542B\u3093\u3067\u3044\u307E\u3059
open_name_class_not_repeated=attribute using \"nsName\" or \"anyName\" must be in \"oneOrMore\"
xmlns_uri_attribute=\u5C5E\u6027\u306F\u540D\u524D\u7A7A\u9593URI \"http://www.w3.org/2000/xmlns\" \u3092\u6301\u3066\u307E\u305B\u3093
xmlns_attribute=\u5C5E\u6027\u306E\u540D\u524D\u306B \"xmlns\" \u306F\u4F7F\u3048\u307E\u305B\u3093

# Validation errors
unknown_element=\u8981\u7D20 {0} \u306F\u3069\u3053\u306B\u3082\u66F8\u3051\u307E\u305B\u3093.  {1}
unexpected_element_required_element_missing=\u8981\u7D20 {0} \u306F\u3053\u3053\u306B\u306F\u66F8\u3051\u307E\u305B\u3093. \u624B\u524D\u306B\u4EE5\u4E0B\u306E\u8981\u7D20\u304C\u5FC5\u8981\u3067\u3059: {1}
unexpected_element_required_elements_missing=\u8981\u7D20 {0} \u306F\u3053\u3053\u306B\u306F\u66F8\u3051\u307E\u305B\u3093. \u624B\u524D\u306B\u4EE5\u4E0B\u306E\u8981\u7D20\u304C\u5FC5\u8981\u3067\u3059: {1}
element_not_allowed_yet=\u8981\u7D20 {0} \u306F\u307E\u3060\u3053\u3053\u306B\u306F\u66F8\u3051\u307E\u305B\u3093.  {1}
out_of_context_element=\u8981\u7D20 {0} \u3092\u3053\u3053\u306B\u66F8\u3044\u3066\u306F\u3044\u3051\u307E\u305B\u3093.  {1}
no_attributes_allowed=\u5C5E\u6027 {0} \u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u3059\u304C\u3001\u3053\u3053\u306B\u306F\u5C5E\u6027\u306F\u66F8\u3051\u307E\u305B\u3093.
invalid_attribute_name=\u5C5E\u6027 {0} \u306F\u3053\u3053\u306B\u306F\u66F8\u3051\u307E\u305B\u3093.  {1}
invalid_attribute_value=\u5C5E\u6027 {0} \u306E\u5024\u304C\u4E0D\u6B63\u3067\u3059.  {1}
required_attributes_missing_expected=\u8981\u7D20 {0} \u306B\u306F1\u3064\u307E\u305F\u306F\u305D\u308C\u4EE5\u4E0A\u306E\u5FC5\u8981\u306A\u5C5E\u6027\u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u305B\u3093.  {1}
required_attribute_missing=\u8981\u7D20 {0} \u306B\u5FC5\u8981\u306A\u5C5E\u6027\u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u305B\u3093.  {1}
required_attributes_missing=\u8981\u7D20 {0} \u306B\u5FC5\u8981\u306A\u5C5E\u6027\u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u305B\u3093.  {1}
incomplete_element_required_elements_missing_expected=\u8981\u7D20 {0} \u306E\u5185\u5BB9\u304C\u4E0D\u5B8C\u5168\u3067\u3059.  {1}
incomplete_element_required_element_missing=\u8981\u7D20 {0} \u306E\u5185\u5BB9\u304C\u4E0D\u5B8C\u5168\u3067\u3059. \u4EE5\u4E0B\u306E\u5FC5\u8981\u306A\u8981\u7D20\u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u305B\u3093 {1}
incomplete_element_required_elements_missing=\u8981\u7D20 {0} \u306E\u5185\u5BB9\u304C\u4E0D\u5B8C\u5168\u3067\u3059. \u4EE5\u4E0B\u306E\u5FC5\u8981\u306A\u8981\u7D20\u304C\u66F8\u304B\u308C\u3066\u3044\u307E\u305B\u3093 {1}
text_not_allowed=\u30C6\u30AD\u30B9\u30C8\u306F\u3053\u3053\u306B\u306F\u66F8\u3051\u307E\u305B\u3093.  {0}
document_incomplete=\u6587\u66F8\u304C\u4E0D\u5B8C\u5168\u306B\u30DE\u30C3\u30C1\u3057\u3066\u3044\u307E\u3059.
invalid_element_value=\u8981\u7D20 {0} \u306E\u30C6\u30AD\u30B9\u30C8\u5185\u5BB9\u304C\u4E0D\u6B63\u3067\u3059.  {1}
blank_not_allowed=\u8981\u7D20 {0} \u306F\u7A7A\u306E\u5185\u5BB9\u306B\u3057\u3066\u306F\u3044\u3051\u307E\u305B\u3093. {1}
schema_allows_nothing=\u6587\u66F8\u306B\u4F55\u3082\u66F8\u3044\u3066\u306F\u3044\u3051\u307E\u305B\u3093. \u30B9\u30AD\u30FC\u30DE\u304C\u305D\u306E\u3088\u3046\u306B\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u3059(<notAllowed/> \u304C\u66F8\u304B\u308C\u3066\u3044\u308B\u30B9\u30AD\u30FC\u30DE\u3068\u540C\u5024\u3067\u3059).

# ID correctness errors
id_element_name_class=an \"element\" pattern containing an \"attribute\" pattern with a non-null ID-type must have a name class that contains only \"choice\" and \"name\" elements
id_attribute_name_class=an \"attribute\" pattern with a non-null ID-type must have a name class that is a single name
id_parent=a \"data\" or \"value\" pattern with non-null ID-type must occur as the child of an \"attribute\" pattern
id_type_conflict=conflicting ID-types for attribute {1} of element {0}

# ID soundness errors
id_no_tokens=ID\u578B\u5C5E\u6027\u306E\u5024\u306B\u30C8\u30FC\u30AF\u30F3\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093.
id_multiple_tokens=ID\u578B\u5C5E\u6027\u306E\u5024\u306B\u8907\u6570\u306E\u30C8\u30FC\u30AF\u30F3\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u3059.
idref_no_tokens=IDREF\u578B\u5C5E\u6027\u306E\u5024\u306B\u30C8\u30FC\u30AF\u30F3\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093.
idref_multiple_tokens=IDREF\u578B\u5C5E\u6027\u306E\u5024\u306B\u8907\u6570\u306E\u30C8\u30FC\u30AF\u30F3\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u3059.
idrefs_no_tokens=IDREFS\u578B\u5C5E\u6027\u306E\u5024\u306B\u30C8\u30FC\u30AF\u30F3\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093.
missing_id=IDREF \"{0}\" \u306B\u5BFE\u5FDC\u3059\u308BID\u304C\u3042\u308A\u307E\u305B\u3093.
duplicate_id=ID \"{0}\" \u306F\u65E2\u306B\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u3059.
first_id=ID \"{0}\" \u306F\u3001\u3053\u3053\u306B\u6700\u521D\u306B\u66F8\u304B\u308C\u3066\u3044\u307E\u3059.

# Fragments
name_absent_namespace=\"{0}\"
name_with_namespace=\u540D\u524D\u7A7A\u9593 \"{0}\" \u306E \"{1}\"
qname=\"{0}\"
qnames_nsdecls={0}(\u540D\u524D\u7A7A\u9593\u5BA3\u8A00 {1})
or_list_pair={0} \u307E\u305F\u306F {1}
or_list_many_first={0}
or_list_many_middle={0}, {1}
or_list_many_last={0} \u307E\u305F\u306F {1}
and_list_pair={0} \u304B\u3064 {1}
and_list_many_first={0}
and_list_many_middle={0}, {1}
and_list_many_last={0} \u304B\u3064 {1}

expected=; \u3053\u3053\u306B\u66F8\u304B\u308C\u308B\u3079\u304D\u3082\u306E\u306F {0} \u3067\u3059.
element_end_tag=\u8981\u7D20\u306E\u7D42\u4E86\u30BF\u30B0
text=\u30C6\u30AD\u30B9\u30C8
data=\u30C7\u30FC\u30BF
element_list=\u8981\u7D20 {0}
element_other_ns=\u4ED6\u306E\u540D\u524D\u7A7A\u9593\u306E\u8981\u7D20
expected_attribute=; \u3053\u3053\u306B\u66F8\u304B\u308C\u308B\u3079\u304D\u5C5E\u6027\u306F {0} \u3067\u3059.
expected_attribute_or_other_ns=; \u3053\u3053\u306B\u66F8\u304B\u308C\u308B\u3079\u304D\u5C5E\u6027\u306F {0} \u307E\u305F\u306F\u4ED6\u306E\u540D\u524D\u7A7A\u9593\u306E\u5C5E\u6027\u3067\u3059.
data_failures=; {0}
token_failures=; \u30C8\u30FC\u30AF\u30F3 {0} \u304C\u4E0D\u6B63\u3067\u3059. ; {1}
missing_token=; \u30C8\u30FC\u30AF\u30F3\u304C\u3042\u308A\u307E\u305B\u3093. ; {0}
expected_data=; \u671F\u5F85\u3055\u308C\u308B\u30C7\u30FC\u30BF
require_values={0} \u3068\u7B49\u3057\u304F\u306A\u304F\u3066\u306F\u306A\u308A\u307E\u305B\u3093.
require_qnames={0} \u3068\u7B49\u3057\u3044 QName \u3067\u306A\u304F\u3066\u306F\u306A\u308A\u307E\u305B\u3093.
require_datatype=\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7{0}\u306E\u59A5\u5F53\u306A\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3067\u306A\u304F\u3066\u306F\u306A\u308A\u307E\u305B\u3093.
