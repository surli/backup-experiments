Release Notes -- Apache Jackrabbit Oak -- Version 1.7.10

Introduction
------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

Apache Jackrabbit Oak 1.7.10 is an unstable release cut directly from
Jackrabbit Oak trunk, with a focus on new features and other
improvements. For production use we recommend the latest stable 1.6.x
release.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

Changes in Oak 1.7.10
---------------------

Sub-task

    [OAK-6841] - Revert Changes made in OAK-6575 before 1.7.10 is
    released.

Technical task

    [OAK-6113] - update spring to 1.5.x release
    [OAK-6580] - Ensure mounts are consistent with the node type
    registry
    [OAK-6763] - Convert oak-examples to OSGi R6 annotations
    [OAK-6787] - Delete property index entries recursively in batches
    to avoid large transaction
    [OAK-6811] - BasicDocumentStore: avoid use of API edge case in
    test of cache invalidation
    [OAK-6832] - Synchronous nodetype lucene index support

Bug

    [OAK-6687] - ReadOnly connection to fresh SegmentNodeStore setup
    failing
    [OAK-6745] - Oak Web Application Example: Execution default-war of
    goal org.apache.maven.plugins:maven-war-plugin:2.6:war failed
    [OAK-6780] - Duplicated _exportcontents directive in oak-lucene's
    pom.xml
    [OAK-6789] - RDB: RevisionGC performance on Oracle
    [OAK-6790] - FacetResult class isn't exposed anymore
    [OAK-6808] - update surefire plugin to 2.20.1 for use with Java 9
    [OAK-6816] - DataStoreTrackerGCTest failures
    [OAK-6825] - oak-examples/standalone test failure on Java 9
    [OAK-6827] - Consistency check fails with active deletions
    [OAK-6840] - Tar recovery chokes on bulk segments
    [OAK-6843] - Log correct path while initializing the DataStore
    [OAK-6845] - org.apache.jackrabbit.oak.jcr.query.QueryJcrTest1IT
    on java 9 fails with OutOfMemory
    [OAK-6852] - RDBDocumentStore conditional remove: check condition
    properly

Epic

    [OAK-6727] - Oak should compile & test on Java 9

Improvement

    [OAK-5546] - [BlobGC] Adapt time to delete blobs based on lucene
    indexing activity
    [OAK-5983] - BlobGC should log the amount of space reclaimed after
    GC run is done
    [OAK-6218] - Including id in DocumentStoreException which wrap
    MongoException
    [OAK-6550] - Make BlobTracker snapshot process smarter
    [OAK-6615] - Add new segment-tar fixture for attaching a
    cold-standby to benchmarked primary
    [OAK-6650] - new release checksum requirements
    [OAK-6792] - rep:facet not supported in xpath
    [OAK-6801] - Set minRecordLength to the recommended 4096 in
    OakFileDataStore
    [OAK-6802] - Manage 'secret' property internally in
    S3/AzureDataStore
    [OAK-6803] - Provide a way to for persistent cache to determine
    which all nodes can be cached
    [OAK-6809] - Allow RevisionGCTest to operate on "long" paths
    [OAK-6815] - Support specifying queryPaths in
    IndexDefinitionBuilder
    [OAK-6822] - RevisionGC: measure timeToDeleteSplitDocs separately
    (when possible)
    [OAK-6830] - RDBDocumentStore: allow schema evolution part 3
    [OAK-6831] - Nodetype index support in Lucene Index
    [OAK-6834] - Make TypeEditor publically accessible and allow
    pluggable constraint violation handling
    [OAK-6839] - RDBDocumentStore: queries done by GC processes should
    not thrash the cache
    [OAK-6842] - Refactor FileStore.close
    [OAK-6849] - Avoid creating empty properties node under indexRules
    [OAK-6851] - Disabled index with reindex flag enabled should not
    lead to reindex report

New Feature

    [OAK-6820] - Implement support for disabling indexes which are
    replaced with newer index
    [OAK-6853] - Oak run tooling to store reindexed property index in
    segment store

Task

    [OAK-4891] - Mount-time sanity checks for mounted NodeStore
    instances
    [OAK-6318] - Refactor oak.spi.security into a separate
    module/bundle
    [OAK-6810] - oak-pojosr tests fail with java 9
    [OAK-6817] - Don't create metatype for MountInfoProviderService
    [OAK-6819] - Move Configuration out of DocumentNodeStoreService
    [OAK-6821] - Enforce minimum line coverage for oak-security-spi
    [OAK-6846] - update maven-failsafe-plugin to 2.20.1

Test

    [OAK-6848] - Improve
    ObservationQueueFullWarnTest.testQueueFullThenFlushing to not
    sleep arbitrarily when not required

In addition to the above-mentioned changes, this release contains
all changes included up to the Apache Jackrabbit Oak 1.7.x release.

For more detailed information about all the changes in this and other
Oak releases, please see the Oak issue tracker at

  https://issues.apache.org/jira/browse/OAK

Release Contents
----------------

This release consists of a single source archive packaged as a zip file.
The archive can be unpacked with the jar tool from your JDK installation.
See the README.md file for instructions on how to build this release.

The source archive is accompanied by SHA1 and MD5 checksums and a PGP
signature that you can use to verify the authenticity of your download.
The public key used for the PGP signature can be found at
http://www.apache.org/dist/jackrabbit/KEYS.

About Apache Jackrabbit Oak
---------------------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

For more information, visit http://jackrabbit.apache.org/oak

About The Apache Software Foundation
------------------------------------

Established in 1999, The Apache Software Foundation provides organizational,
legal, and financial support for more than 140 freely-available,
collaboratively-developed Open Source projects. The pragmatic Apache License
enables individual and commercial users to easily deploy Apache software;
the Foundation's intellectual property framework limits the legal exposure
of its 3,800+ contributors.

For more information, visit http://www.apache.org/
