<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2014-2016 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
  
  <!-- Iteration with token expression (sequential) and post-condition that checks for e-mail uniquness. -->
  
<objectTemplate oid="10000000-0000-0000-0000-0000000d0004"
   xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
   xmlns='http://midpoint.evolveum.com/xml/ns/public/common/common-3'
   xmlns:c='http://midpoint.evolveum.com/xml/ns/public/common/common-3'
   xmlns:t='http://prism.evolveum.com/xml/ns/public/types-3'>
    <name>Iteration User Template: Unique email</name>

    <iteration>
		<maxIterations>5</maxIterations>
		<tokenExpression>
			<script>
				<code>
					if (iteration == 0) {
						return "";
					} else {
						return "."+iteration;
					}
				</code>
			</script>
		</tokenExpression>
		<postIterationCondition>
			<variable>
				<name>nickName</name>
				<path>$focus/nickName</path>
			</variable>
			<script>
				<code>
					if (nickName == null) { return true }
					def emailAddress = nickName + iterationToken + '@example.com'
					midpoint.isUniquePropertyValue(focus, 'emailAddress', emailAddress.toString())
				</code>
			</script>
		</postIterationCondition>
	</iteration>

	<item>
		<ref>emailAddress</ref>
		<mapping>
	    	<source>
	    		<path>nickName</path>
	    	</source>
	    	<expression>
				<script>
					<code>
						nickName + iterationToken + '@example.com'
					</code>
	         	</script>
			</expression>
	    </mapping>
	</item>

	<item>
		<ref>fullName</ref>
		<mapping>
	    	<strength>weak</strength>
	    	<source>
	    		<path>$user/givenName</path>
	    	</source>
	    	<source>
	    		<path>$user/familyName</path>
	    	</source>
	    	<expression>
				<script>
					<code>
						givenName + ' ' + familyName
					</code>
	         	</script>
			</expression>
	    	<target>
	    		<path>fullName</path>
	    	</target>
	    </mapping>		
	</item>
	
</objectTemplate>
