func qSortP(x, start, end) {
  l = end - start;
  if l < 2 {
    return
  };
  pidx = start + l / 2;
  pivot = x[pidx];
  lm1  = end -1;
  x[pidx] <-> x[lm1];
  npv = start;
  for i = start; i < lm1; i++ {
    if x[i] < pivot {
      x[npv] <-> x[i];
      npv ++
    }
  };
  x[npv] <-> x[lm1];
  qSortP(x, start, npv)&;
  qSortP(x, npv + 1, end)&
};

func qSort(x) {
  qSortP(x, 0, x.length)
};

func sync printArr(arr) {
  for i = 0; i < arr.length; i++ {
    out(arr[i], ", ")
  };
  out("\n")
};

arr = array(10000);
for i = 0; i < arr.length; i++ {
   arr[i] = int(random() * 1000)
};

//printArr(arr);
res = qSort(arr);
sync res;
//printArr(arr);
return arr.length

