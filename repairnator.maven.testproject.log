[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Spring MVC to RAML Synchronizer
[INFO] Spring MVC to RAML Synchronizer Annotations
[INFO] Spring MVC to RAML Synchronizer Parser
[INFO] Spring MVC to RAML Synchronizer Maven Plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer 0.10.8-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer Annotations 0.10.8-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ springmvc-raml-annotations ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/phoenixnap/springmvc-raml-plugin/285541374/springmvc-raml-annotations/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ springmvc-raml-annotations ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ springmvc-raml-annotations ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/phoenixnap/springmvc-raml-plugin/285541374/springmvc-raml-annotations/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ springmvc-raml-annotations ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ springmvc-raml-annotations ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer Parser 0.10.8-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ springmvc-raml-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ springmvc-raml-parser ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ springmvc-raml-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 114 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ springmvc-raml-parser ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ springmvc-raml-parser ---
[INFO] Surefire report directory: /root/workspace/phoenixnap/springmvc-raml-plugin/285541374/springmvc-raml-parser/target/surefire-reports
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.pom (3 KB at 3.4 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (3 KB at 23.9 KB/sec)
[INFO] Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar
[INFO] Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit4/2.12.4/surefire-junit4-2.12.4.jar (37 KB at 215.9 KB/sec)

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running test.phoenixnap.oss.plugin.naming.RamlStyleCheckerTest
2017-10-09 15:08:19 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /base
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGet
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGetAndPost
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /secondBase
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGet
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithURIParam
2017-10-09 15:08:20 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /{uriParam}
2017-10-09 15:08:20 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:20 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:20 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: PUT
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ignored
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /thisShouldBeIgnored
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /balls
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /balls
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoreMeId}
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /books
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /books
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{bookId}
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /houses
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /houses
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{houseId}
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-10-09 15:08:21 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ignored
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /thisShouldBeIgnored
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ball
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /ball
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoremeId}
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /books
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /books
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{bookId}
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /house
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /house
2017-10-09 15:08:21 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoreMeId}
2017-10-09 15:08:21 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: PUT
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: DELETE
2017-10-09 15:08:21 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.776 sec
Running test.phoenixnap.oss.plugin.naming.SpringMvcResourceParserTest
2017-10-09 15:08:21 INFO [parser.ResourceParser] - Parsing resource: TestController 
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll HEAD from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll OPTIONS from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll PATCH from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll TRACE from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll POST from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll DELETE from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll PUT from method: simpleMethodAllHttpMethods
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod POST from method: simplePostMethod
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter GET from method: getMethodSimpleParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody GET from method: getMethodBodyParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody POST from method: postMethodBodyParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter POST from method: postMethodSimpleParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter GET from method: getMethodTwoParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBodyObject POST from method: postMethodTwoParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBodyObject GET from method: postMethodTwoParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter POST from method: postMethodTwoParameter
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} GET from method: getMethodSimpleParameterPathVariable
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} POST from method: postMethodSimpleParameterPathVariable
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/miscCases/{pathVariable} GET from method: getMethodMiscCasesPathVariable
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/responseObject POST from method: postResponseObject
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/responseObject GET from method: postResponseObject
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/methodBodyIgnore PUT from method: putMethodBodyIgnore
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/descriptionTest/secondBlock/thirdBlock/stuff PUT from method: descriptionTest
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod GET from method: simpleGetMethod
2017-10-09 15:08:21 INFO [parser.ResourceParser] - Parsing resource: UriPrefixIgnoredController 
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint GET from method: endpoint
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint GET from method: endpointAgain
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint POST from method: secondEndpoint
2017-10-09 15:08:21 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint POST from method: secondEndpointAgain
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: BugController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /forgotStuff/{somethingID}/resendStuff POST from method: forgotStuffResendStuff
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: MultipleContentTypeTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint GET from method: endpoint
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint GET from method: endpointAgain
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint POST from method: secondEndpoint
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint POST from method: secondEndpointAgain
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: WrappedResponseBodyTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType GET from method: anotherEndpointWithResponseType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseTypeNonGeneric GET from method: endpointWithResponseTypeNonGeneric
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseTypeNonGeneric POST from method: anotherEndpointWithResponseTypeNonGeneric
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ShorthandTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod POST from method: simplePostMethod
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter GET from method: getMethodSimpleParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody GET from method: getMethodBodyParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody POST from method: postMethodBodyParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter POST from method: postMethodSimpleParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter GET from method: getMethodTwoParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter POST from method: postMethodTwoParameter
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} GET from method: getMethodSimpleParameterPathVariable
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} POST from method: postMethodSimpleParameterPathVariable
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/miscCases/{pathVariable} GET from method: getMethodMiscCasesPathVariable
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/methodBodyIgnore PUT from method: putMethodBodyIgnore
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/descriptionTest/secondBlock/thirdBlock/stuff PUT from method: descriptionTest
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod GET from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: NoValueController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter ObjectTypeInterpreter for type ObjectTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter BooleanTypeInterpreter for type BooleanTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter NullTypeInterpreter for type NullTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter NumberTypeInterpreter for type NumberTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter ArrayTypeInterpreter for type ArrayTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter AnyTypeInterpreter for type AnyTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter FileTypeInterpreter for type FileTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter DateTypeInterpreter for type DateTimeOnlyTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter DateTypeInterpreter for type DateTimeTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter DateTypeInterpreter for type DateTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter DateTypeInterpreter for type TimeOnlyTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter UnionTypeInterpreter for type UnionTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter JsonTypeInterpreter for type JSONTypeDeclaration
2017-10-09 15:08:22 INFO [pojo.RamlInterpreterFactory] - Adding Interpreter StringTypeInterpreter for type StringTypeDeclaration
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - name TestType typeName TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - mime: TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: id to TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: name to TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - name TestType typeName TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - mime: TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: id to TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: name to TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - name TestType typeName TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - mime: TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: id to TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: name to TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - name TestType typeName TestType
2017-10-09 15:08:22 DEBUG [pojo.ObjectTypeInterpreter] - mime: TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: id to TestType
2017-10-09 15:08:22 DEBUG [pojo.PojoBuilder] - Adding field: name to TestType
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.278 sec
Running test.phoenixnap.oss.plugin.naming.SchemaHelperTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running test.phoenixnap.oss.plugin.naming.BugfixTest
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec
Running test.phoenixnap.oss.plugin.naming.JavaDocEntryTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running test.phoenixnap.oss.plugin.naming.RamlVerifierTest
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerDowngradeToWarning 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:22 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param3 in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:22 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param4 in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-10-09 15:08:22 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param5 in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-10-09 15:08:22 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param6 in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: StyleCheckResourceDuplicateCommand 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/{somethingCoolId}/child GET from method: isAParticularSomethingCoolChild
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/child GET from method: isSomethingCoolChild
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: StyleCheckResourceDuplicateCommandSecond 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/status GET from method: isSomethingCoolStatus
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/{somethingCoolId}/status GET from method: isAParticularSomethingCoolStatus
2017-10-09 15:08:22 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /somethingCool
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{somethingCoolId}
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /somethingCool
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{somethingCoolId}
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:22 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:22 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /secondBase in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ContentTypeTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestAndResponseType POST from method: endpointWithRequestAndResponseType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestType POST from method: endpointWithRequestType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithNoContentType GET from method: endpointWithNoContentType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:22 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:22 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:22 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: MultiContentTypeTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestAndResponseType POST from method: endpointWithRequestAndResponseType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestType POST from method: endpointWithRequestType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithNoContentType GET from method: endpointWithNoContentType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithDifferentResponseType
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/json.
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:22 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:22 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:22 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:22 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:22 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:22 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:22 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGetAndPost
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithGetAndPost
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-10-09 15:08:22 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:22 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerPostWarning 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter but found in Form Parameters  param5 in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter but found in Form Parameters  param6 in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is different element2
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is missing element3
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestControllerError 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is missing element3
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-10-09 15:08:23 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: VerifierUriParamTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting URI Param resource: /{someUriParam} in CONTRACT instead of /{aURiParam} as expected
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{aURiParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{aURiParam}/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{aURiParam}/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{aURiParam}/endpointWithGetAndPost in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{aURiParam}/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/{aURiParam}/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting URI Param resource: /{aURiParam} in SOURCE instead of /{someUriParam} as expected
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{someUriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{someUriParam}/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{someUriParam}/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{someUriParam}/endpointWithGetAndPost in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{someUriParam}/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/{someUriParam}/endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerPostMissing 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param5 in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param6 in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: POST in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: GET in CONTRACT
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: POST in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:23 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /{differentNameParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /{uriParam} in CONTRACT
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 3 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ThirdVerifierTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /thirdBase/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-10-09 15:08:23 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-10-09 15:08:23 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /thirdBase in CONTRACT
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:23 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-10-09 15:08:23 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-10-09 15:08:23 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-10-09 15:08:23 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-10-09 15:08:23 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param3 in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-10-09 15:08:23 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param4 in CONTRACT
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-10-09 15:08:23 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-10-09 15:08:23 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.646 sec
Running test.phoenixnap.oss.plugin.naming.NamingHelperTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.phoenixnap.oss.ramlapisync.pojo.UnionTypeInterpretorTest
2017-10-09 15:08:23 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.PhoneNotebook
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - name Phone typeName Phone
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - mime: Phone
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Phone
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: manufacturer to Phone
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: numberOfSIMCards to Phone
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: Phone to PhoneNotebook
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - name Notebook typeName Notebook
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - mime: Notebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Notebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: manufacturer to Notebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: numberOfUSBPorts to Notebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: Notebook to PhoneNotebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Device
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - name Phone typeName Phone
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - mime: Phone
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: Phone to Device
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - name Notebook typeName Notebook
2017-10-09 15:08:23 DEBUG [pojo.ObjectTypeInterpreter] - mime: Notebook
2017-10-09 15:08:23 DEBUG [pojo.PojoBuilder] - Adding field: Notebook to Device
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.217 sec <<< FAILURE!
applySpring4ClientStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.pojo.UnionTypeInterpretorTest)  Time elapsed: 0.157 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a new Device.
     *[
     */
    public Device() {
        super();
    }

    /**
     * Creates a new Device.
     *
     */
    public Device(com.gen.test.model.Phone Phone, com.gen.test.model.Notebook Notebook) {
        super();
        this.Phone = Phone;
        this.Notebook = Notebook;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Device) == false) {
            return false;
        }
        Device otherObject = ((Device) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the Phone.
     *
     * @return
     *     Phone
     */
    public com.gen.test.model.Phone getPhone() {
        return Phone;
    }

    /**
     * Set the Phone.
     *
     * @param Phone
     *     the new Phone
     */
    public void setPhone(com.gen.test.model.Phone Phone) {
        this.Phone = Phone;
    }

    /**
     * Returns the Notebook.
     *
     * @return
     *     Notebook
     */
    public com.gen.test.model.Notebook getNotebook() {
        return Notebook;
    }

    /**
     * Set the Notebook.
     *
     * @param Notebook
     *     the new Notebook
     */
    public void setNotebook(com.gen.test.model.Notebook Notebook) {
        this.Notebook = Notebook;
    }

}
-----------------------------------com.gen.test.model.Notebook.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Notebook implements Serializable
{

    private String manufacturer;
    private Double numberOfUSBPorts;

    /**
     * Creates a new Notebook.
     *
     */
    public Notebook() {
        super();
    }

    /**
     * Creates a new Notebook.
     *
     */
    public Notebook(String manufacturer, Double numberOfUSBPorts) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Notebook) == false) {
            return false;
        }
        Notebook otherObject = ((Notebook) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the manufacturer.
     *
     * @return
     *     manufacturer
     */
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     *
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfUSBPorts.
     *
     * @return
     *     numberOfUSBPorts
     */
    public Double getNumberOfUSBPorts() {
        return numberOfUSBPorts;
    }

    /**
     * Set the numberOfUSBPorts.
     *
     * @param numberOfUSBPorts
     *     the new numberOfUSBPorts
     */
    public void setNumberOfUSBPorts(Double numberOfUSBPorts) {
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

}
-----------------------------------com.gen.test.model.Phone.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Phone implements Serializable
{
    private String manufacturer;
    private Double numberOfSIMCards;

    /**
     * Creates a new Phone.
     *
     */
    public Phone() {
        super();
    }

    /**
     * Creates a new Phone.
     *
     */
    public Phone(String manufacturer, Double numberOfSIMCards) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfSIMCards = numberOfSIMCards;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Phone) == false) {
            return false;
        }
        Phone otherObject = ((Phone) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the manufacturer.
     *
     * @return
     *     manufacturer
     */
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     *
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfSIMCards.
     *
     * @return
     *     numberOfSIMCards
     */
    public Double getNumberOfSIMCards() {
        return numberOfSIMCards;
    }

    /**
     * Set the numberOfSIMCards.
     *
     * @param numberOfSIMCards
     *     the new numberOfSIMCards
     */
    public void setNumberOfSIMCards(Double numberOfSIMCards) {
        this.numberOfSIMCards = numberOfSIMCards;
    }

}
-----------------------------------com.gen.test.model.PhoneNotebook.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class PhoneNotebook implements Serializable
{
    private com.gen.test.model.Phone Phone;
    private com.gen.test.model.Notebook Notebook;

    /**
     * Creates a new PhoneNotebook.
     *
     */
    public PhoneNotebook() {
        super();
    }

    /**
     * Creates a new PhoneNotebook.
     *
     */
    public PhoneNotebook(com.gen.test.model.Phone Phone, com.gen.test.model.Notebook Notebook) {
        super();
        this.Phone = Phone;
        this.Notebook = Notebook;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof PhoneNotebook) == false) {
            return false;
        }
        PhoneNotebook otherObject = ((PhoneNotebook) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the Phone.
     *
     * @return
     *     Phone
     */
    public com.gen.test.model.Phone getPhone() {
        return Phone;
    }

    /**
     * Set the Phone.
     *
     * @param Phone
     *     the new Phone
     */
    public void setPhone(com.gen.test.model.Phone Phone) {
        this.Phone = Phone;
    }

    /**
     * Returns the Notebook.
     *
     * @return
     *     Notebook
     */
    public com.gen.test.model.Notebook getNotebook() {
        return Notebook;
    }

    /**
     * Set the Notebook.
     *
     * @param Notebook
     *     the new Notebook
     */
    public void setNotebook(com.gen.test.model.Notebook Notebook) {
        this.Notebook = Notebook;
    }
}
-----------------------------------com.gen.test.ApiDeviceController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Device;
import com.gen.test.model.PhoneNotebook;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * Api for devices
 * (Generated with springmvc-raml-parser v.0.10.6)
 *
 */
@RestController
@RequestMapping(value = "/api/devices", produces = "application/json")
public interface ApiDeviceController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<String> createDevice(
        @Valid
        @RequestBody
        java.lang.String phoneNotebook)
        throws Exception
    ;

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<Device> getDeviceById(
        @PathVariable
        java.lang.String id)
        throws Exception
    ;

    /**
     * No description
     *]
     */
    @Reques...> but was:<...a new Device.
     *[ 
     */
    public Device() {
        super();
    }

    /**
     * Creates a new Device.
     * 
     */
    public Device(com.gen.test.model.Phone Phone, com.gen.test.model.Notebook Notebook) {
        super();
        this.Phone = Phone;
        this.Notebook = Notebook;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Device) == false) {
            return false;
        }
        Device otherObject = ((Device) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the Phone.
     * 
     * @return
     *     Phone
     */
    public com.gen.test.model.Phone getPhone() {
        return Phone;
    }

    /**
     * Set the Phone.
     * 
     * @param Phone
     *     the new Phone
     */
    public void setPhone(com.gen.test.model.Phone Phone) {
        this.Phone = Phone;
    }

    /**
     * Returns the Notebook.
     * 
     * @return
     *     Notebook
     */
    public com.gen.test.model.Notebook getNotebook() {
        return Notebook;
    }

    /**
     * Set the Notebook.
     * 
     * @param Notebook
     *     the new Notebook
     */
    public void setNotebook(com.gen.test.model.Notebook Notebook) {
        this.Notebook = Notebook;
    }

}
-----------------------------------com.gen.test.model.Notebook.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Notebook implements Serializable
{

    private String manufacturer;
    private Double numberOfUSBPorts;

    /**
     * Creates a new Notebook.
     * 
     */
    public Notebook() {
        super();
    }

    /**
     * Creates a new Notebook.
     * 
     */
    public Notebook(String manufacturer, Double numberOfUSBPorts) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Notebook) == false) {
            return false;
        }
        Notebook otherObject = ((Notebook) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the manufacturer.
     * 
     * @return
     *     manufacturer
     */
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     * 
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfUSBPorts.
     * 
     * @return
     *     numberOfUSBPorts
     */
    public Double getNumberOfUSBPorts() {
        return numberOfUSBPorts;
    }

    /**
     * Set the numberOfUSBPorts.
     * 
     * @param numberOfUSBPorts
     *     the new numberOfUSBPorts
     */
    public void setNumberOfUSBPorts(Double numberOfUSBPorts) {
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

}
-----------------------------------com.gen.test.model.Phone.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Phone implements Serializable
{

    private String manufacturer;
    private Double numberOfSIMCards;

    /**
     * Creates a new Phone.
     * 
     */
    public Phone() {
        super();
    }

    /**
     * Creates a new Phone.
     * 
     */
    public Phone(String manufacturer, Double numberOfSIMCards) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfSIMCards = numberOfSIMCards;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Phone) == false) {
            return false;
        }
        Phone otherObject = ((Phone) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the manufacturer.
     * 
     * @return
     *     manufacturer
     */
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     * 
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfSIMCards.
     * 
     * @return
     *     numberOfSIMCards
     */
    public Double getNumberOfSIMCards() {
        return numberOfSIMCards;
    }

    /**
     * Set the numberOfSIMCards.
     * 
     * @param numberOfSIMCards
     *     the new numberOfSIMCards
     */
    public void setNumberOfSIMCards(Double numberOfSIMCards) {
        this.numberOfSIMCards = numberOfSIMCards;
    }

}
-----------------------------------com.gen.test.model.PhoneNotebook.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class PhoneNotebook implements Serializable
{

    private com.gen.test.model.Phone Phone;
    private com.gen.test.model.Notebook Notebook;

    /**
     * Creates a new PhoneNotebook.
     * 
     */
    public PhoneNotebook() {
        super();
    }

    /**
     * Creates a new PhoneNotebook.
     * 
     */
    public PhoneNotebook(com.gen.test.model.Phone Phone, com.gen.test.model.Notebook Notebook) {
        super();
        this.Phone = Phone;
        this.Notebook = Notebook;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof PhoneNotebook) == false) {
            return false;
        }
        PhoneNotebook otherObject = ((PhoneNotebook) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the Phone.
     * 
     * @return
     *     Phone
     */
    public com.gen.test.model.Phone getPhone() {
        return Phone;
    }

    /**
     * Set the Phone.
     * 
     * @param Phone
     *     the new Phone
     */
    public void setPhone(com.gen.test.model.Phone Phone) {
        this.Phone = Phone;
    }

    /**
     * Returns the Notebook.
     * 
     * @return
     *     Notebook
     */
    public com.gen.test.model.Notebook getNotebook() {
        return Notebook;
    }

    /**
     * Set the Notebook.
     * 
     * @param Notebook
     *     the new Notebook
     */
    public void setNotebook(com.gen.test.model.Notebook Notebook) {
        this.Notebook = Notebook;
    }

}
-----------------------------------com.gen.test.ApiDeviceController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Device;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * Api for devices
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/devices", produces = "application/json")
public interface ApiDeviceController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<String> createDevice(
        @Valid
        @RequestBody
        java.lang.String phoneNotebook)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<Device> getDeviceById(
        @PathVariable
        java.lang.String id)
        throws Exception
    ;

    /**
     * No description
     * ]
     */
    @Reques...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.pojo.UnionTypeInterpretorTest.applySpring4ClientStubRule_shouldCreate_validCode(UnionTypeInterpretorTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRootTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.141 sec
Running com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlActionTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.105 sec
Running com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlEquivalenceTest
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /{managerId} against /{managerId}
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /office against /office
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /{nestedId} against /{nestedId}
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /office against /office
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /{nestedId} against /{nestedId}
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /managers against /managers
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /{managerId} against /{managerId}
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:23 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /office against /office
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources: /{nestedId} against /{nestedId}
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions are null
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: GET against GET
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking actions: POST against POST
2017-10-09 15:08:24 DEBUG [interpreters.RamlEquivalenceTest] - Checking resources are null
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.254 sec
Running com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Validation typeName Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: pattern to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: length to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: minLength to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anEnum type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: blue to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: red to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: green to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnumAgain type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnumAgain to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: testDefArray to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fileObject to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: timeO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateTO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateT to Validation
-----------------------------------com.gen.foo.AnEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnEnum {

    BLUE("blue"),
    RED("red"),
    GREEN("green");
    private final String value;
    private final static Map<String, AnEnum> VALUE_CACHE = new HashMap<String, AnEnum>();

    static {
        for (AnEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnumAgain.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnumAgain {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnumAgain> VALUE_CACHE = new HashMap<String, AnotherEnumAgain>();

    static {
        for (AnotherEnumAgain c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnumAgain(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnumAgain fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Validation.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Validation implements Serializable
{

    final static long serialVersionUID = 4534392681362907778L;
    private String firstname;
    @NotNull
    private String lastname;
    @NotNull
    @Pattern(regexp = "[0-9|-]+")
    private String pattern;
    @NotNull
    @Size(min = 1, max = 3)
    private String length;
    @Size(min = 5)
    private String minLength;
    @NotNull
    @DecimalMin("1.0")
    @DecimalMax("42.3")
    private Long id;
    @NotNull
    private AnEnum anEnum;
    @NotNull
    private AnotherEnum anotherEnum;
    @NotNull
    private AnotherEnumAgain anotherEnumAgain;
    @NotNull
    private List<Object> testDefArray = new ArrayList<Object>();
    @NotNull
    private Object fileObject;
    @NotNull
    private Date dateO;
    @NotNull
    private Date timeO;
    @NotNull
    private Date dateTO;
    @NotNull
    private Date dateT;

    /**
     * Creates a new Validation.
     * 
     */
    public Validation() {
        super();
    }

    /**
     * Creates a new Validation.
     * 
     */
    public Validation(String firstname, String lastname, String pattern, String length, String minLength, Long id, AnEnum anEnum, AnotherEnum anotherEnum, AnotherEnumAgain anotherEnumAgain, List<Object> testDefArray, Object fileObject, Date dateO, Date timeO, Date dateTO, Date dateT) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.pattern = pattern;
        this.length = length;
        this.minLength = minLength;
        this.id = id;
        this.anEnum = anEnum;
        this.anotherEnum = anotherEnum;
        this.anotherEnumAgain = anotherEnumAgain;
        this.testDefArray = testDefArray;
        this.fileObject = fileObject;
        this.dateO = dateO;
        this.timeO = timeO;
        this.dateTO = dateTO;
        this.dateT = dateT;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Validation) == false) {
            return false;
        }
        Validation otherObject = ((Validation) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the pattern.
     * 
     * @return
     *     pattern
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Set the pattern.
     * 
     * @param pattern
     *     the new pattern
     */
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Returns the length.
     * 
     * @return
     *     length
     */
    public String getLength() {
        return length;
    }

    /**
     * Set the length.
     * 
     * @param length
     *     the new length
     */
    public void setLength(String length) {
        this.length = length;
    }

    /**
     * Returns the minLength.
     * 
     * @return
     *     minLength
     */
    public String getMinLength() {
        return minLength;
    }

    /**
     * Set the minLength.
     * 
     * @param minLength
     *     the new minLength
     */
    public void setMinLength(String minLength) {
        this.minLength = minLength;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the anEnum.
     * 
     * @return
     *     anEnum
     */
    public AnEnum getAnEnum() {
        return anEnum;
    }

    /**
     * Set the anEnum.
     * 
     * @param anEnum
     *     the new anEnum
     */
    public void setAnEnum(AnEnum anEnum) {
        this.anEnum = anEnum;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

    /**
     * Returns the anotherEnumAgain.
     * 
     * @return
     *     anotherEnumAgain
     */
    public AnotherEnumAgain getAnotherEnumAgain() {
        return anotherEnumAgain;
    }

    /**
     * Set the anotherEnumAgain.
     * 
     * @param anotherEnumAgain
     *     the new anotherEnumAgain
     */
    public void setAnotherEnumAgain(AnotherEnumAgain anotherEnumAgain) {
        this.anotherEnumAgain = anotherEnumAgain;
    }

    /**
     * Returns the testDefArray.
     * 
     * @return
     *     testDefArray
     */
    public List<Object> getTestDefArray() {
        return testDefArray;
    }

    /**
     * Set the testDefArray.
     * 
     * @param testDefArray
     *     the new testDefArray
     */
    public void setTestDefArray(List<Object> testDefArray) {
        this.testDefArray = testDefArray;
    }

    /**
     * Returns the fileObject.
     * 
     * @return
     *     fileObject
     */
    public Object getFileObject() {
        return fileObject;
    }

    /**
     * Set the fileObject.
     * 
     * @param fileObject
     *     the new fileObject
     */
    public void setFileObject(Object fileObject) {
        this.fileObject = fileObject;
    }

    /**
     * Returns the dateO.
     * 
     * @return
     *     dateO
     */
    public Date getDateO() {
        return dateO;
    }

    /**
     * Set the dateO.
     * 
     * @param dateO
     *     the new dateO
     */
    public void setDateO(Date dateO) {
        this.dateO = dateO;
    }

    /**
     * Returns the timeO.
     * 
     * @return
     *     timeO
     */
    public Date getTimeO() {
        return timeO;
    }

    /**
     * Set the timeO.
     * 
     * @param timeO
     *     the new timeO
     */
    public void setTimeO(Date timeO) {
        this.timeO = timeO;
    }

    /**
     * Returns the dateTO.
     * 
     * @return
     *     dateTO
     */
    public Date getDateTO() {
        return dateTO;
    }

    /**
     * Set the dateTO.
     * 
     * @param dateTO
     *     the new dateTO
     */
    public void setDateTO(Date dateTO) {
        this.dateTO = dateTO;
    }

    /**
     * Returns the dateT.
     * 
     * @return
     *     dateT
     */
    public Date getDateT() {
        return dateT;
    }

    /**
     * Set the dateT.
     * 
     * @param dateT
     *     the new dateT
     */
    public void setDateT(Date dateT) {
        this.dateT = dateT;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name NestedArrayPerson typeName NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: departmentList to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: childList to NestedArrayPerson
-----------------------------------com.gen.foo.NestedArrayPerson.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class NestedArrayPerson implements Serializable
{

    final static long serialVersionUID = 4498038037710955073L;
    private String firstname;
    private String lastname;
    private Long id;
    private List<com.gen.foo.Object> departmentList = new ArrayList<com.gen.foo.Object>();
    private List<com.gen.foo.Object> childList = new ArrayList<com.gen.foo.Object>();

    /**
     * Creates a new NestedArrayPerson.
     * 
     */
    public NestedArrayPerson() {
        super();
    }

    /**
     * Creates a new NestedArrayPerson.
     * 
     */
    public NestedArrayPerson(String firstname, String lastname, Long id, List<com.gen.foo.Object> departmentList, List<com.gen.foo.Object> childList) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.departmentList = departmentList;
        this.childList = childList;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof NestedArrayPerson) == false) {
            return false;
        }
        NestedArrayPerson otherObject = ((NestedArrayPerson) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the departmentList.
     * 
     * @return
     *     departmentList
     */
    public List<com.gen.foo.Object> getDepartmentList() {
        return departmentList;
    }

    /**
     * Set the departmentList.
     * 
     * @param departmentList
     *     the new departmentList
     */
    public void setDepartmentList(List<com.gen.foo.Object> departmentList) {
        this.departmentList = departmentList;
    }

    /**
     * Returns the childList.
     * 
     * @return
     *     childList
     */
    public List<com.gen.foo.Object> getChildList() {
        return childList;
    }

    /**
     * Set the childList.
     * 
     * @param childList
     *     the new childList
     */
    public void setChildList(List<com.gen.foo.Object> childList) {
        this.childList = childList;
    }

}
-----------------------------------com.gen.foo.Object.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    final static long serialVersionUID = 3147958656974535616L;
    private String name;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name BigStuff typeName BigStuff
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theDecimal to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theInteger to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to BigStuff
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.BigStuff.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.math.BigDecimal;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class BigStuff implements Serializable
{

    final static long serialVersionUID = 3108299038299280063L;
    private BigDecimal theDecimal;
    private Long theInteger;
    private AnotherEnum anotherEnum;

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff() {
        super();
    }

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff(BigDecimal theDecimal, Long theInteger, AnotherEnum anotherEnum) {
        super();
        this.theDecimal = theDecimal;
        this.theInteger = theInteger;
        this.anotherEnum = anotherEnum;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof BigStuff) == false) {
            return false;
        }
        BigStuff otherObject = ((BigStuff) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the theDecimal.
     * 
     * @return
     *     theDecimal
     */
    public BigDecimal getTheDecimal() {
        return theDecimal;
    }

    /**
     * Set the theDecimal.
     * 
     * @param theDecimal
     *     the new theDecimal
     */
    public void setTheDecimal(BigDecimal theDecimal) {
        this.theDecimal = theDecimal;
    }

    /**
     * Returns the theInteger.
     * 
     * @return
     *     theInteger
     */
    public Long getTheInteger() {
        return theInteger;
    }

    /**
     * Set the theInteger.
     * 
     * @param theInteger
     *     the new theInteger
     */
    public void setTheInteger(Long theInteger) {
        this.theInteger = theInteger;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Song typeName Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: songId to Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: songTitle to Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: artist to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name FeeCategory typeName FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: abc to FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: efg to FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fee to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name FeeCategory typeName FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: otherFee to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Song typeName Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Song typeName Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: songId to Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: songTitle to Song
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: artist to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name FeeCategory typeName FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: abc to FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: efg to FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fee to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name FeeCategory typeName FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: FeeCategory
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: otherFee to Song
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name BigStuff typeName BigStuff
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theDecimal to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theInteger to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Validation typeName Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: pattern to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: length to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: minLength to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anEnum type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: blue to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: red to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: green to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Enum com.gen.test.model.AnotherEnum already exists. Reusing it!
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnumAgain type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnumAgain to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: testDefArray to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fileObject to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: timeO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateTO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateT to Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Person typeName Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Manager typeName Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Department typeName Department
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: department to Manager
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name clearanceLevel type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: low to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: high to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: clearanceLevel to Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name NestedArrayPerson typeName NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: departmentList to NestedArrayPerson
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: childList to NestedArrayPerson
-----------------------------------com.gen.test.model.AnEnum.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum AnEnum {

    BLUE("blue"),
    RED("red"),
    GREEN("green");
    private final String value;
    private final static Map<String, AnEnum> VALUE_CACHE = new HashMap<String, AnEnum>();

    static {
        for (AnEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.AnotherEnum.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.AnotherEnumAgain.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnumAgain {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnumAgain> VALUE_CACHE = new HashMap<String, AnotherEnumAgain>();

    static {
        for (AnotherEnumAgain c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnumAgain(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnumAgain fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.BigStuff.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class BigStuff implements Serializable
{

    final static long serialVersionUID = 3374348956444508965L;
    private Double theDecimal;
    private Long theInteger;
    private AnotherEnum anotherEnum;

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff() {
        super();
    }

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff(Double theDecimal, Long theInteger, AnotherEnum anotherEnum) {
        super();
        this.theDecimal = theDecimal;
        this.theInteger = theInteger;
        this.anotherEnum = anotherEnum;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof BigStuff) == false) {
            return false;
        }
        BigStuff otherObject = ((BigStuff) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the theDecimal.
     * 
     * @return
     *     theDecimal
     */
    public Double getTheDecimal() {
        return theDecimal;
    }

    /**
     * Set the theDecimal.
     * 
     * @param theDecimal
     *     the new theDecimal
     */
    public void setTheDecimal(Double theDecimal) {
        this.theDecimal = theDecimal;
    }

    /**
     * Returns the theInteger.
     * 
     * @return
     *     theInteger
     */
    public Long getTheInteger() {
        return theInteger;
    }

    /**
     * Set the theInteger.
     * 
     * @param theInteger
     *     the new theInteger
     */
    public void setTheInteger(Long theInteger) {
        this.theInteger = theInteger;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

}
-----------------------------------com.gen.test.model.ClearanceLevel.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum ClearanceLevel {

    LOW("low"),
    HIGH("high");
    private final String value;
    private final static Map<String, ClearanceLevel> VALUE_CACHE = new HashMap<String, ClearanceLevel>();

    static {
        for (ClearanceLevel c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ClearanceLevel(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ClearanceLevel fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.Department.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Department implements Serializable
{

    final static long serialVersionUID = 3215710494628388641L;
    private String name;

    /**
     * Creates a new Department.
     * 
     */
    public Department() {
        super();
    }

    /**
     * Creates a new Department.
     * 
     */
    public Department(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Department) == false) {
            return false;
        }
        Department otherObject = ((Department) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}
-----------------------------------com.gen.test.model.FeeCategory.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class FeeCategory implements Serializable
{

    final static long serialVersionUID = 3032284780267039101L;
    private String abc;
    private String efg;

    /**
     * Creates a new FeeCategory.
     * 
     */
    public FeeCategory() {
        super();
    }

    /**
     * Creates a new FeeCategory.
     * 
     */
    public FeeCategory(String abc, String efg) {
        super();
        this.abc = abc;
        this.efg = efg;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof FeeCategory) == false) {
            return false;
        }
        FeeCategory otherObject = ((FeeCategory) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the abc.
     * 
     * @return
     *     abc
     */
    public String getAbc() {
        return abc;
    }

    /**
     * Set the abc.
     * 
     * @param abc
     *     the new abc
     */
    public void setAbc(String abc) {
        this.abc = abc;
    }

    /**
     * Returns the efg.
     * 
     * @return
     *     efg
     */
    public String getEfg() {
        return efg;
    }

    /**
     * Set the efg.
     * 
     * @param efg
     *     the new efg
     */
    public void setEfg(String efg) {
        this.efg = efg;
    }

}
-----------------------------------com.gen.test.model.Manager.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Manager implements Serializable
{

    final static long serialVersionUID = 3278504886927156579L;
    private String firstname;
    private String lastname;
    private Long id;
    private Department department;
    private ClearanceLevel clearanceLevel;

    /**
     * Creates a new Manager.
     * 
     */
    public Manager() {
        super();
    }

    /**
     * Creates a new Manager.
     * 
     */
    public Manager(String firstname, String lastname, Long id, Department department, ClearanceLevel clearanceLevel) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.department = department;
        this.clearanceLevel = clearanceLevel;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Manager) == false) {
            return false;
        }
        Manager otherObject = ((Manager) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the department.
     * 
     * @return
     *     department
     */
    public Department getDepartment() {
        return department;
    }

    /**
     * Set the department.
     * 
     * @param department
     *     the new department
     */
    public void setDepartment(Department department) {
        this.department = department;
    }

    /**
     * Returns the clearanceLevel.
     * 
     * @return
     *     clearanceLevel
     */
    public ClearanceLevel getClearanceLevel() {
        return clearanceLevel;
    }

    /**
     * Set the clearanceLevel.
     * 
     * @param clearanceLevel
     *     the new clearanceLevel
     */
    public void setClearanceLevel(ClearanceLevel clearanceLevel) {
        this.clearanceLevel = clearanceLevel;
    }

}
-----------------------------------com.gen.test.model.NestedArrayPerson.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class NestedArrayPerson implements Serializable
{

    final static long serialVersionUID = 3222320431790092449L;
    private String firstname;
    private String lastname;
    private Long id;
    private List<com.gen.test.model.Object> departmentList = new ArrayList<com.gen.test.model.Object>();
    private List<com.gen.test.model.Object> childList = new ArrayList<com.gen.test.model.Object>();

    /**
     * Creates a new NestedArrayPerson.
     * 
     */
    public NestedArrayPerson() {
        super();
    }

    /**
     * Creates a new NestedArrayPerson.
     * 
     */
    public NestedArrayPerson(String firstname, String lastname, Long id, List<com.gen.test.model.Object> departmentList, List<com.gen.test.model.Object> childList) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.departmentList = departmentList;
        this.childList = childList;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof NestedArrayPerson) == false) {
            return false;
        }
        NestedArrayPerson otherObject = ((NestedArrayPerson) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the departmentList.
     * 
     * @return
     *     departmentList
     */
    public List<com.gen.test.model.Object> getDepartmentList() {
        return departmentList;
    }

    /**
     * Set the departmentList.
     * 
     * @param departmentList
     *     the new departmentList
     */
    public void setDepartmentList(List<com.gen.test.model.Object> departmentList) {
        this.departmentList = departmentList;
    }

    /**
     * Returns the childList.
     * 
     * @return
     *     childList
     */
    public List<com.gen.test.model.Object> getChildList() {
        return childList;
    }

    /**
     * Set the childList.
     * 
     * @param childList
     *     the new childList
     */
    public void setChildList(List<com.gen.test.model.Object> childList) {
        this.childList = childList;
    }

}
-----------------------------------com.gen.test.model.Object.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    final static long serialVersionUID = 3347909207797693732L;
    private String firstname;
    private String lastname;
    private Long id;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String firstname, String lastname, Long id) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

}
-----------------------------------com.gen.test.model.Person.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Person implements Serializable
{

    final static long serialVersionUID = 3258675079737012450L;
    private String firstname;
    private String lastname;
    private Long id;

    /**
     * Creates a new Person.
     * 
     */
    public Person() {
        super();
    }

    /**
     * Creates a new Person.
     * 
     */
    public Person(String firstname, String lastname, Long id) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Person) == false) {
            return false;
        }
        Person otherObject = ((Person) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

}
-----------------------------------com.gen.test.model.Song.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Song implements Serializable
{

    final static long serialVersionUID = 2994277649103434972L;
    private String songId;
    private String songTitle;
    private String artist;
    private FeeCategory fee;
    private FeeCategory otherFee;

    /**
     * Creates a new Song.
     * 
     */
    public Song() {
        super();
    }

    /**
     * Creates a new Song.
     * 
     */
    public Song(String songId, String songTitle, String artist, FeeCategory fee, FeeCategory otherFee) {
        super();
        this.songId = songId;
        this.songTitle = songTitle;
        this.artist = artist;
        this.fee = fee;
        this.otherFee = otherFee;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Song) == false) {
            return false;
        }
        Song otherObject = ((Song) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the songId.
     * 
     * @return
     *     songId
     */
    public String getSongId() {
        return songId;
    }

    /**
     * Set the songId.
     * 
     * @param songId
     *     the new songId
     */
    public void setSongId(String songId) {
        this.songId = songId;
    }

    /**
     * Returns the songTitle.
     * 
     * @return
     *     songTitle
     */
    public String getSongTitle() {
        return songTitle;
    }

    /**
     * Set the songTitle.
     * 
     * @param songTitle
     *     the new songTitle
     */
    public void setSongTitle(String songTitle) {
        this.songTitle = songTitle;
    }

    /**
     * Returns the artist.
     * 
     * @return
     *     artist
     */
    public String getArtist() {
        return artist;
    }

    /**
     * Set the artist.
     * 
     * @param artist
     *     the new artist
     */
    public void setArtist(String artist) {
        this.artist = artist;
    }

    /**
     * Returns the fee.
     * 
     * @return
     *     fee
     */
    public FeeCategory getFee() {
        return fee;
    }

    /**
     * Set the fee.
     * 
     * @param fee
     *     the new fee
     */
    public void setFee(FeeCategory fee) {
        this.fee = fee;
    }

    /**
     * Returns the otherFee.
     * 
     * @return
     *     otherFee
     */
    public FeeCategory getOtherFee() {
        return otherFee;
    }

    /**
     * Set the otherFee.
     * 
     * @param otherFee
     *     the new otherFee
     */
    public void setOtherFee(FeeCategory otherFee) {
        this.otherFee = otherFee;
    }

}
-----------------------------------com.gen.test.model.Validation.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Validation implements Serializable
{

    final static long serialVersionUID = 3392526280417968966L;
    private String firstname;
    private String lastname;
    private String pattern;
    private String length;
    private String minLength;
    private Long id;
    private AnEnum anEnum;
    private AnotherEnum anotherEnum;
    private AnotherEnumAgain anotherEnumAgain;
    private List<Object> testDefArray = new ArrayList<Object>();
    private Object fileObject;
    private Date dateO;
    private Date timeO;
    private Date dateTO;
    private Date dateT;

    /**
     * Creates a new Validation.
     * 
     */
    public Validation() {
        super();
    }

    /**
     * Creates a new Validation.
     * 
     */
    public Validation(String firstname, String lastname, String pattern, String length, String minLength, Long id, AnEnum anEnum, AnotherEnum anotherEnum, AnotherEnumAgain anotherEnumAgain, List<Object> testDefArray, Object fileObject, Date dateO, Date timeO, Date dateTO, Date dateT) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.pattern = pattern;
        this.length = length;
        this.minLength = minLength;
        this.id = id;
        this.anEnum = anEnum;
        this.anotherEnum = anotherEnum;
        this.anotherEnumAgain = anotherEnumAgain;
        this.testDefArray = testDefArray;
        this.fileObject = fileObject;
        this.dateO = dateO;
        this.timeO = timeO;
        this.dateTO = dateTO;
        this.dateT = dateT;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Validation) == false) {
            return false;
        }
        Validation otherObject = ((Validation) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the pattern.
     * 
     * @return
     *     pattern
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Set the pattern.
     * 
     * @param pattern
     *     the new pattern
     */
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Returns the length.
     * 
     * @return
     *     length
     */
    public String getLength() {
        return length;
    }

    /**
     * Set the length.
     * 
     * @param length
     *     the new length
     */
    public void setLength(String length) {
        this.length = length;
    }

    /**
     * Returns the minLength.
     * 
     * @return
     *     minLength
     */
    public String getMinLength() {
        return minLength;
    }

    /**
     * Set the minLength.
     * 
     * @param minLength
     *     the new minLength
     */
    public void setMinLength(String minLength) {
        this.minLength = minLength;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the anEnum.
     * 
     * @return
     *     anEnum
     */
    public AnEnum getAnEnum() {
        return anEnum;
    }

    /**
     * Set the anEnum.
     * 
     * @param anEnum
     *     the new anEnum
     */
    public void setAnEnum(AnEnum anEnum) {
        this.anEnum = anEnum;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

    /**
     * Returns the anotherEnumAgain.
     * 
     * @return
     *     anotherEnumAgain
     */
    public AnotherEnumAgain getAnotherEnumAgain() {
        return anotherEnumAgain;
    }

    /**
     * Set the anotherEnumAgain.
     * 
     * @param anotherEnumAgain
     *     the new anotherEnumAgain
     */
    public void setAnotherEnumAgain(AnotherEnumAgain anotherEnumAgain) {
        this.anotherEnumAgain = anotherEnumAgain;
    }

    /**
     * Returns the testDefArray.
     * 
     * @return
     *     testDefArray
     */
    public List<Object> getTestDefArray() {
        return testDefArray;
    }

    /**
     * Set the testDefArray.
     * 
     * @param testDefArray
     *     the new testDefArray
     */
    public void setTestDefArray(List<Object> testDefArray) {
        this.testDefArray = testDefArray;
    }

    /**
     * Returns the fileObject.
     * 
     * @return
     *     fileObject
     */
    public Object getFileObject() {
        return fileObject;
    }

    /**
     * Set the fileObject.
     * 
     * @param fileObject
     *     the new fileObject
     */
    public void setFileObject(Object fileObject) {
        this.fileObject = fileObject;
    }

    /**
     * Returns the dateO.
     * 
     * @return
     *     dateO
     */
    public Date getDateO() {
        return dateO;
    }

    /**
     * Set the dateO.
     * 
     * @param dateO
     *     the new dateO
     */
    public void setDateO(Date dateO) {
        this.dateO = dateO;
    }

    /**
     * Returns the timeO.
     * 
     * @return
     *     timeO
     */
    public Date getTimeO() {
        return timeO;
    }

    /**
     * Set the timeO.
     * 
     * @param timeO
     *     the new timeO
     */
    public void setTimeO(Date timeO) {
        this.timeO = timeO;
    }

    /**
     * Returns the dateTO.
     * 
     * @return
     *     dateTO
     */
    public Date getDateTO() {
        return dateTO;
    }

    /**
     * Set the dateTO.
     * 
     * @param dateTO
     *     the new dateTO
     */
    public void setDateTO(Date dateTO) {
        this.dateTO = dateTO;
    }

    /**
     * Returns the dateT.
     * 
     * @return
     *     dateT
     */
    public Date getDateT() {
        return dateT;
    }

    /**
     * Set the dateT.
     * 
     * @param dateT
     *     the new dateT
     */
    public void setDateT(Date dateT) {
        this.dateT = dateT;
    }

}
-----------------------------------com.gen.test.BigStuffController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.BigStuff;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface BigStuffController {


    /**
     * No description
     * 
     */
    public ResponseEntity<BigStuff> getBigStuff()
        throws Exception
    ;

}
-----------------------------------com.gen.test.BigStuffControllerDecorator.java-----------------------------------

package com.gen.test;

import com.gen.test.model.BigStuff;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/bigStuff", produces = "application/json")
@Validated
public class BigStuffControllerDecorator {

    @Autowired
    private BigStuffController bigStuffControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<BigStuff> getBigStuff()
        throws Exception
    {
        return this.bigStuffControllerDelegate.getBigStuff();
    }

}
-----------------------------------com.gen.test.ManagerController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Manager;
import com.gen.test.model.Person;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface ManagerController {


    /**
     * No description
     * 
     */
    public ResponseEntity<Person> getManagers()
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> createManager(Manager manager)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> deleteManagers()
        throws Exception
    ;

}
-----------------------------------com.gen.test.ManagerControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Manager;
import com.gen.test.model.Person;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/managers", produces = "application/json")
@Validated
public class ManagerControllerDecorator {

    @Autowired
    private ManagerController managerControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<Person> getManagers()
        throws Exception
    {
        return this.managerControllerDelegate.getManagers();
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> createManager(
        @Valid
        @RequestBody
        Manager manager)
        throws Exception
    {
        return this.managerControllerDelegate.createManager(manager);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.DELETE)
    public ResponseEntity<?> deleteManagers()
        throws Exception
    {
        return this.managerControllerDelegate.deleteManagers();
    }

}
-----------------------------------com.gen.test.NestedArrayPersonController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Person;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface NestedArrayPersonController {


    /**
     * No description
     * 
     */
    public ResponseEntity<Person> getNestedArrayPersons()
        throws Exception
    ;

}
-----------------------------------com.gen.test.NestedArrayPersonControllerDecorator.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Person;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/nestedArrayPersons", produces = "application/json")
@Validated
public class NestedArrayPersonControllerDecorator {

    @Autowired
    private NestedArrayPersonController nestedArrayPersonControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<Person> getNestedArrayPersons()
        throws Exception
    {
        return this.nestedArrayPersonControllerDelegate.getNestedArrayPersons();
    }

}
-----------------------------------com.gen.test.NestedNestedArrayPersonController.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.NestedArrayPerson;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface NestedNestedArrayPersonController {


    /**
     * No description
     * 
     */
    public ResponseEntity<List<NestedArrayPerson>> getNestedNestedArrayPersons()
        throws Exception
    ;

}
-----------------------------------com.gen.test.NestedNestedArrayPersonControllerDecorator.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.NestedArrayPerson;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/nestedNestedArrayPersons", produces = "application/json")
@Validated
public class NestedNestedArrayPersonControllerDecorator {

    @Autowired
    private NestedNestedArrayPersonController nestedNestedArrayPersonControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<List<NestedArrayPerson>> getNestedNestedArrayPersons()
        throws Exception
    {
        return this.nestedNestedArrayPersonControllerDelegate.getNestedNestedArrayPersons();
    }

}
-----------------------------------com.gen.test.PersonController.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Object;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface PersonController {


    /**
     * No description
     * 
     */
    public ResponseEntity<List<Object>> getPersons()
        throws Exception
    ;

}
-----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Object;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/persons", produces = "application/json")
@Validated
public class PersonControllerDecorator {

    @Autowired
    private PersonController personControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<List<Object>> getPersons()
        throws Exception
    {
        return this.personControllerDelegate.getPersons();
    }

}
-----------------------------------com.gen.test.PersonListController.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Person;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface PersonListController {


    /**
     * No description
     * 
     */
    public ResponseEntity<List<Person>> getPersonLists()
        throws Exception
    ;

}
-----------------------------------com.gen.test.PersonListControllerDecorator.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Person;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/personLists", produces = "application/json")
@Validated
public class PersonListControllerDecorator {

    @Autowired
    private PersonListController personListControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<List<Person>> getPersonLists()
        throws Exception
    {
        return this.personListControllerDelegate.getPersonLists();
    }

}
-----------------------------------com.gen.test.SongController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Song;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface SongController {


    /**
     * No description
     * 
     */
    public ResponseEntity<Song> getSongs()
        throws Exception
    ;

}
-----------------------------------com.gen.test.SongControllerDecorator.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Song;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/songs", produces = "application/json")
@Validated
public class SongControllerDecorator {

    @Autowired
    private SongController songControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<Song> getSongs()
        throws Exception
    {
        return this.songControllerDelegate.getSongs();
    }

}
-----------------------------------com.gen.test.ValidationController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Validation;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface ValidationController {


    /**
     * No description
     * 
     */
    public ResponseEntity<Validation> getValidations()
        throws Exception
    ;

}
-----------------------------------com.gen.test.ValidationControllerDecorator.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Validation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/validations", produces = "application/json")
@Validated
public class ValidationControllerDecorator {

    @Autowired
    private ValidationController validationControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<Validation> getValidations()
        throws Exception
    {
        return this.validationControllerDelegate.getValidations();
    }

}
-----------------------------------com.gen.foo.FeeCategory.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class FeeCategory implements Serializable
{

    final static long serialVersionUID = 3035589742405440061L;
    private String abc;
    private String efg;

    /**
     * Creates a new FeeCategory.
     * 
     */
    public FeeCategory() {
        super();
    }

    /**
     * Creates a new FeeCategory.
     * 
     */
    public FeeCategory(String abc, String efg) {
        super();
        this.abc = abc;
        this.efg = efg;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof FeeCategory) == false) {
            return false;
        }
        FeeCategory otherObject = ((FeeCategory) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the abc.
     * 
     * @return
     *     abc
     */
    public String getAbc() {
        return abc;
    }

    /**
     * Set the abc.
     * 
     * @param abc
     *     the new abc
     */
    public void setAbc(String abc) {
        this.abc = abc;
    }

    /**
     * Returns the efg.
     * 
     * @return
     *     efg
     */
    public String getEfg() {
        return efg;
    }

    /**
     * Set the efg.
     * 
     * @param efg
     *     the new efg
     */
    public void setEfg(String efg) {
        this.efg = efg;
    }

}
-----------------------------------com.gen.foo.Song.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Song implements Serializable
{

    final static long serialVersionUID = 3057072037107235613L;
    private String songId;
    private String songTitle;
    private String artist;
    private FeeCategory fee;
    private FeeCategory otherFee;

    /**
     * Creates a new Song.
     * 
     */
    public Song() {
        super();
    }

    /**
     * Creates a new Song.
     * 
     */
    public Song(String songId, String songTitle, String artist, FeeCategory fee, FeeCategory otherFee) {
        super();
        this.songId = songId;
        this.songTitle = songTitle;
        this.artist = artist;
        this.fee = fee;
        this.otherFee = otherFee;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Song) == false) {
            return false;
        }
        Song otherObject = ((Song) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the songId.
     * 
     * @return
     *     songId
     */
    public String getSongId() {
        return songId;
    }

    /**
     * Set the songId.
     * 
     * @param songId
     *     the new songId
     */
    public void setSongId(String songId) {
        this.songId = songId;
    }

    /**
     * Returns the songTitle.
     * 
     * @return
     *     songTitle
     */
    public String getSongTitle() {
        return songTitle;
    }

    /**
     * Set the songTitle.
     * 
     * @param songTitle
     *     the new songTitle
     */
    public void setSongTitle(String songTitle) {
        this.songTitle = songTitle;
    }

    /**
     * Returns the artist.
     * 
     * @return
     *     artist
     */
    public String getArtist() {
        return artist;
    }

    /**
     * Set the artist.
     * 
     * @param artist
     *     the new artist
     */
    public void setArtist(String artist) {
        this.artist = artist;
    }

    /**
     * Returns the fee.
     * 
     * @return
     *     fee
     */
    public FeeCategory getFee() {
        return fee;
    }

    /**
     * Set the fee.
     * 
     * @param fee
     *     the new fee
     */
    public void setFee(FeeCategory fee) {
        this.fee = fee;
    }

    /**
     * Returns the otherFee.
     * 
     * @return
     *     otherFee
     */
    public FeeCategory getOtherFee() {
        return otherFee;
    }

    /**
     * Set the otherFee.
     * 
     * @param otherFee
     *     the new otherFee
     */
    public void setOtherFee(FeeCategory otherFee) {
        this.otherFee = otherFee;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Validation typeName Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: pattern to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: length to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: minLength to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anEnum type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: blue to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: red to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: green to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnumAgain type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnumAgain to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: testDefArray to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fileObject to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: timeO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateTO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateT to Validation
-----------------------------------com.gen.foo.AnEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnEnum {

    BLUE("blue"),
    RED("red"),
    GREEN("green");
    private final String value;
    private final static Map<String, AnEnum> VALUE_CACHE = new HashMap<String, AnEnum>();

    static {
        for (AnEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnumAgain.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnumAgain {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnumAgain> VALUE_CACHE = new HashMap<String, AnotherEnumAgain>();

    static {
        for (AnotherEnumAgain c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnumAgain(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnumAgain fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Validation.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Validation implements Serializable
{

    final static long serialVersionUID = 3452015697693434055L;
    private String firstname;
    @NotNull
    private String lastname;
    @NotNull
    @Pattern(regexp = "[0-9|-]+")
    private String pattern;
    @NotNull
    @Size(min = 1, max = 3)
    private String length;
    @Size(min = 5)
    private String minLength;
    @NotNull
    @DecimalMin("1.0")
    @DecimalMax("42.3")
    private Long id;
    @NotNull
    private AnEnum anEnum;
    @NotNull
    private AnotherEnum anotherEnum;
    @NotNull
    private AnotherEnumAgain anotherEnumAgain;
    @NotNull
    private List<Object> testDefArray = new ArrayList<Object>();
    @NotNull
    private Object fileObject;
    @NotNull
    private Date dateO;
    @NotNull
    private Date timeO;
    @NotNull
    private Date dateTO;
    @NotNull
    private Date dateT;

    /**
     * Creates a new Validation.
     * 
     */
    public Validation() {
        super();
    }

    /**
     * Creates a new Validation.
     * 
     */
    public Validation(String firstname, String lastname, String pattern, String length, String minLength, Long id, AnEnum anEnum, AnotherEnum anotherEnum, AnotherEnumAgain anotherEnumAgain, List<Object> testDefArray, Object fileObject, Date dateO, Date timeO, Date dateTO, Date dateT) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.pattern = pattern;
        this.length = length;
        this.minLength = minLength;
        this.id = id;
        this.anEnum = anEnum;
        this.anotherEnum = anotherEnum;
        this.anotherEnumAgain = anotherEnumAgain;
        this.testDefArray = testDefArray;
        this.fileObject = fileObject;
        this.dateO = dateO;
        this.timeO = timeO;
        this.dateTO = dateTO;
        this.dateT = dateT;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Validation) == false) {
            return false;
        }
        Validation otherObject = ((Validation) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the pattern.
     * 
     * @return
     *     pattern
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Set the pattern.
     * 
     * @param pattern
     *     the new pattern
     */
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Returns the length.
     * 
     * @return
     *     length
     */
    public String getLength() {
        return length;
    }

    /**
     * Set the length.
     * 
     * @param length
     *     the new length
     */
    public void setLength(String length) {
        this.length = length;
    }

    /**
     * Returns the minLength.
     * 
     * @return
     *     minLength
     */
    public String getMinLength() {
        return minLength;
    }

    /**
     * Set the minLength.
     * 
     * @param minLength
     *     the new minLength
     */
    public void setMinLength(String minLength) {
        this.minLength = minLength;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the anEnum.
     * 
     * @return
     *     anEnum
     */
    public AnEnum getAnEnum() {
        return anEnum;
    }

    /**
     * Set the anEnum.
     * 
     * @param anEnum
     *     the new anEnum
     */
    public void setAnEnum(AnEnum anEnum) {
        this.anEnum = anEnum;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

    /**
     * Returns the anotherEnumAgain.
     * 
     * @return
     *     anotherEnumAgain
     */
    public AnotherEnumAgain getAnotherEnumAgain() {
        return anotherEnumAgain;
    }

    /**
     * Set the anotherEnumAgain.
     * 
     * @param anotherEnumAgain
     *     the new anotherEnumAgain
     */
    public void setAnotherEnumAgain(AnotherEnumAgain anotherEnumAgain) {
        this.anotherEnumAgain = anotherEnumAgain;
    }

    /**
     * Returns the testDefArray.
     * 
     * @return
     *     testDefArray
     */
    public List<Object> getTestDefArray() {
        return testDefArray;
    }

    /**
     * Set the testDefArray.
     * 
     * @param testDefArray
     *     the new testDefArray
     */
    public void setTestDefArray(List<Object> testDefArray) {
        this.testDefArray = testDefArray;
    }

    /**
     * Returns the fileObject.
     * 
     * @return
     *     fileObject
     */
    public Object getFileObject() {
        return fileObject;
    }

    /**
     * Set the fileObject.
     * 
     * @param fileObject
     *     the new fileObject
     */
    public void setFileObject(Object fileObject) {
        this.fileObject = fileObject;
    }

    /**
     * Returns the dateO.
     * 
     * @return
     *     dateO
     */
    public Date getDateO() {
        return dateO;
    }

    /**
     * Set the dateO.
     * 
     * @param dateO
     *     the new dateO
     */
    public void setDateO(Date dateO) {
        this.dateO = dateO;
    }

    /**
     * Returns the timeO.
     * 
     * @return
     *     timeO
     */
    public Date getTimeO() {
        return timeO;
    }

    /**
     * Set the timeO.
     * 
     * @param timeO
     *     the new timeO
     */
    public void setTimeO(Date timeO) {
        this.timeO = timeO;
    }

    /**
     * Returns the dateTO.
     * 
     * @return
     *     dateTO
     */
    public Date getDateTO() {
        return dateTO;
    }

    /**
     * Set the dateTO.
     * 
     * @param dateTO
     *     the new dateTO
     */
    public void setDateTO(Date dateTO) {
        this.dateTO = dateTO;
    }

    /**
     * Returns the dateT.
     * 
     * @return
     *     dateT
     */
    public Date getDateT() {
        return dateT;
    }

    /**
     * Set the dateT.
     * 
     * @param dateT
     *     the new dateT
     */
    public void setDateT(Date dateT) {
        this.dateT = dateT;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Validation typeName Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: pattern to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: length to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: minLength to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anEnum type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: blue to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: red to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: green to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnumAgain type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnumAgain to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: testDefArray to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fileObject to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: timeO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateTO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateT to Validation
-----------------------------------com.gen.foo.AnEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnEnum {

    BLUE("blue"),
    RED("red"),
    GREEN("green");
    private final String value;
    private final static Map<String, AnEnum> VALUE_CACHE = new HashMap<String, AnEnum>();

    static {
        for (AnEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnumAgain.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnumAgain {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnumAgain> VALUE_CACHE = new HashMap<String, AnotherEnumAgain>();

    static {
        for (AnotherEnumAgain c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnumAgain(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnumAgain fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Validation.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Validation implements Serializable
{

    final static long serialVersionUID = 3726328036217050894L;
    private String firstname;
    @NotNull
    private String lastname;
    @NotNull
    @Pattern(regexp = "[0-9|-]+")
    private String pattern;
    @NotNull
    @Size(min = 1, max = 3)
    private String length;
    @Size(min = 5)
    private String minLength;
    @NotNull
    @DecimalMin("1.0")
    @DecimalMax("42.3")
    private Long id;
    @NotNull
    private AnEnum anEnum;
    @NotNull
    private AnotherEnum anotherEnum;
    @NotNull
    private AnotherEnumAgain anotherEnumAgain;
    @NotNull
    private List<Object> testDefArray = new ArrayList<Object>();
    @NotNull
    private Object fileObject;
    @NotNull
    private Date dateO;
    @NotNull
    private Date timeO;
    @NotNull
    private Date dateTO;
    @NotNull
    private Date dateT;

    /**
     * Creates a new Validation.
     * 
     */
    public Validation() {
        super();
    }

    /**
     * Creates a new Validation.
     * 
     */
    public Validation(String firstname, String lastname, String pattern, String length, String minLength, Long id, AnEnum anEnum, AnotherEnum anotherEnum, AnotherEnumAgain anotherEnumAgain, List<Object> testDefArray, Object fileObject, Date dateO, Date timeO, Date dateTO, Date dateT) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.pattern = pattern;
        this.length = length;
        this.minLength = minLength;
        this.id = id;
        this.anEnum = anEnum;
        this.anotherEnum = anotherEnum;
        this.anotherEnumAgain = anotherEnumAgain;
        this.testDefArray = testDefArray;
        this.fileObject = fileObject;
        this.dateO = dateO;
        this.timeO = timeO;
        this.dateTO = dateTO;
        this.dateT = dateT;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Validation) == false) {
            return false;
        }
        Validation otherObject = ((Validation) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the pattern.
     * 
     * @return
     *     pattern
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Set the pattern.
     * 
     * @param pattern
     *     the new pattern
     */
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Returns the length.
     * 
     * @return
     *     length
     */
    public String getLength() {
        return length;
    }

    /**
     * Set the length.
     * 
     * @param length
     *     the new length
     */
    public void setLength(String length) {
        this.length = length;
    }

    /**
     * Returns the minLength.
     * 
     * @return
     *     minLength
     */
    public String getMinLength() {
        return minLength;
    }

    /**
     * Set the minLength.
     * 
     * @param minLength
     *     the new minLength
     */
    public void setMinLength(String minLength) {
        this.minLength = minLength;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the anEnum.
     * 
     * @return
     *     anEnum
     */
    public AnEnum getAnEnum() {
        return anEnum;
    }

    /**
     * Set the anEnum.
     * 
     * @param anEnum
     *     the new anEnum
     */
    public void setAnEnum(AnEnum anEnum) {
        this.anEnum = anEnum;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

    /**
     * Returns the anotherEnumAgain.
     * 
     * @return
     *     anotherEnumAgain
     */
    public AnotherEnumAgain getAnotherEnumAgain() {
        return anotherEnumAgain;
    }

    /**
     * Set the anotherEnumAgain.
     * 
     * @param anotherEnumAgain
     *     the new anotherEnumAgain
     */
    public void setAnotherEnumAgain(AnotherEnumAgain anotherEnumAgain) {
        this.anotherEnumAgain = anotherEnumAgain;
    }

    /**
     * Returns the testDefArray.
     * 
     * @return
     *     testDefArray
     */
    public List<Object> getTestDefArray() {
        return testDefArray;
    }

    /**
     * Set the testDefArray.
     * 
     * @param testDefArray
     *     the new testDefArray
     */
    public void setTestDefArray(List<Object> testDefArray) {
        this.testDefArray = testDefArray;
    }

    /**
     * Returns the fileObject.
     * 
     * @return
     *     fileObject
     */
    public Object getFileObject() {
        return fileObject;
    }

    /**
     * Set the fileObject.
     * 
     * @param fileObject
     *     the new fileObject
     */
    public void setFileObject(Object fileObject) {
        this.fileObject = fileObject;
    }

    /**
     * Returns the dateO.
     * 
     * @return
     *     dateO
     */
    public Date getDateO() {
        return dateO;
    }

    /**
     * Set the dateO.
     * 
     * @param dateO
     *     the new dateO
     */
    public void setDateO(Date dateO) {
        this.dateO = dateO;
    }

    /**
     * Returns the timeO.
     * 
     * @return
     *     timeO
     */
    public Date getTimeO() {
        return timeO;
    }

    /**
     * Set the timeO.
     * 
     * @param timeO
     *     the new timeO
     */
    public void setTimeO(Date timeO) {
        this.timeO = timeO;
    }

    /**
     * Returns the dateTO.
     * 
     * @return
     *     dateTO
     */
    public Date getDateTO() {
        return dateTO;
    }

    /**
     * Set the dateTO.
     * 
     * @param dateTO
     *     the new dateTO
     */
    public void setDateTO(Date dateTO) {
        this.dateTO = dateTO;
    }

    /**
     * Returns the dateT.
     * 
     * @return
     *     dateT
     */
    public Date getDateT() {
        return dateT;
    }

    /**
     * Set the dateT.
     * 
     * @param dateT
     *     the new dateT
     */
    public void setDateT(Date dateT) {
        this.dateT = dateT;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Object
-----------------------------------com.gen.foo.Object.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    final static long serialVersionUID = 3698235804353551533L;
    private String firstname;
    private String lastname;
    private Long id;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String firstname, String lastname, Long id) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Manager typeName Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Department typeName Department
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: department to Manager
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name clearanceLevel type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: low to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: high to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: clearanceLevel to Manager
-----------------------------------com.gen.foo.ClearanceLevel.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum ClearanceLevel {

    LOW("low"),
    HIGH("high");
    private final String value;
    private final static Map<String, ClearanceLevel> VALUE_CACHE = new HashMap<String, ClearanceLevel>();

    static {
        for (ClearanceLevel c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ClearanceLevel(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ClearanceLevel fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Department.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Department implements Serializable
{

    final static long serialVersionUID = 9083680978349072210L;
    private String name;

    /**
     * Creates a new Department.
     * 
     */
    public Department() {
        super();
    }

    /**
     * Creates a new Department.
     * 
     */
    public Department(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Department) == false) {
            return false;
        }
        Department otherObject = ((Department) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}
-----------------------------------com.gen.foo.Manager.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Manager implements Serializable
{

    final static long serialVersionUID = 3665186127134967084L;
    private String firstname;
    private String lastname;
    private Long id;
    private Department department;
    private ClearanceLevel clearanceLevel;

    /**
     * Creates a new Manager.
     * 
     */
    public Manager() {
        super();
    }

    /**
     * Creates a new Manager.
     * 
     */
    public Manager(String firstname, String lastname, Long id, Department department, ClearanceLevel clearanceLevel) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.department = department;
        this.clearanceLevel = clearanceLevel;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Manager) == false) {
            return false;
        }
        Manager otherObject = ((Manager) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the department.
     * 
     * @return
     *     department
     */
    public Department getDepartment() {
        return department;
    }

    /**
     * Set the department.
     * 
     * @param department
     *     the new department
     */
    public void setDepartment(Department department) {
        this.department = department;
    }

    /**
     * Returns the clearanceLevel.
     * 
     * @return
     *     clearanceLevel
     */
    public ClearanceLevel getClearanceLevel() {
        return clearanceLevel;
    }

    /**
     * Set the clearanceLevel.
     * 
     * @param clearanceLevel
     *     the new clearanceLevel
     */
    public void setClearanceLevel(ClearanceLevel clearanceLevel) {
        this.clearanceLevel = clearanceLevel;
    }

}


2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name BigStuff typeName BigStuff
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theDecimal to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: theInteger to BigStuff
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to BigStuff
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.BigStuff.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.math.BigInteger;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class BigStuff implements Serializable
{

    final static long serialVersionUID = 9106815751972584594L;
    private Double theDecimal;
    private BigInteger theInteger;
    private AnotherEnum anotherEnum;

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff() {
        super();
    }

    /**
     * Creates a new BigStuff.
     * 
     */
    public BigStuff(Double theDecimal, BigInteger theInteger, AnotherEnum anotherEnum) {
        super();
        this.theDecimal = theDecimal;
        this.theInteger = theInteger;
        this.anotherEnum = anotherEnum;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof BigStuff) == false) {
            return false;
        }
        BigStuff otherObject = ((BigStuff) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the theDecimal.
     * 
     * @return
     *     theDecimal
     */
    public Double getTheDecimal() {
        return theDecimal;
    }

    /**
     * Set the theDecimal.
     * 
     * @param theDecimal
     *     the new theDecimal
     */
    public void setTheDecimal(Double theDecimal) {
        this.theDecimal = theDecimal;
    }

    /**
     * Returns the theInteger.
     * 
     * @return
     *     theInteger
     */
    public BigInteger getTheInteger() {
        return theInteger;
    }

    /**
     * Set the theInteger.
     * 
     * @param theInteger
     *     the new theInteger
     */
    public void setTheInteger(BigInteger theInteger) {
        this.theInteger = theInteger;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

}


2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Manager typeName Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Manager
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Manager
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Department typeName Department
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: department to Manager
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name clearanceLevel type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: low to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: high to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: clearanceLevel to Manager
-----------------------------------com.gen.foo.ClearanceLevel.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum ClearanceLevel {

    LOW("low"),
    HIGH("high");
    private final String value;
    private final static Map<String, ClearanceLevel> VALUE_CACHE = new HashMap<String, ClearanceLevel>();

    static {
        for (ClearanceLevel c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ClearanceLevel(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ClearanceLevel fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Department.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Department implements Serializable
{

    final static long serialVersionUID = 9055588746485572849L;
    @NotNull
    private String name;

    /**
     * Creates a new Department.
     * 
     */
    public Department() {
        super();
    }

    /**
     * Creates a new Department.
     * 
     */
    public Department(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Department) == false) {
            return false;
        }
        Department otherObject = ((Department) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}
-----------------------------------com.gen.foo.Manager.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Manager implements Serializable
{

    final static long serialVersionUID = 9025844039995323952L;
    @NotNull
    private String firstname;
    @NotNull
    private String lastname;
    @NotNull
    private Long id;
    @NotNull
    private Department department;
    @NotNull
    private ClearanceLevel clearanceLevel;

    /**
     * Creates a new Manager.
     * 
     */
    public Manager() {
        super();
    }

    /**
     * Creates a new Manager.
     * 
     */
    public Manager(String firstname, String lastname, Long id, Department department, ClearanceLevel clearanceLevel) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.department = department;
        this.clearanceLevel = clearanceLevel;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Manager) == false) {
            return false;
        }
        Manager otherObject = ((Manager) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the department.
     * 
     * @return
     *     department
     */
    public Department getDepartment() {
        return department;
    }

    /**
     * Set the department.
     * 
     * @param department
     *     the new department
     */
    public void setDepartment(Department department) {
        this.department = department;
    }

    /**
     * Returns the clearanceLevel.
     * 
     * @return
     *     clearanceLevel
     */
    public ClearanceLevel getClearanceLevel() {
        return clearanceLevel;
    }

    /**
     * Set the clearanceLevel.
     * 
     * @param clearanceLevel
     *     the new clearanceLevel
     */
    public void setClearanceLevel(ClearanceLevel clearanceLevel) {
        this.clearanceLevel = clearanceLevel;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Person typeName Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Department typeName Department
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Department
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: department to Person
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name clearanceLevel type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: low to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: high to ClearanceLevel
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: clearanceLevel to Person
-----------------------------------com.gen.foo.ClearanceLevel.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum ClearanceLevel {

    LOW("low"),
    HIGH("high");
    private final String value;
    private final static Map<String, ClearanceLevel> VALUE_CACHE = new HashMap<String, ClearanceLevel>();

    static {
        for (ClearanceLevel c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ClearanceLevel(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ClearanceLevel fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Department.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Department implements Serializable
{

    final static long serialVersionUID = 9002709266371811568L;
    private String name;

    /**
     * Creates a new Department.
     * 
     */
    public Department() {
        super();
    }

    /**
     * Creates a new Department.
     * 
     */
    public Department(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Department) == false) {
            return false;
        }
        Department otherObject = ((Department) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}
-----------------------------------com.gen.foo.Person.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Person implements Serializable
{

    final static long serialVersionUID = 8972964551291628079L;
    private String firstname;
    private String lastname;
    private Long id;
    private Department department;
    private ClearanceLevel clearanceLevel;

    /**
     * Creates a new Person.
     * 
     */
    public Person() {
        super();
    }

    /**
     * Creates a new Person.
     * 
     */
    public Person(String firstname, String lastname, Long id, Department department, ClearanceLevel clearanceLevel) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.department = department;
        this.clearanceLevel = clearanceLevel;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Person) == false) {
            return false;
        }
        Person otherObject = ((Person) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the department.
     * 
     * @return
     *     department
     */
    public Department getDepartment() {
        return department;
    }

    /**
     * Set the department.
     * 
     * @param department
     *     the new department
     */
    public void setDepartment(Department department) {
        this.department = department;
    }

    /**
     * Returns the clearanceLevel.
     * 
     * @return
     *     clearanceLevel
     */
    public ClearanceLevel getClearanceLevel() {
        return clearanceLevel;
    }

    /**
     * Set the clearanceLevel.
     * 
     * @param clearanceLevel
     *     the new clearanceLevel
     */
    public void setClearanceLevel(ClearanceLevel clearanceLevel) {
        this.clearanceLevel = clearanceLevel;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Person typeName Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Person
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Person
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: name to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: departmentList to Person
-----------------------------------com.gen.foo.Object.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    final static long serialVersionUID = 8949829777668115694L;
    private String name;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String name) {
        super();
        this.name = name;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the name.
     * 
     * @return
     *     name
     */
    public String getName() {
        return name;
    }

    /**
     * Set the name.
     * 
     * @param name
     *     the new name
     */
    public void setName(String name) {
        this.name = name;
    }

}
-----------------------------------com.gen.foo.Person.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Person implements Serializable
{

    final static long serialVersionUID = 8921737554394550926L;
    private String firstname;
    private String lastname;
    private Long id;
    private List<com.gen.foo.Object> departmentList = new ArrayList<com.gen.foo.Object>();

    /**
     * Creates a new Person.
     * 
     */
    public Person() {
        super();
    }

    /**
     * Creates a new Person.
     * 
     */
    public Person(String firstname, String lastname, Long id, List<com.gen.foo.Object> departmentList) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.id = id;
        this.departmentList = departmentList;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Person) == false) {
            return false;
        }
        Person otherObject = ((Person) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the departmentList.
     * 
     * @return
     *     departmentList
     */
    public List<com.gen.foo.Object> getDepartmentList() {
        return departmentList;
    }

    /**
     * Set the departmentList.
     * 
     * @param departmentList
     *     the new departmentList
     */
    public void setDepartmentList(List<com.gen.foo.Object> departmentList) {
        this.departmentList = departmentList;
    }

}

2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Validation typeName Validation
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.foo.Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastname to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: pattern to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: length to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: minLength to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: id to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anEnum type string
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: blue to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: red to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: green to AnEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnum type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnum
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnum to Validation
2017-10-09 15:08:24 DEBUG [pojo.StringTypeInterpreter] - In enum name anotherEnumAgain type EnumChecks
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.foo.AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: one to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: two to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: three to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value_with_underscore to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: value with space to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: testfee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.EnumBuilder] - Adding field: fee to AnotherEnumAgain
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: anotherEnumAgain to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: testDefArray to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: fileObject to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: timeO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateTO to Validation
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: dateT to Validation
-----------------------------------com.gen.foo.AnEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnEnum {

    BLUE("blue"),
    RED("red"),
    GREEN("green");
    private final String value;
    private final static Map<String, AnEnum> VALUE_CACHE = new HashMap<String, AnEnum>();

    static {
        for (AnEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnum.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnum {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnum> VALUE_CACHE = new HashMap<String, AnotherEnum>();

    static {
        for (AnotherEnum c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnum(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnum fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.AnotherEnumAgain.java-----------------------------------

package com.gen.foo;

import java.util.HashMap;
import java.util.Map;

public enum AnotherEnumAgain {

    ONE("one"),
    TWO("two"),
    THREE("three"),
    VALUE_WITH_UNDERSCORE("value_with_underscore"),
    VALUE_WITH_SPACE("value with space"),
    TESTFEE("testfee"),
    FEE("fee");
    private final String value;
    private final static Map<String, AnotherEnumAgain> VALUE_CACHE = new HashMap<String, AnotherEnumAgain>();

    static {
        for (AnotherEnumAgain c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AnotherEnumAgain(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AnotherEnumAgain fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.foo.Validation.java-----------------------------------

package com.gen.foo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Validation implements Serializable
{

    final static long serialVersionUID = -9149892665918946377L;
    private String firstname;
    @NotNull
    private String lastname;
    @NotNull
    @Pattern(regexp = "[0-9|-]+")
    private String pattern;
    @NotNull
    @Size(min = 1, max = 3)
    private String length;
    @Size(min = 5)
    private String minLength;
    @NotNull
    @DecimalMin("1.0")
    @DecimalMax("42.3")
    private Long id;
    @NotNull
    private AnEnum anEnum;
    @NotNull
    private AnotherEnum anotherEnum;
    @NotNull
    private AnotherEnumAgain anotherEnumAgain;
    @NotNull
    private List<Object> testDefArray = new ArrayList<Object>();
    @NotNull
    private Object fileObject;
    @NotNull
    private Date dateO;
    @NotNull
    private Date timeO;
    @NotNull
    private Date dateTO;
    @NotNull
    private Date dateT;

    /**
     * Creates a new Validation.
     * 
     */
    public Validation() {
        super();
    }

    /**
     * Creates a new Validation.
     * 
     */
    public Validation(String firstname, String lastname, String pattern, String length, String minLength, Long id, AnEnum anEnum, AnotherEnum anotherEnum, AnotherEnumAgain anotherEnumAgain, List<Object> testDefArray, Object fileObject, Date dateO, Date timeO, Date dateTO, Date dateT) {
        super();
        this.firstname = firstname;
        this.lastname = lastname;
        this.pattern = pattern;
        this.length = length;
        this.minLength = minLength;
        this.id = id;
        this.anEnum = anEnum;
        this.anotherEnum = anotherEnum;
        this.anotherEnumAgain = anotherEnumAgain;
        this.testDefArray = testDefArray;
        this.fileObject = fileObject;
        this.dateO = dateO;
        this.timeO = timeO;
        this.dateTO = dateTO;
        this.dateT = dateT;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Validation) == false) {
            return false;
        }
        Validation otherObject = ((Validation) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstname.
     * 
     * @return
     *     firstname
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Set the firstname.
     * 
     * @param firstname
     *     the new firstname
     */
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Returns the lastname.
     * 
     * @return
     *     lastname
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Set the lastname.
     * 
     * @param lastname
     *     the new lastname
     */
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Returns the pattern.
     * 
     * @return
     *     pattern
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Set the pattern.
     * 
     * @param pattern
     *     the new pattern
     */
    public void setPattern(String pattern) {
        this.pattern = pattern;
    }

    /**
     * Returns the length.
     * 
     * @return
     *     length
     */
    public String getLength() {
        return length;
    }

    /**
     * Set the length.
     * 
     * @param length
     *     the new length
     */
    public void setLength(String length) {
        this.length = length;
    }

    /**
     * Returns the minLength.
     * 
     * @return
     *     minLength
     */
    public String getMinLength() {
        return minLength;
    }

    /**
     * Set the minLength.
     * 
     * @param minLength
     *     the new minLength
     */
    public void setMinLength(String minLength) {
        this.minLength = minLength;
    }

    /**
     * Returns the id.
     * 
     * @return
     *     id
     */
    public Long getId() {
        return id;
    }

    /**
     * Set the id.
     * 
     * @param id
     *     the new id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Returns the anEnum.
     * 
     * @return
     *     anEnum
     */
    public AnEnum getAnEnum() {
        return anEnum;
    }

    /**
     * Set the anEnum.
     * 
     * @param anEnum
     *     the new anEnum
     */
    public void setAnEnum(AnEnum anEnum) {
        this.anEnum = anEnum;
    }

    /**
     * Returns the anotherEnum.
     * 
     * @return
     *     anotherEnum
     */
    public AnotherEnum getAnotherEnum() {
        return anotherEnum;
    }

    /**
     * Set the anotherEnum.
     * 
     * @param anotherEnum
     *     the new anotherEnum
     */
    public void setAnotherEnum(AnotherEnum anotherEnum) {
        this.anotherEnum = anotherEnum;
    }

    /**
     * Returns the anotherEnumAgain.
     * 
     * @return
     *     anotherEnumAgain
     */
    public AnotherEnumAgain getAnotherEnumAgain() {
        return anotherEnumAgain;
    }

    /**
     * Set the anotherEnumAgain.
     * 
     * @param anotherEnumAgain
     *     the new anotherEnumAgain
     */
    public void setAnotherEnumAgain(AnotherEnumAgain anotherEnumAgain) {
        this.anotherEnumAgain = anotherEnumAgain;
    }

    /**
     * Returns the testDefArray.
     * 
     * @return
     *     testDefArray
     */
    public List<Object> getTestDefArray() {
        return testDefArray;
    }

    /**
     * Set the testDefArray.
     * 
     * @param testDefArray
     *     the new testDefArray
     */
    public void setTestDefArray(List<Object> testDefArray) {
        this.testDefArray = testDefArray;
    }

    /**
     * Returns the fileObject.
     * 
     * @return
     *     fileObject
     */
    public Object getFileObject() {
        return fileObject;
    }

    /**
     * Set the fileObject.
     * 
     * @param fileObject
     *     the new fileObject
     */
    public void setFileObject(Object fileObject) {
        this.fileObject = fileObject;
    }

    /**
     * Returns the dateO.
     * 
     * @return
     *     dateO
     */
    public Date getDateO() {
        return dateO;
    }

    /**
     * Set the dateO.
     * 
     * @param dateO
     *     the new dateO
     */
    public void setDateO(Date dateO) {
        this.dateO = dateO;
    }

    /**
     * Returns the timeO.
     * 
     * @return
     *     timeO
     */
    public Date getTimeO() {
        return timeO;
    }

    /**
     * Set the timeO.
     * 
     * @param timeO
     *     the new timeO
     */
    public void setTimeO(Date timeO) {
        this.timeO = timeO;
    }

    /**
     * Returns the dateTO.
     * 
     * @return
     *     dateTO
     */
    public Date getDateTO() {
        return dateTO;
    }

    /**
     * Set the dateTO.
     * 
     * @param dateTO
     *     the new dateTO
     */
    public void setDateTO(Date dateTO) {
        this.dateTO = dateTO;
    }

    /**
     * Returns the dateT.
     * 
     * @return
     *     dateT
     */
    public Date getDateT() {
        return dateT;
    }

    /**
     * Set the dateT.
     * 
     * @param dateT
     *     the new dateT
     */
    public void setDateT(Date dateT) {
        this.dateT = dateT;
    }

}

Tests run: 15, Failures: 7, Errors: 0, Skipped: 0, Time elapsed: 0.81 sec <<< FAILURE!
interpret2ndLevelNestedArrays(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.037 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is "NestedNestedArrayPerson"
     but: was "NestedArrayPerson"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.interpret2ndLevelNestedArrays(RamlInterpreterTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

checkJSR303(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.042 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is "com.gen.foo.EnumChecks"
     but: was "com.gen.foo.AnotherEnum"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkJSR303(RamlInterpreterTest.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

interpretGetResponseBodyAsArray(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.028 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is "Person"
     but: was "Object"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.interpretGetResponseBodyAsArray(RamlInterpreterTest.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

interpretPostRequestBody(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.029 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: an instance of com.sun.codemodel.JDefinedClass
     but: <com.sun.codemodel.JDirectClass(Person)> is a com.sun.codemodel.JDirectClass
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkModel(RamlInterpreterTest.java:436)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkModelWithInheritance(RamlInterpreterTest.java:421)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.interpretPostRequestBody(RamlInterpreterTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

checkJSR303_RequiredDefaultsToTrue(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.028 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: an instance of com.sun.codemodel.JDefinedClass
     but: <com.sun.codemodel.JDirectClass(Person)> is a com.sun.codemodel.JDirectClass
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkModel(RamlInterpreterTest.java:436)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkModelWithInheritance(RamlInterpreterTest.java:421)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.checkJSR303_RequiredDefaultsToTrue(RamlInterpreterTest.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

interpretGetResponseBody(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.03 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is "Manager"
     but: was "Person"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.interpretGetResponseBody(RamlInterpreterTest.java:282)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

interpretNestedArrays(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest)  Time elapsed: 0.032 sec  <<< FAILURE!
java.lang.AssertionError: 
Expected: is "NestedArrayPerson"
     but: was "Person"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest.interpretNestedArrays(RamlInterpreterTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest
2017-10-09 15:08:24 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.069 sec <<< FAILURE!
applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest)  Time elapsed: 0.03 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ate datetimeRFC2616)[ {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...ate datetimeRFC2616)[
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue169RulesTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue158RulesTest
2017-10-09 15:08:24 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstName to Object
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastName to Object
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - name User typeName User
2017-10-09 15:08:24 DEBUG [pojo.ObjectTypeInterpreter] - mime: User
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.User
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: firstName to User
2017-10-09 15:08:24 DEBUG [pojo.PojoBuilder] - Adding field: lastName to User
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name User typeName User
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: User
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.083 sec <<< FAILURE!
applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue158RulesTest)  Time elapsed: 0.041 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-com.gen.test.model.[User.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class User implements Serializable
{

    private String firstName;
    private String lastName;

    /**
     * Creates a new User.
     * 
     */
    public User() {
        super();
    }

    /**
     * Creates a new User.
     * 
     */
    public User(String firstName, String lastName) {
        super();
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof User) == false) {
            return false;
        }
        User otherObject = ((User) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

}
-----------------------------------com.gen.test.UserController.java-----------------------------------

package com.gen.test;

import java.util.List;
import javax.validation.Valid;
import com.gen.test.model.User;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/users", produces = "application/json")
@Validated
public class UserController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public List<User> getUsers() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public User createUser(
        @Valid
        @RequestBody
        User user) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...-com.gen.test.model.[Object.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    private String firstName;
    private String lastName;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String firstName, String lastName) {
        super();
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

}
-----------------------------------com.gen.test.model.User.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class User implements Serializable
{

    private String firstName;
    private String lastName;

    /**
     * Creates a new User.
     * 
     */
    public User() {
        super();
    }

    /**
     * Creates a new User.
     * 
     */
    public User(String firstName, String lastName) {
        super();
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof User) == false) {
            return false;
        }
        User otherObject = ((User) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

}
-----------------------------------com.gen.test.UserController.java-----------------------------------

package com.gen.test;

import java.util.List;
import javax.validation.Valid;
import com.gen.test.model.Object;
import com.gen.test.model.User;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/users", produces = "application/json")
@Validated
public class UserController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public List<Object> getUsers()
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public User createUser(
        @Valid
        @RequestBody
        User user)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue158RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue158RulesTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 2, Failures: 1, Errors: 1, Skipped: 0, Time elapsed: 0.094 sec <<< FAILURE!
applySpringFeignClient_shouldCreate_defaultVaules(com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest)  Time elapsed: 0.022 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ing xRequiredHeader)[];

}
> but was:<...ing xRequiredHeader)[
        throws Exception
    ];

}
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest.applySpringFeignClient_shouldCreate_defaultVaules(SpringFeignClientRulesTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpringFeignClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest)  Time elapsed: 0.034 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringFeignClientInterfaceDecoratorRule.apply(SpringFeignClientInterfaceDecoratorRule.java:66)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringFeignClientInterfaceDecoratorRule.apply(SpringFeignClientInterfaceDecoratorRule.java:50)
	at com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest.applySpringFeignClient_shouldCreate_validCode(SpringFeignClientRulesTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.041 sec <<< FAILURE!
applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesTest)  Time elapsed: 0.022 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...eEntity<?> getBase()[;

    /**
     * Get base entity by ID
     * 
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     * 
     * @param optionalQueryParam
     * @param xAnotherHeader
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2
     * @param xMyHeader
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase() {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}]> but was:<...eEntity<?> getBase()[
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id)
        throws Exception
    ;

    /**
     * No description
     * 
     * @param optionalQueryParam 
     * @param xAnotherHeader 
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2 
     * @param xMyHeader 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase()
        throws Exception
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id)
        throws Exception
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader)
        throws Exception
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesTest.applySpring4SpringTemplateClient_shouldCreate_validCode(Spring4RestTemplateClientRulesTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec <<< FAILURE!
applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...1, String xMyHeader)[;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.constraints.Pattern;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping("/api/base")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/endpoint/{id}", method = RequestMethod.GET)
    public ResponseEntity<?> getEndpointById(
        @PathVariable
        @Pattern(regexp = "^.{1,255}$")
        String id,
        @RequestParam
        @Pattern(regexp = "^.{1,255}$")
        String param1,
        @RequestHeader(name = "X-My-Header", required = false)
        @Pattern(regexp = "^.{1,255}$")
        String xMyHeader)] {
        return th...> but was:<...1, String xMyHeader)[
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.constraints.Pattern;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping("/api/base")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/endpoint/{id}", method = RequestMethod.GET)
    public ResponseEntity<?> getEndpointById(
        @PathVariable
        @Pattern(regexp = "^.{1,255}$")
        String id,
        @RequestParam
        @Pattern(regexp = "^.{1,255}$")
        String param1,
        @RequestHeader(name = "X-My-Header", required = false)
        @Pattern(regexp = "^.{1,255}$")
        String xMyHeader)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(PatternConstraintTest.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.ControllerBodyParamsShouldNotBeGroupedUnderDummyObjectNamedObjectTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name ResponseType typeName ResponseType
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: ResponseType
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.ResponseType
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name Privileges typeName Privileges
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: Privileges
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Privileges
2017-10-09 15:08:25 DEBUG [pojo.StringTypeInterpreter] - In enum name contentPrivileges type string
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.ContentPrivileges
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: PREMIUM_BLOCKED to ContentPrivileges
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: PREMIUM_GRANTED to ContentPrivileges
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: contentPrivileges to Privileges
2017-10-09 15:08:25 DEBUG [pojo.StringTypeInterpreter] - In enum name adsPrivileges type string
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.AdsPrivileges
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: NO_ADS to AdsPrivileges
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: SHOW_ADS to AdsPrivileges
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: adsPrivileges to Privileges
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: privileges to ResponseType
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.074 sec <<< FAILURE!
applySpring4RestTemplateClientRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.ControllerBodyParamsShouldNotBeGroupedUnderDummyObjectNamedObjectTest)  Time elapsed: 0.04 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-com.gen.test.model.[CreateSampleUnitRequest.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class CreateSampleUnitRequest implements Serializable
{

    private String a;
    private Long b;

    /**
     * Creates a new CreateSampleUnitRequest.
     *
     */
    public CreateSampleUnitRequest() {
        super();
    }

    /**
     * Creates a new CreateSampleUnitRequest.
     *
     */
    public CreateSampleUnitRequest(String a, Long b) {
        super();
        this.a = a;
        this.b = b;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof CreateSampleUnitRequest) == false) {
            return false;
        }
        CreateSampleUnitRequest otherObject = ((CreateSampleUnitRequest) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the a.
     *
     * @return
     *     a
     */
    public String getA() {
        return a;
    }

    /**
     * Set the a.
     *
     * @param a
     *     the new a
     */
    public void setA(String a) {
        this.a = a;
    }

    /**
     * Returns the b.
     *
     * @return
     *     b
     */
    public Long getB() {
        return b;
    }

    /**
     * Set the b.
     *
     * @param b
     *     the new b
     */
    public void setB(Long b) {
        this.b = b;
    }

}
-----------------------------------com.gen.test.model.ResponseType.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class ResponseType implements Serializable
{

    /**
     * facebook token for the user. This token will be validated with facebook
     *
     */
    private String token;
    private String facebookId;

    /**
     * Creates a new ResponseType.
     *
     */
    public ResponseType() {
        super();
    }

    /**
     * Creates a new ResponseType.
     *
     */
    public ResponseType(String token, String facebookId) {
        super();
        this.token = token;
        this.facebookId = facebookId;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof ResponseType) == false) {
            return false;
        }
        ResponseType otherObject = ((ResponseType) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the token.
     *
     * @return
     *     token
     */
    public String getToken() {
        return token;
    }

    /**
     * Set the token.
     *
     * @param token
     *     the new token
     */
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Returns the facebookId.
     *
     * @return
     *     facebookId
     */
    public String getFacebookId() {
        return facebookId;
    }

    /**
     * Set the facebookId.
     *
     * @param facebookId
     *     the new facebookId
     */
    public void setFacebookId(String facebookId) {
        this.facebookId = facebookId;
    }

}
-----------------------------------com.gen.test.SampleUnitController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.CreateSampleUnitRequest;
import com.gen.test.model.ResponseType;
import org.springframework.http.ResponseEntity;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8.2-SNAPSHOT)
 *
 */
public interface SampleUnitController {


    /**
     * Creates a sample unit
     *
     */
    public ResponseEntity<ResponseType> createSampleUnit(CreateSampleUnitRequest createSampleUnitRequest)
        throws Exception
    ;

}
-----------------------------------com.gen.test.SampleUnitControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.CreateSampleUnitRequest;
import com.gen.test.model.ResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8.2-SNAPSHOT)
 *
 */
@RestController
@RequestMapping(value = "/api/sample_units", produces = "application/json")
@Validated
public class SampleUnitControllerDecorator {

    @Autowired
    private SampleUnitController sampleUnitControllerDelegate;

    /**
     * Creates a sample unit
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<ResponseType> createSampleUnit(
        @Valid
        @RequestBody
        CreateSampleUnitRequest createSampleUnitRequest)
        throws Exception
    {
        return this.sampleUnitControllerDelegate.createSampleUnit(createSampleUnitRequest);
    }

}
]
> but was:<...-com.gen.test.model.[AdsPrivileges.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum AdsPrivileges {

    NO_ADS("NO_ADS"),
    SHOW_ADS("SHOW_ADS");
    private final String value;
    private final static Map<String, AdsPrivileges> VALUE_CACHE = new HashMap<String, AdsPrivileges>();

    static {
        for (AdsPrivileges c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private AdsPrivileges(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static AdsPrivileges fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.ContentPrivileges.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum ContentPrivileges {

    PREMIUM_BLOCKED("PREMIUM_BLOCKED"),
    PREMIUM_GRANTED("PREMIUM_GRANTED");
    private final String value;
    private final static Map<String, ContentPrivileges> VALUE_CACHE = new HashMap<String, ContentPrivileges>();

    static {
        for (ContentPrivileges c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private ContentPrivileges(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static ContentPrivileges fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.model.Privileges.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Privileges implements Serializable
{

    private ContentPrivileges contentPrivileges;
    private AdsPrivileges adsPrivileges;

    /**
     * Creates a new Privileges.
     * 
     */
    public Privileges() {
        super();
    }

    /**
     * Creates a new Privileges.
     * 
     */
    public Privileges(ContentPrivileges contentPrivileges, AdsPrivileges adsPrivileges) {
        super();
        this.contentPrivileges = contentPrivileges;
        this.adsPrivileges = adsPrivileges;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Privileges) == false) {
            return false;
        }
        Privileges otherObject = ((Privileges) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the contentPrivileges.
     * 
     * @return
     *     contentPrivileges
     */
    public ContentPrivileges getContentPrivileges() {
        return contentPrivileges;
    }

    /**
     * Set the contentPrivileges.
     * 
     * @param contentPrivileges
     *     the new contentPrivileges
     */
    public void setContentPrivileges(ContentPrivileges contentPrivileges) {
        this.contentPrivileges = contentPrivileges;
    }

    /**
     * Returns the adsPrivileges.
     * 
     * @return
     *     adsPrivileges
     */
    public AdsPrivileges getAdsPrivileges() {
        return adsPrivileges;
    }

    /**
     * Set the adsPrivileges.
     * 
     * @param adsPrivileges
     *     the new adsPrivileges
     */
    public void setAdsPrivileges(AdsPrivileges adsPrivileges) {
        this.adsPrivileges = adsPrivileges;
    }

}
-----------------------------------com.gen.test.model.ResponseType.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class ResponseType implements Serializable
{

    /**
     * privileges for the user
     * 
     */
    private Privileges privileges;

    /**
     * Creates a new ResponseType.
     * 
     */
    public ResponseType() {
        super();
    }

    /**
     * Creates a new ResponseType.
     * 
     */
    public ResponseType(Privileges privileges) {
        super();
        this.privileges = privileges;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof ResponseType) == false) {
            return false;
        }
        ResponseType otherObject = ((ResponseType) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the privileges.
     * 
     * @return
     *     privileges
     */
    public Privileges getPrivileges() {
        return privileges;
    }

    /**
     * Set the privileges.
     * 
     * @param privileges
     *     the new privileges
     */
    public void setPrivileges(Privileges privileges) {
        this.privileges = privileges;
    }

}
-----------------------------------com.gen.test.SampleUnitController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.ResponseType;
import org.springframework.http.ResponseEntity;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface SampleUnitController {


    /**
     * Creates a sample unit
     * 
     */
    public ResponseEntity<ResponseType> createSampleUnit()
        throws Exception
    ;

}
-----------------------------------com.gen.test.SampleUnitControllerDecorator.java-----------------------------------

package com.gen.test;

import com.gen.test.model.ResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/sample_units", produces = "application/json")
@Validated
public class SampleUnitControllerDecorator {

    @Autowired
    private SampleUnitController sampleUnitControllerDelegate;

    /**
     * Creates a sample unit
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<ResponseType> createSampleUnit()
        throws Exception
    {
        return this.sampleUnitControllerDelegate.createSampleUnit();
    }

}]
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.ControllerBodyParamsShouldNotBeGroupedUnderDummyObjectNamedObjectTest.applySpring4RestTemplateClientRule_shouldCreate_validCode(ControllerBodyParamsShouldNotBeGroupedUnderDummyObjectNamedObjectTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.028 sec <<< FAILURE!
applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:49)
	at com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest.applySpring4ControllerInterfaceRule_shouldCreate_validCode(RequestBodyWithValidationTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:75)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:52)
	at com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest.applySpring4ControllerStubRule_shouldCreate_validCode(RequestBodyWithValidationTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:80)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:67)
	at com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(RequestBodyWithValidationTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ImplementsControllerInferfaceRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodCommentRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassCommentRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerClassDeclarationRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.DelegatingMethodBodyRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.PackageRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerInterfaceDeclarationRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ImplementMeMethodBodyRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRuleTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name Object typeName Object
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: Object
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Object
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: firstName to Object
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: lastName to Object
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: departman to Object
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name Manager typeName Manager
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: Manager
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.Manager
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: firstName to Manager
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: lastName to Manager
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Adding field: departman to Manager
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - name Manager typeName Manager
2017-10-09 15:08:25 DEBUG [pojo.ObjectTypeInterpreter] - mime: Manager
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.095 sec <<< FAILURE!
applySpring4ClientStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest)  Time elapsed: 0.068 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...blic boolean equals([Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Manager) == false) {
            return false;
        }
        Manager otherObject = ((Manager) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Returns the departman.
     * 
     * @return
     *     departman
     */
    public String getDepartman() {
        return departman;
    }

    /**
     * Set the departman.
     * 
     * @param departman
     *     the new departman
     */
    public void setDepartman(String departman) {
        this.departman = departman;
    }

}
-----------------------------------com.gen.test.PersonManagerClient.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Manager;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface PersonManagerClient {


    /**
     * No description
     * 
     */
    public ResponseEntity<List<Manager>> getPersonsManagers();

    /**
     * No description
     * 
     * @param manager The Request Body Payload
     */
    public ResponseEntity<Manager> createPersonsManager(Manager manager);

}
-----------------------------------com.gen.test.PersonManagerClientImpl.java-----------------------------------

package com.gen.test;

import java.util.ArrayList;
import java.util.List;
import com.gen.test.model.Manager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class PersonManagerClientImpl
    implements PersonManagerClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<List<Manager>> getPersonsManagers() {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/organization/persons/managers");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        class _P extends org.springframework.core.ParameterizedTypeReference<java.util.List<com.gen.test.model.Manager>>{};
        ParameterizedTypeReference<List<Manager>> typeReference = new _P();
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, typeReference);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<Manager> createPersonsManager(Manager manager) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        httpHeaders.setContentType(MediaType.valueOf("application/json"));
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/organization/persons/managers");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(manager, httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.POST, httpEntity, Manager.class);
    }

}]> but was:<...blic boolean equals([java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Manager) == false) {
            return false;
        }
        Manager otherObject = ((Manager) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Returns the departman.
     * 
     * @return
     *     departman
     */
    public String getDepartman() {
        return departman;
    }

    /**
     * Set the departman.
     * 
     * @param departman
     *     the new departman
     */
    public void setDepartman(String departman) {
        this.departman = departman;
    }

}
-----------------------------------com.gen.test.model.Object.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    private String firstName;
    private String lastName;
    private String departman;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(String firstName, String lastName, String departman) {
        super();
        this.firstName = firstName;
        this.lastName = lastName;
        this.departman = departman;
    }

    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    public boolean equals(java.lang.Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Object) == false) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().isEquals();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    /**
     * Returns the firstName.
     * 
     * @return
     *     firstName
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Set the firstName.
     * 
     * @param firstName
     *     the new firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Returns the lastName.
     * 
     * @return
     *     lastName
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Set the lastName.
     * 
     * @param lastName
     *     the new lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Returns the departman.
     * 
     * @return
     *     departman
     */
    public String getDepartman() {
        return departman;
    }

    /**
     * Set the departman.
     * 
     * @param departman
     *     the new departman
     */
    public void setDepartman(String departman) {
        this.departman = departman;
    }

}
-----------------------------------com.gen.test.PersonManagerClient.java-----------------------------------

package com.gen.test;

import java.util.List;
import com.gen.test.model.Manager;
import com.gen.test.model.Object;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
public interface PersonManagerClient {


    /**
     * No description
     * 
     */
    public ResponseEntity<List<Object>> getPersonsManagers()
        throws Exception
    ;

    /**
     * No description
     * 
     * @param manager The Request Body Payload
     */
    public ResponseEntity<Manager> createPersonsManager(Manager manager)
        throws Exception
    ;

}
-----------------------------------com.gen.test.PersonManagerClientImpl.java-----------------------------------

package com.gen.test;

import java.util.ArrayList;
import java.util.List;
import com.gen.test.model.Manager;
import com.gen.test.model.Object;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class PersonManagerClientImpl
    implements PersonManagerClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<List<Object>> getPersonsManagers()
        throws Exception
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/organization/persons/managers");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        class _P extends org.springframework.core.ParameterizedTypeReference<java.util.List<com.gen.test.model.Object>>{};
        ParameterizedTypeReference<List<Object>> typeReference = new _P();
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, typeReference);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<Manager> createPersonsManager(Manager manager)
        throws Exception
    {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        httpHeaders.setContentType(MediaType.valueOf("application/json"));
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/organization/persons/managers");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(manager, httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.POST, httpEntity, Manager.class);
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest.applySpring4ClientStubRule_shouldCreate_validCode(Issue159RulesTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.JsonSchemaControllerTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.User
2017-10-09 15:08:25 DEBUG [pojo.PojoBuilder] - Enum com.gen.test.model.User already exists. Reusing it!
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:25 DEBUG [pojo.StringTypeInterpreter] - In enum name commonType type TestT
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Creating Enum com.gen.test.model.CommonType
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: A to CommonType
2017-10-09 15:08:25 DEBUG [pojo.EnumBuilder] - Adding field: B to CommonType
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec <<< FAILURE!
applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest)  Time elapsed: 0.014 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-com.gen.test.model.[TestT.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum TestT {

    A("A"),
    B("B");
    private final String value;
    private final static Map<String, TestT> VALUE_CACHE = new HashMap<String, TestT>();

    static {
        for (TestT c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private TestT(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static TestT fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.EnumController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.TestT;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/enums", produces = "application/json")
@Validated
public class EnumController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getEnums(
        @RequestParam
        TestT commonType) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...-com.gen.test.model.[CommonType.java-----------------------------------

package com.gen.test.model;

import java.util.HashMap;
import java.util.Map;

public enum CommonType {

    A("A"),
    B("B");
    private final String value;
    private final static Map<String, CommonType> VALUE_CACHE = new HashMap<String, CommonType>();

    static {
        for (CommonType c: values()) {
            VALUE_CACHE.put(c.value, c);
        }
    }

    private CommonType(String value) {
        this.value = value;
    }

    public String value() {
        return this.value;
    }

    public static CommonType fromValue(String value) {
        return VALUE_CACHE.get(value);
    }

    @Override
    public String toString() {
        return this.value;
    }

}
-----------------------------------com.gen.test.EnumController.java-----------------------------------

package com.gen.test;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/enums", produces = "application/json")
@Validated
public class EnumController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getEnums(
        @RequestParam
        TestT commonType)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue161RulesTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec <<< FAILURE!
applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest)  Time elapsed: 0.008 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ion.ResponseBody;


[
/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	     @RequestHeader
	     HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
    ]        return null;...> but was:<...ion.ResponseBody;


[/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
]        return null;...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest.applySpring3ControllerStubRule_shouldCreate_validCode(Spring3ControllerRulesHttpHeadersTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest)  Time elapsed: 0.021 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<... BaseController {


[	/**
	 * No description
	 *
	 */
	public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     *
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     *
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	     @RequestHeader
	     HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBase(httpHeaders);
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)] {
        return th...> but was:<... BaseController {


[    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return this.baseControllerDelegate.getBase(httpHeaders);
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest.applySpring3ControllerDecoratorRule_shouldCreate_validCode(Spring3ControllerRulesHttpHeadersTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest)  Time elapsed: 0.006 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	    @RequestHeader
	    HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders);

}
]
> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

}]
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest.applySpring3ControllerInterfaceRule_shouldCreate_validCode(Spring3ControllerRulesHttpHeadersTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 6, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.031 sec <<< FAILURE!
applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:49)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring4ControllerInterfaceRule_shouldCreate_validCode(Issue32RulesTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:75)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:52)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring3ControllerStubRule_shouldCreate_validCode(Issue32RulesTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:75)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerStubRule.apply(SpringControllerStubRule.java:52)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue32RulesTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:80)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:67)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring3ControllerDecoratorRule_shouldCreate_validCode(Issue32RulesTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringMethodParamsRule.paramObjects(SpringMethodParamsRule.java:177)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerInterfaceRule.apply(SpringControllerInterfaceRule.java:49)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring3ControllerInterfaceRule_shouldCreate_validCode(Issue32RulesTest.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:80)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:67)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(Issue32RulesTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue61RulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:25 INFO [naming.SchemaHelper] - Loading referenced schema sample_unit.json
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.038 sec <<< FAILURE!
applySpring4RestTemplateClientRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue61RulesTest)  Time elapsed: 0.005 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule.apply(Spring4RestTemplateClientRule.java:86)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule.apply(Spring4RestTemplateClientRule.java:61)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue61RulesTest.applySpring4RestTemplateClientRule_shouldCreate_validCode(Issue61RulesTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:25 INFO [naming.SchemaHelper] - Loading referenced schema raml/Person.json
2017-10-09 15:08:25 INFO [naming.SchemaHelper] - Loading referenced schema sample_unit.json
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.078 sec <<< FAILURE!
applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.lang.NullPointerException
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.paramObjects(MethodParamsRule.java:151)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:111)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRule.apply(MethodParamsRule.java:70)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:69)
	at com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRule.apply(ControllerMethodSignatureRule.java:51)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.lambda$apply$7(GenericJavaClassRule.java:129)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.phoenixnap.oss.ramlapisync.generation.rules.GenericJavaClassRule.apply(GenericJavaClassRule.java:128)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:80)
	at com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringControllerDecoratorRule.apply(SpringControllerDecoratorRule.java:67)
	at com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(RamlEquivalenceRulesTest.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesHtppHeadersTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec <<< FAILURE!
applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesHtppHeadersTest)  Time elapsed: 0.01 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...o description
     *[
     * @param httpHeaders The HTTP headers for the request
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     *
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     * 
     * @param optionalQueryParam
     * @param xAnotherHeader
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2
     * @param xMyHeader
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}]> but was:<...o description
     *[ 
     * @param httpHeaders The HTTP headers for the request
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * No description
     * 
     * @param optionalQueryParam 
     * @param xAnotherHeader 
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2 
     * @param xMyHeader 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders)
        throws Exception
    {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders)
        throws Exception
    {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders)
        throws Exception
    {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesHtppHeadersTest.applySpring4SpringTemplateClient_shouldCreate_validCode(Spring4RestTemplateClientRulesHtppHeadersTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest
2017-10-09 15:08:25 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec <<< FAILURE!
applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest)  Time elapsed: 0.006 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ion.ResponseBody;


[
/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
    ]        return null;...> but was:<...ion.ResponseBody;


[/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
    {
]        return null;...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest.applySpring3ControllerStubRule_shouldCreate_validCode(Spring3ControllerRulesTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest)  Time elapsed: 0.007 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<... BaseController {


[	/**
	 * No description
	 *
	 */
	public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     *
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     *
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase() {
        return this.baseControllerDelegate.getBase();
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)] {
        return th...> but was:<... BaseController {


[    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest.applySpring3ControllerDecoratorRule_shouldCreate_validCode(Spring3ControllerRulesTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}
]
> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
    ;

}]
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest.applySpring3ControllerInterfaceRule_shouldCreate_validCode(Spring3ControllerRulesTest.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 8, Failures: 6, Errors: 0, Skipped: 0, Time elapsed: 0.036 sec <<< FAILURE!
applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.004 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tring[] stringArray)[];

}
> but was:<...tring[] stringArray)[
        throws Exception
    ];

}
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring4ControllerInterfaceRule_shouldCreate_validCode(Issue117RulesTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.002 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tring[] stringArray)[ {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...tring[] stringArray)[
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring3ControllerStubRule_shouldCreate_validCode(Issue117RulesTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.003 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tring[] stringArray)[ {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...tring[] stringArray)[
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue117RulesTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tring[] stringArray)[;

}
-----------------------------------com.gen.test.FileClientImpl.java-----------------------------------

package com.gen.test;

import java.util.ArrayList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class FileClientImpl
    implements FileClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * Create file.
     * 
     */
    public ResponseEntity<?> getFiles(String notArray, String[] stringArray)] {
        HttpHeade...> but was:<...tring[] stringArray)[
        throws Exception
    ;

}
-----------------------------------com.gen.test.FileClientImpl.java-----------------------------------

package com.gen.test;

import java.util.ArrayList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@Component
public class FileClientImpl
    implements FileClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * Create file.
     * 
     */
    public ResponseEntity<?> getFiles(String notArray, String[] stringArray)
        throws Exception
   ] {
        HttpHeade...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring4SpringTemplateClient_shouldCreate_validCode(Issue117RulesTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_configuration_disableArray(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<... String stringArray)[;

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
@Validated
public class FileControllerDecorator
    implements FileController
{

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getFiles(
        @RequestParam
        String notArray,
        @RequestParam
        String stringArray)] {
        return th...> but was:<... String stringArray)[
        throws Exception
    ;

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
@Validated
public class FileControllerDecorator {

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getFiles(
        @RequestParam
        String notArray,
        @RequestParam
        String stringArray)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring4ControllerDecoratorRule_configuration_disableArray(Issue117RulesTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest)  Time elapsed: 0.003 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tring[] stringArray)[;

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
@Validated
public class FileControllerDecorator
    implements FileController
{

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getFiles(
        @RequestParam
        String notArray,
        @RequestParam
        String[] stringArray)] {
        return th...> but was:<...tring[] stringArray)[
        throws Exception
    ;

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
@Validated
public class FileControllerDecorator {

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getFiles(
        @RequestParam
        String notArray,
        @RequestParam
        String[] stringArray)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(Issue117RulesTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.pojogen.JsonSchema2PojoTest
2017-10-09 15:08:26 INFO [naming.SchemaHelper] - Loading referenced schema pojogen/address.schema
2017-10-09 15:08:26 INFO [naming.SchemaHelper] - Loading referenced schema classpath:pojogen/nested.schema
2017-10-09 15:08:26 INFO [naming.SchemaHelper] - Loading referenced schema pojogen/B.json
2017-10-09 15:08:26 DEBUG [naming.SchemaHelper] - Referenced Schema contains self $refs or not found in classpath. Regenerating model withouth classpath: for Accounts
2017-10-09 15:08:26 INFO [naming.SchemaHelper] - Loading referenced schema pojogen/B.json
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.129 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue172RulesTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP10V2RamlModelFactory Instantiated
2017-10-09 15:08:26 DEBUG [pojo.ObjectTypeInterpreter] - name EventCreate typeName EventCreate
2017-10-09 15:08:26 DEBUG [pojo.ObjectTypeInterpreter] - mime: EventCreate
2017-10-09 15:08:26 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.EventCreate
2017-10-09 15:08:26 DEBUG [pojo.PojoBuilder] - Adding field: eventName to EventCreate
2017-10-09 15:08:26 DEBUG [pojo.ObjectTypeInterpreter] - name EventPayload typeName EventPayload
2017-10-09 15:08:26 DEBUG [pojo.ObjectTypeInterpreter] - mime: EventPayload
2017-10-09 15:08:26 DEBUG [pojo.PojoBuilder] - Creating class com.gen.test.model.EventPayload
2017-10-09 15:08:26 DEBUG [pojo.PojoBuilder] - Adding field: eventPayload to EventCreate
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec <<< FAILURE!
applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue172RulesTest)  Time elapsed: 0.023 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...tCreate eventCreate)[ {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}]> but was:<...tCreate eventCreate)[
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}
]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Issue172RulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Issue172RulesTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec <<< FAILURE!
applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest)  Time elapsed: 0.003 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> updateBase(
        @RequestParam
        MultipartFile file)] {
        return nu...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> updateBase(
        @RequestParam
        MultipartFile file)
        throws Exception
   ] {
        return nu...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest.applySpring3ControllerStubRule_shouldCreate_validCode(MultipartMimeRequestTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue76RulesTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 6, Failures: 6, Errors: 0, Skipped: 0, Time elapsed: 0.05 sec <<< FAILURE!
applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.008 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
public interface BaseController {


    /**
     * No description
     *
     */
    public Callable<ResponseEntity<?>> getBase();

    /**
     * Get base entity by ID
     *
     */
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(String id);

    /**
     * No description
     *
     */
    public Callable<ResponseEntity<?>> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase() {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)] {
        return th...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public Callable<ResponseEntity<?>> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public Callable<ResponseEntity<?>> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase()
        throws Exception
    {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}
]
> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
    ;

}]
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applySpring4ControllerInterfaceRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applyAsyncSpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase();

    /**
     * Get base entity by ID
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)];

}
> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
    ];

}
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applyAsyncSpring4ControllerInterfaceRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.004 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
    ]        return null;...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
    {
]        return null;...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applySpring4ControllerStubRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applyAsyncSpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)] {
        return nu...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase()
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<NamedResponseType> getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
   ] {
        return nu...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applyAsyncSpring4ControllerStubRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest)  Time elapsed: 0.007 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
public interface BaseController {


	/**
	 * No description
	 *
	 */
	public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     *
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     *
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase() {
        return this.baseControllerDelegate.getBase();
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)] {
        return th...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase()
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase()
        throws Exception
    {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id)
        throws Exception
    {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(Spring4ControllerRulesTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec <<< FAILURE!
applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest)  Time elapsed: 0.005 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	    @RequestHeader
	    HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders);

}
]
> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    ;

}]
>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest.applySpring4ControllerInterfaceRule_shouldCreate_validCode(Spring4ControllerRulesHttpHeadersTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest)  Time elapsed: 0.004 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	    @RequestHeader
	    HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
    ]        return null;...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
]        return null;...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest.applySpring4ControllerStubRule_shouldCreate_validCode(Spring4ControllerRulesHttpHeadersTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest)  Time elapsed: 0.007 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<....0.10.8-SNAPSHOT)
 *[
 */
public interface BaseController {


	/**
	 * No description
	 *
	 */
	public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     *
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     *
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 *
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase(
	     @RequestHeader
	     HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBase(httpHeaders);
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)] {
        return th...> but was:<....0.10.8-SNAPSHOT)
 *[ 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders)
        throws Exception
    ;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders)
        throws Exception
    ;

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.10.8-SNAPSHOT)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator {

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return this.baseControllerDelegate.getBase(httpHeaders);
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
    {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders)
        throws Exception
   ] {
        return th...>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:120)
	at com.phoenixnap.oss.ramlapisync.generation.rules.AbstractRuleTestBase.verifyGeneratedCode(AbstractRuleTestBase.java:110)
	at com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest.applySpring4ControllerDecoratorRule_shouldCreate_validCode(Spring4ControllerRulesHttpHeadersTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue156RulesTest
2017-10-09 15:08:26 INFO [raml.RamlModelFactoryOfFactories] - RJP08V1RamlModelFactory Instantiated
2017-10-09 15:08:26 ERROR [raml.RamlModelFactoryOfFactories] - Loaded RAML has validation errors: Unexpected key 'description'. Options are : All of :Integer,Maximum value -- issue-156-normal_invalidity.raml [line=8, col=7],Unexpected key 'body'. Options are : All of :Integer,Maximum value -- issue-156-normal_invalidity.raml [line=9, col=7]
2017-10-09 15:08:26 ERROR [raml.RamlModelFactoryOfFactories] - Loaded RAML has validation errors: Unsupported version 0.5
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec

Results :

Failed tests:   applySpring4ClientStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.pojo.UnionTypeInterpretorTest): expected:<...a new Device.(..)
  interpret2ndLevelNestedArrays(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  checkJSR303(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  interpretGetResponseBodyAsArray(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  interpretPostRequestBody(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  checkJSR303_RequiredDefaultsToTrue(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  interpretGetResponseBody(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  interpretNestedArrays(com.phoenixnap.oss.ramlapisync.raml.interpreters.RamlInterpreterTest): (..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue169RulesTest): expected:<...ate datetimeRFC2616)[ {(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue158RulesTest): expected:<...-com.gen.test.model.[User.java-----------------------------------(..)
  applySpringFeignClient_shouldCreate_defaultVaules(com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest): expected:<...ing xRequiredHeader)[];(..)
  applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesTest): expected:<...eEntity<?> getBase()[;(..)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest): expected:<...1, String xMyHeader)[;(..)
  applySpring4RestTemplateClientRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.ControllerBodyParamsShouldNotBeGroupedUnderDummyObjectNamedObjectTest): expected:<...-com.gen.test.model.[CreateSampleUnitRequest.java-----------------------------------
(..)
  applySpring4ClientStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest): expected:<...blic boolean equals([Object other) {(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue161RulesTest): expected:<...-com.gen.test.model.[TestT.java-----------------------------------(..)
  applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest): expected:<...ion.ResponseBody;(..)
  applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest): expected:<... BaseController {(..)
  applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesHtppHeadersTest): expected:<...o description(..)
  applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest): expected:<...ion.ResponseBody;(..)
  applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest): expected:<... BaseController {(..)
  applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<...tring[] stringArray)[];(..)
  applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<...tring[] stringArray)[ {(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<...tring[] stringArray)[ {(..)
  applySpring4SpringTemplateClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<...tring[] stringArray)[;(..)
  applySpring4ControllerDecoratorRule_configuration_disableArray(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<... String stringArray)[;(..)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest): expected:<...tring[] stringArray)[;(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue172RulesTest): expected:<...tCreate eventCreate)[ {(..)
  applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest): expected:<....0.10.8-SNAPSHOT)(..)
  applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applyAsyncSpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applyAsyncSpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest): expected:<....0.10.8-SNAPSHOT)(..)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest): expected:<....0.10.8-SNAPSHOT)(..)

Tests in error: 
  applySpringFeignClient_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest)
  applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest)
  applySpring4ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring3ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring4ControllerStubRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring3ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring3ControllerInterfaceRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest)
  applySpring4RestTemplateClientRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.Issue61RulesTest)
  applySpring4ControllerDecoratorRule_shouldCreate_validCode(com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest)

Tests run: 208, Failures: 40, Errors: 12, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring MVC to RAML Synchronizer .................... SUCCESS [  0.004 s]
[INFO] Spring MVC to RAML Synchronizer Annotations ........ SUCCESS [  0.852 s]
[INFO] Spring MVC to RAML Synchronizer Parser ............. FAILURE [  9.678 s]
[INFO] Spring MVC to RAML Synchronizer Maven Plugin ....... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11.053 s
[INFO] Finished at: 2017-10-09T15:08:26+02:00
[INFO] Final Memory: 27M/590M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project springmvc-raml-parser: There are test failures.
[ERROR] 
[ERROR] Please refer to /root/workspace/phoenixnap/springmvc-raml-plugin/285541374/springmvc-raml-parser/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :springmvc-raml-parser
