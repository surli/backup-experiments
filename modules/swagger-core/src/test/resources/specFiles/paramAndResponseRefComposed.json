{
  "swagger": "2.0",
  "title": "Petstore Sample API",
  "info": {
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "title": "Petstore Sample API",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "store",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "host": "petstore.swagger.io",
  "basePath": "/api",
  "paths": {
    "/pet": {
      "get": {
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "found it"
          },
          "404": {
            "description": "Order not found"
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      },
      "put": {
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pet object that needs to be added to the store",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "$ref": "#/definitions/Pet"
                },
                {
                  "properties": {
                    "id2": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "405": {
            "$ref": "http://my.company.com/responses/errors.json#/method-not-allowed"
          },
          "404": {
            "$ref": "http://my.company.com/responses/errors.json#/not-found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "lastName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Category": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "photoUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Tag": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Order": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "petId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}