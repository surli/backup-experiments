#Repairnator properties
#Thu Mar 16 06:00:27 CET 2017
step-durations=[CheckoutBuild\=2, CloneRepository\=2, TestProject\=489, BuildProject\=82, GatherTestInformation\=0]
workspace=./workspace
pr-remote-repo=locationlabs/testcontainers-java
pr-head-commit-id=90cd57d24e0fc2fa0cd9ca9d87e3fff89813ab53
pr-id=315
repo=testcontainers/testcontainers-java
failingModule=/root/workspace/testcontainers/testcontainers-java/211569650/core
is-pr=true
buildid=211569650
error-types=java.lang.IllegalStateException,java.lang.AssertionError,java.lang.ExceptionInInitializerError,skipped
failing-test-cases=FailureLocation{className\='org.testcontainers.junit.DockerComposeV2WithNetworkTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeV2WithNetworkTest\#org.testcontainers.junit.DockerComposeV2WithNetworkTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.WorkingDirectoryTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.WorkingDirectoryTest\#org.testcontainers.junit.WorkingDirectoryTest], failures\=[FailureType{failureName\='java.lang.ExceptionInInitializerError', failureDetail\='null', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.ParameterizedDockerfileContainerTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.ParameterizedDockerfileContainerTest\#simpleTest[alpine\:3.3], org.testcontainers.junit.ParameterizedDockerfileContainerTest\#simpleTest[alpine\:3.2]], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=2},FailureLocation{className\='org.testcontainers.junit.DockerComposePassthroughTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposePassthroughTest\#org.testcontainers.junit.DockerComposePassthroughTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerComposeContainerScalingTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeContainerScalingTest\#org.testcontainers.junit.DockerComposeContainerScalingTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.wait.HttpWaitStrategyTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.wait.HttpWaitStrategyTest\#testWaitUntilReady_Success, org.testcontainers.junit.wait.HttpWaitStrategyTest\#testWaitUntilReady_Timeout], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=2},FailureLocation{className\='org.testcontainers.junit.OutputStreamTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.OutputStreamTest\#testFetchStdoutWithTimeout, org.testcontainers.junit.OutputStreamTest\#testFetchStdoutWithNoLimit, org.testcontainers.junit.OutputStreamTest\#testToStringConsumer, org.testcontainers.junit.OutputStreamTest\#testLogConsumer, org.testcontainers.junit.OutputStreamTest\#testFetchStdout], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=5},FailureLocation{className\='org.testcontainers.junit.DockerNetworkModeTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerNetworkModeTest\#org.testcontainers.junit.DockerNetworkModeTest], failures\=[FailureType{failureName\='java.lang.ExceptionInInitializerError', failureDetail\='null', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerComposeOverrideTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeOverrideTest\#org.testcontainers.junit.DockerComposeOverrideTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.NonExistentImagePullTest', failingMethods\=[org.testcontainers.junit.NonExistentImagePullTest\#pullingNonExistentImageFailsGracefully], erroringMethods\=[], failures\=[FailureType{failureName\='java.lang.AssertionError', failureDetail\='Pulling a nonexistent container will cause an exception to be thrown\: IllegalStateException was thrown instead of ContainerFetchException', isError\=false}], nbFailures\=1, nbErrors\=0},FailureLocation{className\='org.testcontainers.junit.DockerfileContainerTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerfileContainerTest\#simpleDslTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerComposeV2FormatTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeV2FormatTest\#org.testcontainers.junit.DockerComposeV2FormatTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.FixedHostPortContainerTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.FixedHostPortContainerTest\#testFixedHostPortMapping], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerComposeContainerTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeContainerTest\#org.testcontainers.junit.DockerComposeContainerTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.GenericContainerRuleTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.GenericContainerRuleTest\#org.testcontainers.junit.GenericContainerRuleTest], failures\=[FailureType{failureName\='java.lang.ExceptionInInitializerError', failureDetail\='null', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerfileTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerfileTest\#filePermissions, org.testcontainers.junit.DockerfileTest\#simpleDockerfileWorks, org.testcontainers.junit.DockerfileTest\#customizableImage, org.testcontainers.junit.DockerfileTest\#dockerfileBuilderWorks], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=4},FailureLocation{className\='org.testcontainers.junit.wait.HostPortWaitStrategyTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.wait.HostPortWaitStrategyTest\#testWaitUntilReady_Success, org.testcontainers.junit.wait.HostPortWaitStrategyTest\#testWaitUntilReady_Timeout], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=2},FailureLocation{className\='org.testcontainers.dockerclient.DockerClientConfigUtilsTest', failingMethods\=[org.testcontainers.dockerclient.DockerClientConfigUtilsTest\#getDockerHostIpAddressShouldReturnDockerHostIpWhenHttpsUri, org.testcontainers.dockerclient.DockerClientConfigUtilsTest\#getDockerHostIpAddressShouldReturnNullWhenUnsupportedUriScheme, org.testcontainers.dockerclient.DockerClientConfigUtilsTest\#getDockerHostIpAddressShouldReturnDockerHostIpWhenHttpUri], erroringMethods\=[org.testcontainers.dockerclient.DockerClientConfigUtilsTest\#getDockerHostIpAddressShouldReturnLocalhostWhenUnixSocket, org.testcontainers.dockerclient.DockerClientConfigUtilsTest\#getDockerHostIpAddressShouldReturnDockerHostIpWhenTcpUri], failures\=[FailureType{failureName\='skipped', failureDetail\='skipped', isError\=false}, FailureType{failureName\='skipped', failureDetail\='skipped', isError\=false}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}, FailureType{failureName\='skipped', failureDetail\='skipped', isError\=false}, FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=3, nbErrors\=2},FailureLocation{className\='org.testcontainers.junit.DockerComposeDoNotOverrideTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeDoNotOverrideTest\#org.testcontainers.junit.DockerComposeDoNotOverrideTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1},FailureLocation{className\='org.testcontainers.junit.DockerComposeErrorHandlingTest', failingMethods\=[], erroringMethods\=[org.testcontainers.junit.DockerComposeErrorHandlingTest\#simpleTest], failures\=[FailureType{failureName\='java.lang.IllegalStateException', failureDetail\='Could not find a valid Docker environment. Please see logs and check configuration', isError\=true}], nbFailures\=0, nbErrors\=1}
pr-base-commit-id=82f7b487be97b00bf366d305edf111e48d2250a5
