#Repairnator properties
#Fri Mar 24 15:09:29 CET 2017
step-durations=[CheckoutBuild\=2, \=0, CloneRepository\=3, SquashRepository\=3]
workspace=./workspace
pr-remote-repo=meonlol/google-java-format
pr-head-commit-id=b67aa9e5e3c5a336149892e255a2640785a6899a
pr-id=138
repo=google/google-java-format
failingModule=/root/workspace/google/google-java-format/214566402/core
is-pr=true
buildid=214566402
error-types=org.junit.ComparisonFailure
failing-test-cases=FailureLocation{className\='com.google.googlejavaformat.java.FormatterTest', failingMethods\=[com.google.googlejavaformat.java.FormatterTest\#testFormatAosp], erroringMethods\=[], failures\=[FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<...EndUpGettingWrapped([\n                    ]because, it, is, jus...> but was\:<...EndUpGettingWrapped([]because, it, is, jus...>', isError\=false}], nbFailures\=1, nbErrors\=0},FailureLocation{className\='com.google.googlejavaformat.java.MainTest', failingMethods\=[com.google.googlejavaformat.java.MainTest\#javadoc], erroringMethods\=[], failures\=[FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<...ed do eiusmod tempor[\n *    ] incididunt ut labor...> but was\:<...ed do eiusmod tempor[] incididunt ut labor...>', isError\=false}], nbFailures\=1, nbErrors\=0},FailureLocation{className\='com.google.googlejavaformat.java.JavadocFormattingTest', failingMethods\=[com.google.googlejavaformat.java.JavadocFormattingTest\#joinedTokens, com.google.googlejavaformat.java.JavadocFormattingTest\#paragraphTagNewlines, com.google.googlejavaformat.java.JavadocFormattingTest\#oneLinerWouldBe101, com.google.googlejavaformat.java.JavadocFormattingTest\#unicodeCharacterCountArguableBug, com.google.googlejavaformat.java.JavadocFormattingTest\#joinedAtSign, com.google.googlejavaformat.java.JavadocFormattingTest\#listItemWrap, com.google.googlejavaformat.java.JavadocFormattingTest\#paramsContinuationIndented, com.google.googlejavaformat.java.JavadocFormattingTest\#multilineWrap, com.google.googlejavaformat.java.JavadocFormattingTest\#joinedMultipleAtSign, com.google.googlejavaformat.java.JavadocFormattingTest\#links], erroringMethods\=[], failures\=[FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<... 234567890 234567890[\n *      ] 234567890\n * </ul>\n...> but was\:<... 234567890 234567890[] 234567890\n * </ul>\n...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<...tempor incididunt ut[\n   * labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n   * laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n   * pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n   * anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n   * labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n   * laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n   * pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n   * anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n   * labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n   * laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n   * pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n   * anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n   * labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n   * laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n   * pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n   *] anim id est laborum...> but was\:<...tempor incididunt ut[ labore et dolore magna aliqua. Ut enim ad minim\n   * veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n   * veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n   * veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."\n   */\n  void f() {}\n\n  /**\n   * Lorum Ipsum.\n   *\n   * <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n   * veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n   *\n   * <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n   *\n   * <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit] anim id est laborum...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12\n * 456789\uD834\uDD1E12 456789\uD834\uDD1E\n] */\nclass Test {}\n> but was\:</**[ 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E12 456789\uD834\uDD1E] */\nclass Test {}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012\n * 45678901\n] */\nclass Test {}\n> but was\:</**[ 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 45678901] */\nclass Test {}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012\n * 456789012 @5678901\n] */\nclass Test {}\n> but was\:</**[ 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 @5678901] */\nclass Test {}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 567890123 567890123 567890123 567890123 567890123 567890123 567890123 567890123 567890123 5678\n] */\nclass Test {}\n> but was\:</**[ 567890123 567890123 567890123 567890123 567890123 567890123 567890123 567890123 567890123 5678] */\nclass Test {}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012\n * 4<b>8901\n] */\nclass Test {}\n> but was\:</**[ 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 4<b>8901] */\nclass Test {}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<... 567890123 567890123[\n *    ] 567890123\n * @param...> but was\:<... 567890123 567890123[] 567890123\n * @param...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:<...12 456789012 4567 <a[\n * href\=foo>foo</a>.\n *\n * <p>789012 456789012 456789012 456789012 456789012 456789012 456789012 456789 <a href\=foo>foo</a>.\n *\n * <p>789012 456789012 456789012 456789012 456789012 456789012 456789012 4567890 <a href\=foo>\n * ]foo</a>.\n *\n * <p><a...> but was\:<...12 456789012 4567 <a[ href\=foo>foo</a>.\n *\n * <p>789012 456789012 456789012 456789012 456789012 456789012 456789012 456789 <a href\=foo>foo</a>.\n *\n * <p>789012 456789012 456789012 456789012 456789012 456789012 456789012 4567890 <a href\=foo>]foo</a>.\n *\n * <p><a...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='expected\:</**[\n * 456789012 456789012 456789012 456789012 456789012 456789012 456789012\n * 456789012 @56789012 @5678901\n] */\nclass Test {}\n> but was\:</**[ 456789012 456789012 456789012 456789012 456789012 456789012 456789012 456789012 @56789012 @5678901] */\nclass Test {}\n>', isError\=false}], nbFailures\=10, nbErrors\=0},FailureLocation{className\='com.google.googlejavaformat.java.PartialFormattingTest', failingMethods\=[com.google.googlejavaformat.java.PartialFormattingTest\#blankAndComment[0], com.google.googlejavaformat.java.PartialFormattingTest\#blankAndComment[1], com.google.googlejavaformat.java.PartialFormattingTest\#blankAndComment[2]], erroringMethods\=[], failures\=[FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output expected\:<...itionsByApplication([\n                    STUB_GAIA_ID,\n                    STUB_APPLICATION_ID,\n                    Optional.<Integer>absent(),\n                    Optional.<String>absent())\n                .getAchievements())\n        .containsExactly(\n            createExpectedDefinition(1),\n            createIncrementalExpectedDefinition(2),\n            createExpectedDefinition(3),\n           ] createIncrementalEx...> but was\:<...itionsByApplication([STUB_GAIA_ID, STUB_APPLICATION_ID, Optional.<Integer>absent(), Optional.<String>absent())\n                .getAchievements())\n        .containsExactly(\n            createExpectedDefinition(1), createIncrementalExpectedDefinition(2), createExpectedDefinition(3),] createIncrementalEx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output expected\:<...itionsByApplication([\r                    STUB_GAIA_ID,\r                    STUB_APPLICATION_ID,\r                    Optional.<Integer>absent(),\r                    Optional.<String>absent())\r                .getAchievements())\r        .containsExactly(\r            createExpectedDefinition(1),\r            createIncrementalExpectedDefinition(2),\r            createExpectedDefinition(3),\r           ] createIncrementalEx...> but was\:<...itionsByApplication([STUB_GAIA_ID, STUB_APPLICATION_ID, Optional.<Integer>absent(), Optional.<String>absent())\r                .getAchievements())\r        .containsExactly(\r            createExpectedDefinition(1), createIncrementalExpectedDefinition(2), createExpectedDefinition(3),] createIncrementalEx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output expected\:<...itionsByApplication([\n                    STUB_GAIA_ID,\n                    STUB_APPLICATION_ID,\n                    Optional.<Integer>absent(),\n                    Optional.<String>absent())\n                .getAchievements())\n        .containsExactly(\n            createExpectedDefinition(1),\n            createIncrementalExpectedDefinition(2),\n            createExpectedDefinition(3),\n           ] createIncrementalEx...> but was\:<...itionsByApplication([STUB_GAIA_ID, STUB_APPLICATION_ID, Optional.<Integer>absent(), Optional.<String>absent())\n                .getAchievements())\n        .containsExactly(\n            createExpectedDefinition(1), createIncrementalExpectedDefinition(2), createExpectedDefinition(3),] createIncrementalEx...>', isError\=false}], nbFailures\=3, nbErrors\=0},FailureLocation{className\='com.google.googlejavaformat.java.FormatterIntegrationTest', failingMethods\=[com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[16\: B20567842], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[24\: B21031147], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[13\: B20529113], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[106\: M], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[60\: B24862959], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[111\: P], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[0\: A], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[30\: B21305044], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[115\: R], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[119\: T], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[70\: B26884608], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[11\: B20341001], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[95\: E], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[123\: Unformatted], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[44\: B22488373], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[120\: TryWithResources], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[8\: B20128588], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[119\: T], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[24\: B21031147], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[53\: B23708487], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[56\: B24202287], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[115\: R], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[93\: C], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[27\: B21192435], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[15\: B20535125], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[55\: B23804934], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[69\: B26293162], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[51\: B23514513], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[54\: B23749160], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[67\: B26207047], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[9\: B20128760], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[69\: B26293162], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[28\: B21278211], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[40\: B22166687], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[59\: B24702438], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[115\: R], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[37\: B21608216], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[121\: U], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[127\: W], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[33\: B21331232], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[97\: F], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[89\: B32397217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[116\: S], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[5\: B19950815], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[39\: B21954779], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[33\: B21331232], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[44\: B22488373], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[37\: B21608216], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[123\: Unformatted], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[28\: B21278211], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[24\: B21031147], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[67\: B26207047], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[21\: B20701054], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[0\: A], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[100\: I], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[8\: B20128588], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[48\: B22873322], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[87\: B32114928], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[95\: E], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[21\: B20701054], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[94\: D], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[124\: Unformatted2], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[123\: Unformatted], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[94\: D], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[47\: B22848286], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[69\: B26293162], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[62\: B24988078], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[55\: B23804934], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[16\: B20567842], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[93\: C], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[124\: Unformatted2], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[89\: B32397217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[13\: B20529113], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[5\: B19950815], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[116\: S], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[48\: B22873322], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[61\: B24909927], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[48\: B22873322], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[45\: B22610221], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[101\: I1], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[40\: B22166687], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[47\: B22848286], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[29\: B21283374], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[5\: B19950815], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[21\: B20701054], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[121\: U], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[119\: T], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[0\: A], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[67\: B26207047], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[27\: B21192435], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[87\: B32114928], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[41\: B22169269], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[106\: M], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[34\: B21465217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[40\: B22166687], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[84\: B30223986], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[95\: E], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[19\: B20578077], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[106\: M], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[70\: B26884608], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[11\: B20341001], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[33\: B21331232], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[13\: B20529113], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[118\: SuperQualifier], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[59\: B24702438], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[51\: B23514513], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[100\: I], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[61\: B24909927], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[87\: B32114928], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[118\: SuperQualifier], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[29\: B21283374], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[100\: I], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[94\: D], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[11\: B20341001], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[56\: B24202287], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[44\: B22488373], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[118\: SuperQualifier], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[45\: B22610221], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[93\: C], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[108\: Multivariables], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[97\: F], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[119\: T], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[108\: Multivariables], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[30\: B21305044], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[126\: V], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[8\: B20128588], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[41\: B22169269], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[8\: B20128588], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[120\: TryWithResources], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[28\: B21278211], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[53\: B23708487], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[67\: B26207047], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[111\: P], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[24\: B21031147], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[37\: B21608216], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[60\: B24862959], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[101\: I1], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[56\: B24202287], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[54\: B23749160], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[106\: M], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[13\: B20529113], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[97\: F], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[126\: V], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[115\: R], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[39\: B21954779], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[62\: B24988078], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[15\: B20535125], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[15\: B20535125], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[100\: I], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[93\: C], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[54\: B23749160], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[62\: B24988078], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[16\: B20567842], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[34\: B21465217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[101\: I1], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[126\: V], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[30\: B21305044], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[41\: B22169269], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[9\: B20128760], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[34\: B21465217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[108\: Multivariables], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[84\: B30223986], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[51\: B23514513], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[124\: Unformatted2], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[27\: B21192435], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[84\: B30223986], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[51\: B23514513], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[15\: B20535125], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[70\: B26884608], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[55\: B23804934], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[11\: B20341001], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[41\: B22169269], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[29\: B21283374], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[53\: B23708487], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[19\: B20578077], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[95\: E], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[56\: B24202287], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[108\: Multivariables], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[5\: B19950815], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[47\: B22848286], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[61\: B24909927], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[19\: B20578077], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[54\: B23749160], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[89\: B32397217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[94\: D], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[70\: B26884608], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[89\: B32397217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[60\: B24862959], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[121\: U], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[121\: U], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[59\: B24702438], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[84\: B30223986], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[40\: B22166687], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[61\: B24909927], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[45\: B22610221], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[97\: F], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[127\: W], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[39\: B21954779], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[123\: Unformatted], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[118\: SuperQualifier], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[39\: B21954779], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[127\: W], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[45\: B22610221], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[53\: B23708487], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[48\: B22873322], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[19\: B20578077], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[28\: B21278211], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[29\: B21283374], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[111\: P], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[126\: V], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[111\: P], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[21\: B20701054], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[37\: B21608216], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[120\: TryWithResources], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[33\: B21331232], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[9\: B20128760], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[69\: B26293162], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[44\: B22488373], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[59\: B24702438], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[16\: B20567842], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[30\: B21305044], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[62\: B24988078], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[9\: B20128760], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[34\: B21465217], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[27\: B21192435], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[60\: B24862959], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[55\: B23804934], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[101\: I1], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[120\: TryWithResources], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentLF[87\: B32114928], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[124\: Unformatted2], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[116\: S], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[0\: A], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCR[47\: B22848286], com.google.googlejavaformat.java.FormatterIntegrationTest\#format[116\: S], com.google.googlejavaformat.java.FormatterIntegrationTest\#idempotentCRLF[127\: W]], erroringMethods\=[], failures\=[FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for A expected\:<...eMemberDeclarations,[\n * Annotations, AnonymousClassDeclarations, ArrayAccesses, ArrayCreations, ArrayInitializers,\n * ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default\n        1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \=\n      new int[] {\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n        25, 26, 27, 28, 29, 30, 31\n      };\n  int[] array3 \= {\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n    26, 27, 28, 29, 30, 31\n  };\n  int[][] array4 \= {\n    {0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19},\n    {20, 21}, {22, 23}\n  };\n  int[][][] arrayWithLongName \=\n      new int\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n           ] + 2 + 2 + 2 + 2 + 2...> but was\:<...eMemberDeclarations,[ Annotations, AnonymousClassDeclarations,\n * ArrayAccesses, ArrayCreations, ArrayInitializers, ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \= new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[] array3 \= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[][] array4 \= {{0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19}, {20, 21}, {22, 23}};\n  int[][][] arrayWithLongName \=\n      new int[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2] + 2 + 2 + 2 + 2 + 2...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for A expected\:<...eMemberDeclarations,[\r * Annotations, AnonymousClassDeclarations, ArrayAccesses, ArrayCreations, ArrayInitializers,\r * ArrayTypes, AssertStatements, and Assignments.\r */\rclass A {\r  public @interface X {\r    int x();\r\r    int y() default\r        1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\r  }\r\r  @X(x \= 1)\r  private @interface Y {}\r\r  // TODO(jdd)\: Add annotation declaration with empty body.\r\r  @X(x \= 1)\r  @Y\r  protected @interface Z {}\r\r  // TODO(jdd)\: Include type annotations once we can include a higher language level.\r\r  int[] array1 \= new int[5];\r  int[] array2 \=\r      new int[] {\r        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\r        25, 26, 27, 28, 29, 30, 31\r      };\r  int[] array3 \= {\r    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\r    26, 27, 28, 29, 30, 31\r  };\r  int[][] array4 \= {\r    {0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19},\r    {20, 21}, {22, 23}\r  };\r  int[][][] arrayWithLongName \=\r      new int\r          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r          [];\r\r  A a1 \=\r      new A() {\r        int x \=\r            array1[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array2[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array3[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array4[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0][\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0];\r      };\r\r  void f(int something) {\r    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\r    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r            \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r        \: "that was certainly unexpected\!";\r    arrayWithLongName[\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\r        arrayWithLongName[\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\r    something \=\r        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\r            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\r           ] + 2 + 2 + 2 + 2 + 2...> but was\:<...eMemberDeclarations,[ Annotations, AnonymousClassDeclarations,\r * ArrayAccesses, ArrayCreations, ArrayInitializers, ArrayTypes, AssertStatements, and Assignments.\r */\rclass A {\r  public @interface X {\r    int x();\r\r    int y() default 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\r  }\r\r  @X(x \= 1)\r  private @interface Y {}\r\r  // TODO(jdd)\: Add annotation declaration with empty body.\r\r  @X(x \= 1)\r  @Y\r  protected @interface Z {}\r\r  // TODO(jdd)\: Include type annotations once we can include a higher language level.\r\r  int[] array1 \= new int[5];\r  int[] array2 \= new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\r  int[] array3 \= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\r  int[][] array4 \= {{0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19}, {20, 21}, {22, 23}};\r  int[][][] arrayWithLongName \=\r      new int[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][];\r\r  A a1 \=\r      new A() {\r        int x \=\r            array1[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array2[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array3[\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\r                + array4[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\r      };\r\r  void f(int something) {\r    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\r    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r        \: "that was certainly unexpected\!";\r    arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\r        arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\r    something \=\r        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\r            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2] + 2 + 2 + 2 + 2 + 2...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for A expected\:<...eMemberDeclarations,[\n * Annotations, AnonymousClassDeclarations, ArrayAccesses, ArrayCreations, ArrayInitializers,\n * ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default\n        1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \=\n      new int[] {\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n        25, 26, 27, 28, 29, 30, 31\n      };\n  int[] array3 \= {\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n    26, 27, 28, 29, 30, 31\n  };\n  int[][] array4 \= {\n    {0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19},\n    {20, 21}, {22, 23}\n  };\n  int[][][] arrayWithLongName \=\n      new int\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n           ] + 2 + 2 + 2 + 2 + 2...> but was\:<...eMemberDeclarations,[ Annotations, AnonymousClassDeclarations,\n * ArrayAccesses, ArrayCreations, ArrayInitializers, ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \= new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[] array3 \= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[][] array4 \= {{0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19}, {20, 21}, {22, 23}};\n  int[][][] arrayWithLongName \=\n      new int[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2] + 2 + 2 + 2 + 2 + 2...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for A expected\:<...eMemberDeclarations,[\n * Annotations, AnonymousClassDeclarations, ArrayAccesses, ArrayCreations, ArrayInitializers,\n * ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default\n        1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \=\n      new int[] {\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n        25, 26, 27, 28, 29, 30, 31\n      };\n  int[] array3 \= {\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n    26, 27, 28, 29, 30, 31\n  };\n  int[][] array4 \= {\n    {0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19},\n    {20, 21}, {22, 23}\n  };\n  int[][][] arrayWithLongName \=\n      new int\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n              + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n           ] + 2 + 2 + 2 + 2 + 2...> but was\:<...eMemberDeclarations,[ Annotations, AnonymousClassDeclarations,\n * ArrayAccesses, ArrayCreations, ArrayInitializers, ArrayTypes, AssertStatements, and Assignments.\n */\nclass A {\n  public @interface X {\n    int x();\n\n    int y() default 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n  }\n\n  @X(x \= 1)\n  private @interface Y {}\n\n  // TODO(jdd)\: Add annotation declaration with empty body.\n\n  @X(x \= 1)\n  @Y\n  protected @interface Z {}\n\n  // TODO(jdd)\: Include type annotations once we can include a higher language level.\n\n  int[] array1 \= new int[5];\n  int[] array2 \= new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[] array3 \= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n  int[][] array4 \= {{0, 1}, {2, 3}, {4, 5}, {6, 7}, {8, 9}, {10, 11}, {12, 13}, {14, 15}, {16, 17}, {18, 19}, {20, 21}, {22, 23}};\n  int[][][] arrayWithLongName \=\n      new int[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n          [0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][];\n\n  A a1 \=\n      new A() {\n        int x \=\n            array1[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array2[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array3[\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0]\n                + array4[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0][\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n      };\n\n  void f(int something) {\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1;\n    assert 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \: "that was certainly unexpected\!";\n    arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] \=\n        arrayWithLongName[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0];\n    something \=\n        2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n            + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2] + 2 + 2 + 2 + 2 + 2...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B19950815 expected\:<...uncationLength >\= 0,[\n        "maxLength (%s) must be >\= length of the truncation indicator (%s)",\n        maxLength,\n        truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(\n      CharSequence sequence,\n      int start,\n      int end,\n      char replacement,\n      StringBuilder builder,\n     ] boolean inMatchingG...> but was\:<...uncationLength >\= 0,[ "maxLength (%s) must be >\= length of the truncation indicator (%s)", maxLength, truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(CharSequence sequence, int start, int end, char replacement, StringBuilder builder,] boolean inMatchingG...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B19950815 expected\:<...uncationLength >\= 0,[\r        "maxLength (%s) must be >\= length of the truncation indicator (%s)",\r        maxLength,\r        truncationIndicator.length());\r  }\r\r  private String finishCollapseFrom(\r      CharSequence sequence,\r      int start,\r      int end,\r      char replacement,\r      StringBuilder builder,\r     ] boolean inMatchingG...> but was\:<...uncationLength >\= 0,[ "maxLength (%s) must be >\= length of the truncation indicator (%s)", maxLength, truncationIndicator.length());\r  }\r\r  private String finishCollapseFrom(CharSequence sequence, int start, int end, char replacement, StringBuilder builder,] boolean inMatchingG...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B19950815 expected\:<...uncationLength >\= 0,[\n        "maxLength (%s) must be >\= length of the truncation indicator (%s)",\n        maxLength,\n        truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(\n      CharSequence sequence,\n      int start,\n      int end,\n      char replacement,\n      StringBuilder builder,\n     ] boolean inMatchingG...> but was\:<...uncationLength >\= 0,[ "maxLength (%s) must be >\= length of the truncation indicator (%s)", maxLength, truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(CharSequence sequence, int start, int end, char replacement, StringBuilder builder,] boolean inMatchingG...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B19950815 expected\:<...uncationLength >\= 0,[\n        "maxLength (%s) must be >\= length of the truncation indicator (%s)",\n        maxLength,\n        truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(\n      CharSequence sequence,\n      int start,\n      int end,\n      char replacement,\n      StringBuilder builder,\n     ] boolean inMatchingG...> but was\:<...uncationLength >\= 0,[ "maxLength (%s) must be >\= length of the truncation indicator (%s)", maxLength, truncationIndicator.length());\n  }\n\n  private String finishCollapseFrom(CharSequence sequence, int start, int end, char replacement, StringBuilder builder,] boolean inMatchingG...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128588 expected\:<... var;\n  }\n\n  void f([\n      @Foo @Bar @Baz final Object var,\n      final @Foo @Bar @Baz Object var,\n      @Foo @Bar @Baz Object var,\n      @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)\n     ] throws @TA Exceptio...> but was\:<... var;\n  }\n\n  void f([@Foo @Bar @Baz final Object var, final @Foo @Bar @Baz Object var, @Foo @Bar @Baz Object var, @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)] throws @TA Exceptio...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128588 expected\:<... var;\r  }\r\r  void f([\r      @Foo @Bar @Baz final Object var,\r      final @Foo @Bar @Baz Object var,\r      @Foo @Bar @Baz Object var,\r      @Foo(xs \= 42) @Bar @Baz Object var) {}\r\r  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)\r     ] throws @TA Exceptio...> but was\:<... var;\r  }\r\r  void f([@Foo @Bar @Baz final Object var, final @Foo @Bar @Baz Object var, @Foo @Bar @Baz Object var, @Foo(xs \= 42) @Bar @Baz Object var) {}\r\r  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)] throws @TA Exceptio...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128588 expected\:<... var;\n  }\n\n  void f([\n      @Foo @Bar @Baz final Object var,\n      final @Foo @Bar @Baz Object var,\n      @Foo @Bar @Baz Object var,\n      @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)\n     ] throws @TA Exceptio...> but was\:<... var;\n  }\n\n  void f([@Foo @Bar @Baz final Object var, final @Foo @Bar @Baz Object var, @Foo @Bar @Baz Object var, @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)] throws @TA Exceptio...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128588 expected\:<...r;\n  }\n\n  void f([\n      @Foo @Bar @Baz final Object var,\n      final @Foo @Bar @Baz Object var,\n      @Foo @Bar @Baz Object var,\n      @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)\n     ] throws @TA Exceptio...> but was\:<...r;\n  }\n\n  void f([@Foo @Bar @Baz final Object var, final @Foo @Bar @Baz Object var, @Foo @Bar @Baz Object var, @Foo(xs \= 42) @Bar @Baz Object var) {}\n\n  <@TA T extends @TA Object> @TA T f(List<? extends @TA T> a, List<? super @TA T> b)] throws @TA Exceptio...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128760 expected\:<...  void f() {\n    x \=[\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(\n            XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX,\n            XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(\n                            Xxxxx.xxxXxxxxXxxx(\n                                new XxxxXx(\n                                    xxxxxxxxx1.xxxXxxxXx().xxxXxxxx()\n                                        + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2(\n                "XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx",\n                xxxxxxxxXxxxXxXxxxxxxxXx,\n                xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx(\n                "XxxxxxxxXxxxxxxxxXxx",\n                xxxxxxxxXxxxxxxxxXxxXx,\n                XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(\n            xxxxxxxxxx\n                .xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX)\n                .xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX),\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(\n        xxxx(\n            xxxx(\n                xxxx(\n                    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(\n            main.format(\n                "--offset", "0", "--length", String.valueOf(input.length()), path.toString()))\n        .isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>,\n          Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<\n          XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(\n                                        id ->\n                                            new ItemKey(\n                                                ]fieldsById.get(fv.ge...> but was\:<...  void f() {\n    x \=[ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX, XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(Xxxxx.xxxXxxxxXxxx(new XxxxXx(xxxxxxxxx1.xxxXxxxXx().xxxXxxxx() + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2("XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx", xxxxxxxxXxxxXxXxxxxxxxXx, xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx("XxxxxxxxXxxxxxxxxXxx", xxxxxxxxXxxxxxxxxXxxXx, XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(xxxxxxxxxx.xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX).xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX), xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(xxxx(xxxx(xxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(main.format("--offset", "0", "--length", String.valueOf(input.length()), path.toString())).isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>, Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(id -> new ItemKey(]fieldsById.get(fv.ge...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128760 expected\:<...  void f() {\r    x \=[\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\r        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\r        .xxx(\r            XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX,\r            XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\r        .xxxxx();\r\r    xxxxxxXxxx(\r            xxx.xxxXxXxxxxxxx(\r                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\r                        .xxxxXxxxXxx(\r                            Xxxxx.xxxXxxxxXxxx(\r                                new XxxxXx(\r                                    xxxxxxxxx1.xxxXxxxXx().xxxXxxxx()\r                                        + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\r                        .xxxxx())\r                .xxxXxxxxxx())\r        .xxxxxxxxXxxxxxx();\r\r    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\r        XX.xxxxXxxXxxx2(\r                "XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx",\r                xxxxxxxxXxxxXxXxxxxxxxXx,\r                xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\r            .xxxxxxxxXx(\r                "XxxxxxxxXxxxxxxxxXxx",\r                xxxxxxxxXxxxxxxxxXxxXx,\r                XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\r\r    xxXxxxxxxxXxxxXxxx \=\r        (XxxxXxxx)\r            xxxxxxxxXxxxxxxxxx\r                .xxx()\r                .xxxxxXxxxxxx\r                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\r                .xxxXxxx()\r                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    xxxxxxXxxx(\r            xxxxxxxxxx\r                .xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX)\r                .xxxxxxxxxxxXxxxXxxxXxxxxx())\r        .xxxxxxxxXxxxxxx(\r            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX),\r            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\r\r    xxxx(\r        xxxx(\r            xxxx(\r                xxxx(\r                    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\r\r    assertThat(\r            main.format(\r                "--offset", "0", "--length", String.valueOf(input.length()), path.toString()))\r        .isEqualTo(0);\r  }\r\r  private static class GenerateDashboardRowFn\r      extends XX.XxXx<\r          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>,\r          Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\r\r  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\r      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<\r          XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\r\r  public class Foo\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  public class Foo\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  public class Foo\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r      implements Xxxxxxxxxxxxx<\r              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\r          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  {\r    Stream<ItemKey> itemIdsStream \=\r        stream(members)\r            .flatMap(\r                m ->\r                    m.getFieldValues()\r                        .entrySet()\r                        .stream()\r                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\r                        .flatMap(\r                            fv ->\r                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\r                                    .stream()\r                                    .map(\r                                        id ->\r                                            new ItemKey(\r                                                ]fieldsById.get(fv.ge...> but was\:<...  void f() {\r    x \=[ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\r        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\r        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX, XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\r        .xxxxx();\r\r    xxxxxxXxxx(\r            xxx.xxxXxXxxxxxxx(\r                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\r                        .xxxxXxxxXxx(Xxxxx.xxxXxxxxXxxx(new XxxxXx(xxxxxxxxx1.xxxXxxxXx().xxxXxxxx() + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\r                        .xxxxx())\r                .xxxXxxxxxx())\r        .xxxxxxxxXxxxxxx();\r\r    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\r        XX.xxxxXxxXxxx2("XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx", xxxxxxxxXxxxXxXxxxxxxxXx, xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\r            .xxxxxxxxXx("XxxxxxxxXxxxxxxxxXxx", xxxxxxxxXxxxxxxxxXxxXx, XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\r\r    xxXxxxxxxxXxxxXxxx \=\r        (XxxxXxxx)\r            xxxxxxxxXxxxxxxxxx\r                .xxx()\r                .xxxxxXxxxxxx\r                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\r                .xxxXxxx()\r                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    xxxxxxXxxx(xxxxxxxxxx.xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX).xxxxxxxxxxxXxxxXxxxXxxxxx())\r        .xxxxxxxxXxxxxxx(xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX), xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\r\r    xxxx(xxxx(xxxx(xxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\r\r    assertThat(main.format("--offset", "0", "--length", String.valueOf(input.length()), path.toString())).isEqualTo(0);\r  }\r\r  private static class GenerateDashboardRowFn\r      extends XX.XxXx<\r          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>, Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\r\r  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\r      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\r\r  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r      implements Xxxxxxxxxxxxx<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\r          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  {\r    Stream<ItemKey> itemIdsStream \=\r        stream(members)\r            .flatMap(\r                m ->\r                    m.getFieldValues()\r                        .entrySet()\r                        .stream()\r                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\r                        .flatMap(\r                            fv ->\r                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\r                                    .stream()\r                                    .map(id -> new ItemKey(]fieldsById.get(fv.ge...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128760 expected\:<...  void f() {\n    x \=[\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(\n            XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX,\n            XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(\n                            Xxxxx.xxxXxxxxXxxx(\n                                new XxxxXx(\n                                    xxxxxxxxx1.xxxXxxxXx().xxxXxxxx()\n                                        + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2(\n                "XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx",\n                xxxxxxxxXxxxXxXxxxxxxxXx,\n                xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx(\n                "XxxxxxxxXxxxxxxxxXxx",\n                xxxxxxxxXxxxxxxxxXxxXx,\n                XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(\n            xxxxxxxxxx\n                .xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX)\n                .xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX),\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(\n        xxxx(\n            xxxx(\n                xxxx(\n                    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(\n            main.format(\n                "--offset", "0", "--length", String.valueOf(input.length()), path.toString()))\n        .isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>,\n          Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<\n          XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(\n                                        id ->\n                                            new ItemKey(\n                                                ]fieldsById.get(fv.ge...> but was\:<...  void f() {\n    x \=[ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX, XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(Xxxxx.xxxXxxxxXxxx(new XxxxXx(xxxxxxxxx1.xxxXxxxXx().xxxXxxxx() + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2("XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx", xxxxxxxxXxxxXxXxxxxxxxXx, xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx("XxxxxxxxXxxxxxxxxXxx", xxxxxxxxXxxxxxxxxXxxXx, XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(xxxxxxxxxx.xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX).xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX), xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(xxxx(xxxx(xxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(main.format("--offset", "0", "--length", String.valueOf(input.length()), path.toString())).isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>, Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(id -> new ItemKey(]fieldsById.get(fv.ge...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20128760 expected\:<... void f() {\n    x \=[\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(\n            XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX,\n            XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(\n                            Xxxxx.xxxXxxxxXxxx(\n                                new XxxxXx(\n                                    xxxxxxxxx1.xxxXxxxXx().xxxXxxxx()\n                                        + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2(\n                "XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx",\n                xxxxxxxxXxxxXxXxxxxxxxXx,\n                xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx(\n                "XxxxxxxxXxxxxxxxxXxx",\n                xxxxxxxxXxxxxxxxxXxxXx,\n                XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(\n            xxxxxxxxxx\n                .xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX)\n                .xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX),\n            xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(\n        xxxx(\n            xxxx(\n                xxxx(\n                    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(\n            main.format(\n                "--offset", "0", "--length", String.valueOf(input.length()), path.toString()))\n        .isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>,\n          Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<\n          XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n              Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(\n                                        id ->\n                                            new ItemKey(\n                                                ]fieldsById.get(fv.ge...> but was\:<... void f() {\n    x \=[ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    XxxxxxxxxXxx.<Xxxxxx, Xxxxxx>xxxxxxx()\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXX, "Xxxxx xxxxxxxxx xxxxx")\n        .xxx(XxxxxxxxxXxxXxxx.Xxxxx.XXXXXxXXXXX, XxxxXxxxxxxxxx.xxxXxxxxxxxxXxxxxXxxxxXxXxxxxx(Xxxxxxxxxx.xxxXxxxXxxxx(x)))\n        .xxxxx();\n\n    xxxxxxXxxx(\n            xxx.xxxXxXxxxxxxx(\n                    new XxxxxxxxxXxxxxxxx.Xxxxxxx()\n                        .xxxxXxxxXxx(Xxxxx.xxxXxxxxXxxx(new XxxxXx(xxxxxxxxx1.xxxXxxxXx().xxxXxxxx() + xxxxxxxxx2.xxxXxxxXx().xxxXxxxx())))\n                        .xxxxx())\n                .xxxXxxxxxx())\n        .xxxxxxxxXxxxxxx();\n\n    XXxxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx> xxxxxxxxxXxxXxxXxXxxxxxxxXx \=\n        XX.xxxxXxxXxxx2("XxxxXxxxxxxxXxxxXxxxXxxxxxxxXxxxXxxXxxxxxxXxxxxxxxx", xxxxxxxxXxxxXxXxxxxxxxXx, xxxxxxxxXxxxXxxxxXxxxXxXxxxxxxxXx)\n            .xxxxxxxxXx("XxxxxxxxXxxxxxxxxXxx", xxxxxxxxXxxxxxxxxXxxXx, XX.xxxxxXx(XX.xxxxx(), XX.xxxxxx(XxxxxxxXxxxxxxxxxxXxxxxxxxx.xxxxx)));\n\n    xxXxxxxxxxXxxxXxxx \=\n        (XxxxXxxx)\n            xxxxxxxxXxxxxxxxxx\n                .xxx()\n                .xxxxxXxxxxxx\n                .xxxXxxxxxxx(xxxxxxxxXxxxxxxxxx.xxx().xxxxXxxxx.xxxXxxxxxxXxxx() - 1)\n                .xxxXxxx()\n                .xxxxXxxxXxXx(X.xx.xxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    xxxxxxXxxx(xxxxxxxxxx.xxxXxxxXxxxxXxxxxxxxxxxXxxxXxxxXxxxxXxxx(XXXxXXXXxXX, XXXXXXxXXXxXXXXxXX, XXXXXxXX).xxxxxxxxxxxXxxxXxxxXxxxxx())\n        .xxxxxxxxXxxxxxx(xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx1Xxxx, Xxxxx.XXxXXX), xxxxXxxxxxxxxxxXxxxXxxxXxxxx(xxxx2Xxxx, Xxxxx.XXxXXX));\n\n    xxxx(xxxx(xxxx(xxxx(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx))));\n\n    assertThat(main.format("--offset", "0", "--length", String.valueOf(input.length()), path.toString())).isEqualTo(0);\n  }\n\n  private static class GenerateDashboardRowFn\n      extends XX.XxXx<\n          Xxxx<Xxxx, Xxxxx2.XxxXxxxXxxxxxxxxxx<XxxxxxxxXxxx, Xxxx<XxxxxxxxXxxx, XxxxxxxXxxxxxxxx>>>, Xxxx<Xxxx, XxxxxxxXxxxxxxxxxxXxxxxxxxx>> {}\n\n  public class XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>\n      extends XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<XxxxxxxXxxxxxxxXxxxXxxxxXxxxxxx<X>, XxxxXxxxxxxXxxxxxxxx<? extends Xxxxxxxx<X>>> {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  public class Foo extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxx<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx, Xxxxxxxxxxxxxxxxxxxxxxxxxxxxx>,\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  {\n    Stream<ItemKey> itemIdsStream \=\n        stream(members)\n            .flatMap(\n                m ->\n                    m.getFieldValues()\n                        .entrySet()\n                        .stream()\n                        .filter(fv -> itemLinkFieldIds.contains(fv.getKey()))\n                        .flatMap(\n                            fv ->\n                                FieldDTO.deserializeStringToListOfStrings(fv.getValue())\n                                    .stream()\n                                    .map(id -> new ItemKey(]fieldsById.get(fv.ge...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20341001 expected\:<...1, 1, 1, 1, 1, 1, 1,[\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(\n        item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,\n       ] item13);\n  }\n}\n> but was\:<...1, 1, 1, 1, 1, 1, 1,[ 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,] item13);\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20341001 expected\:<...1, 1, 1, 1, 1, 1, 1,[\r        1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r        1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r        1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r        1\r  };\r  int[] xs \= {\r    Foo.CONSTxx,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1\r  };\r  int[] xs \= {\r    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1\r  };\r  int[] xs \= {\r    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1\r  };\r  int[] xs \= {\r    "foo",\r    "01234567",\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1\r  };\r\r  {\r    return ImmutableList.of(\r        item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,\r       ] item13);\r  }\r}\r> but was\:<...1, 1, 1, 1, 1, 1, 1,[ 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\r  };\r  int[] xs \= {\r    Foo.CONSTxx,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1\r  };\r  int[] xs \= {\r    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\r  };\r  int[] xs \= {\r    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\r  };\r  int[] xs \= {\r    "foo",\r    "01234567",\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1,\r    1\r  };\r\r  {\r    return ImmutableList.of(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,] item13);\r  }\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20341001 expected\:<...1, 1, 1, 1, 1, 1, 1,[\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(\n        item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,\n       ] item13);\n  }\n}\n> but was\:<...1, 1, 1, 1, 1, 1, 1,[ 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,] item13);\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20341001 expected\:<...1, 1, 1, 1, 1, 1, 1,[\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(\n        item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,\n       ] item13);\n  }\n}\n> but was\:<...1, 1, 1, 1, 1, 1, 1,[ 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    Foo.CONSTxx,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n  int[] xs \= {\n    Foo_CONST, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo", "0123456", 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n  };\n  int[] xs \= {\n    "foo",\n    "01234567",\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1\n  };\n\n  {\n    return ImmutableList.of(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12,] item13);\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20529113 expected\:<...MENTAL)\n@BugPattern([\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  category \= GUAVA,\n  severity \= NOT_A_PROBLEM,\n  maturity \= EXPERIMENTAL\n)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \=\n      "If an AsyncFunction always returns immediateFuture() and never throws, it can "\n         ] + "be replaced with...> but was\:<...MENTAL)\n@BugPattern([name \= "AsyncFunctionReturnsImmediate", summary \= SIMPLIFY, category \= GUAVA, severity \= NOT_A_PROBLEM, maturity \= EXPERIMENTAL)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \= "If an AsyncFunction always returns immediateFuture() and never throws, it can "] + "be replaced with...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20529113 expected\:<...MENTAL)\r@BugPattern([\r  name \= "AsyncFunctionReturnsImmediate",\r  summary \= SIMPLIFY,\r  category \= GUAVA,\r  severity \= NOT_A_PROBLEM,\r  maturity \= EXPERIMENTAL\r)\r@BugPattern(\r  name \= "AsyncFunctionReturnsImmediate",\r  summary \= SIMPLIFY,\r  explanation \=\r      "If an AsyncFunction always returns immediateFuture() and never throws, it can "\r         ] + "be replaced with...> but was\:<...MENTAL)\r@BugPattern([name \= "AsyncFunctionReturnsImmediate", summary \= SIMPLIFY, category \= GUAVA, severity \= NOT_A_PROBLEM, maturity \= EXPERIMENTAL)\r@BugPattern(\r  name \= "AsyncFunctionReturnsImmediate",\r  summary \= SIMPLIFY,\r  explanation \= "If an AsyncFunction always returns immediateFuture() and never throws, it can "] + "be replaced with...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20529113 expected\:<...MENTAL)\n@BugPattern([\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  category \= GUAVA,\n  severity \= NOT_A_PROBLEM,\n  maturity \= EXPERIMENTAL\n)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \=\n      "If an AsyncFunction always returns immediateFuture() and never throws, it can "\n         ] + "be replaced with...> but was\:<...MENTAL)\n@BugPattern([name \= "AsyncFunctionReturnsImmediate", summary \= SIMPLIFY, category \= GUAVA, severity \= NOT_A_PROBLEM, maturity \= EXPERIMENTAL)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \= "If an AsyncFunction always returns immediateFuture() and never throws, it can "] + "be replaced with...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20529113 expected\:<...ENTAL)\n@BugPattern([\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  category \= GUAVA,\n  severity \= NOT_A_PROBLEM,\n  maturity \= EXPERIMENTAL\n)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \=\n      "If an AsyncFunction always returns immediateFuture() and never throws, it can "\n         ] + "be replaced with...> but was\:<...ENTAL)\n@BugPattern([name \= "AsyncFunctionReturnsImmediate", summary \= SIMPLIFY, category \= GUAVA, severity \= NOT_A_PROBLEM, maturity \= EXPERIMENTAL)\n@BugPattern(\n  name \= "AsyncFunctionReturnsImmediate",\n  summary \= SIMPLIFY,\n  explanation \= "If an AsyncFunction always returns immediateFuture() and never throws, it can "] + "be replaced with...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20535125 expected\:<...putTransformations()[\n       ] && Producers.isList...> but was\:<...putTransformations()[] && Producers.isList...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20535125 expected\:<...putTransformations()[\r       ] && Producers.isList...> but was\:<...putTransformations()[] && Producers.isList...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20535125 expected\:<...putTransformations()[\n       ] && Producers.isList...> but was\:<...putTransformations()[] && Producers.isList...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20535125 expected\:<...putTransformations()[\n       ] && Producers.isList...> but was\:<...putTransformations()[] && Producers.isList...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20567842 expected\:<...xxxxxxxxxxxxxxxx \= {[\n    1, 2, 3\n  };\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1\n  ]};\n}\n> but was\:<...xxxxxxxxxxxxxxxx \= {[1, 2, 3};\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]};\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20567842 expected\:<...xxxxxxxxxxxxxxxx \= {[\r    1, 2, 3\r  };\r\r  // force block style, but not one-per-line for trailing ','\:\r  int[] x \= {\r    a.b, true ? 1 \: 2, CONST,\r  };\r\r  // don't format one-per-line here\:\r  int[] x \= {\r    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r    1, 1, 1, 1\r  ]};\r}\r> but was\:<...xxxxxxxxxxxxxxxx \= {[1, 2, 3};\r\r  // force block style, but not one-per-line for trailing ','\:\r  int[] x \= {\r    a.b, true ? 1 \: 2, CONST,\r  };\r\r  // don't format one-per-line here\:\r  int[] x \= {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]};\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20567842 expected\:<...xxxxxxxxxxxxxxxx \= {[\n    1, 2, 3\n  };\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1\n  ]};\n}\n> but was\:<...xxxxxxxxxxxxxxxx \= {[1, 2, 3};\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]};\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20567842 expected\:<...xxxxxxxxxxxxxxxx \= {[\n    1, 2, 3\n  };\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1\n  ]};\n}\n> but was\:<...xxxxxxxxxxxxxxxx \= {[1, 2, 3};\n\n  // force block style, but not one-per-line for trailing ','\:\n  int[] x \= {\n    a.b, true ? 1 \: 2, CONST,\n  };\n\n  // don't format one-per-line here\:\n  int[] x \= {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]};\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20578077 expected\:<...atorTester<Integer>([\n        ]4, MODIFIABLE, newAr...> but was\:<...atorTester<Integer>([]4, MODIFIABLE, newAr...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20578077 expected\:<...atorTester<Integer>([\r        ]4, MODIFIABLE, newAr...> but was\:<...atorTester<Integer>([]4, MODIFIABLE, newAr...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20578077 expected\:<...atorTester<Integer>([\n        ]4, MODIFIABLE, newAr...> but was\:<...atorTester<Integer>([]4, MODIFIABLE, newAr...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20578077 expected\:<...atorTester<Integer>([\n        ]4, MODIFIABLE, newAr...> but was\:<...atorTester<Integer>([]4, MODIFIABLE, newAr...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20701054 expected\:<...nputWhitelist.class)[\n        .setBinding()\n        .to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \=\n        ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(\n        veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results)\n            .parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor\n            .getImpressionBreakdownByAccountId()\n            .parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource\n            .read("readCrawlReportTable")\n            .parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n        .field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n            .field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n        .ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n           ] xxxxxxxxxxxxxxxxxxx...> but was\:<...nputWhitelist.class)[.setBinding().to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results).parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor.getImpressionBreakdownByAccountId().parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource.read("readCrawlReportTable").parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20701054 expected\:<...nputWhitelist.class)[\r        .setBinding()\r        .to(AllInputWhitelist.class);\r\r    Foo z \= Foo.INSTANCE.field;\r    Foo z \= Foo.INSTANCE.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field.field.field;\r\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\r\r    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\r    ImmutableList<String> x \=\r        ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\r\r    ImmutableList<String> x \=\r        new ImmutableList.Builder<>()\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .build();\r\r    ImmutableList<String> x \=\r        ImmutableList.new Builder<>()\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .build();\r\r    System.err.println(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    Class.my.contrived.example.function(\r        veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\r        FJ.joinOneShot2(accountSummaryProvider.get(), results)\r            .parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\r\r    PTable<Long, Long> adImpressionsByAccount \=\r        impressionExtractor\r            .getImpressionBreakdownByAccountId()\r            .parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\r\r    PTable<String, CrawlError> crawlerErrorsByCode \=\r        crawlReportSource\r            .read("readCrawlReportTable")\r            .parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\r\r    if (ImmutableList.builder().add(1).add(2).add(3)) {}\r\r    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\r\r    if (value.fst.name.toString().equals("value")) {}\r\r    analysis()\r        .analyze(\r            compilationUnit,\r            context,\r            configuration,\r            new DescriptionListener() {\r              @Override\r              public void onDescribed(Description description) {\r                listener.onDescribed(\r                    description.filterFixes(\r                        new Predicate<Fix>() {\r                          @Override\r                          public boolean apply(Fix fix) {\r                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\r                          }\r                        }));\r              }\r            });\r\r    (test ? xxx \: yyy).zzz(xxx);\r\r    (test ? xxx \: yyy)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test\r            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\r        .field.field.field.field.field.method(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test\r            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test\r            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\r            .field.field.field.field.field.field.method(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field.field.field.field.field.field.method(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field\r        .field\r        .field\r        .field\r        .field\r        .field\r        .method(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\r\r    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\r\r    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r        .ImmutableList.builder(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\r\r    int u \=\r        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .ImmutableList.builder(\r                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\r\r    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\r\r    return fffffffffff(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    return fffffffffff(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .fffffffffffff(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r           ] xxxxxxxxxxxxxxxxxxx...> but was\:<...nputWhitelist.class)[.setBinding().to(AllInputWhitelist.class);\r\r    Foo z \= Foo.INSTANCE.field;\r    Foo z \= Foo.INSTANCE.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field.field;\r    Foo z \= Foo.INSTANCE.field.field.field.field.field;\r\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\r    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\r\r    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\r    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\r\r    ImmutableList<String> x \=\r        new ImmutableList.Builder<>()\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .build();\r\r    ImmutableList<String> x \=\r        ImmutableList.new Builder<>()\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .add(xxxxx)\r            .build();\r\r    System.err.println(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    Class.my.contrived.example.function(veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\r        FJ.joinOneShot2(accountSummaryProvider.get(), results).parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\r\r    PTable<Long, Long> adImpressionsByAccount \=\r        impressionExtractor.getImpressionBreakdownByAccountId().parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\r\r    PTable<String, CrawlError> crawlerErrorsByCode \=\r        crawlReportSource.read("readCrawlReportTable").parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\r\r    if (ImmutableList.builder().add(1).add(2).add(3)) {}\r\r    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\r\r    if (value.fst.name.toString().equals("value")) {}\r\r    analysis()\r        .analyze(\r            compilationUnit,\r            context,\r            configuration,\r            new DescriptionListener() {\r              @Override\r              public void onDescribed(Description description) {\r                listener.onDescribed(\r                    description.filterFixes(\r                        new Predicate<Fix>() {\r                          @Override\r                          public boolean apply(Fix fix) {\r                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\r                          }\r                        }));\r              }\r            });\r\r    (test ? xxx \: yyy).zzz(xxx);\r\r    (test ? xxx \: yyy)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\r        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field.field.field.field.field.field.method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    field\r        .field\r        .field\r        .field\r        .field\r        .field\r        .method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\r            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\r\r    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\r\r    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\r            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\r\r    int u \=\r        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\r                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\r\r    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\r\r    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\r        .fffffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20701054 expected\:<...nputWhitelist.class)[\n        .setBinding()\n        .to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \=\n        ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(\n        veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results)\n            .parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor\n            .getImpressionBreakdownByAccountId()\n            .parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource\n            .read("readCrawlReportTable")\n            .parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n        .field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n            .field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n        .ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n           ] xxxxxxxxxxxxxxxxxxx...> but was\:<...nputWhitelist.class)[.setBinding().to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results).parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor.getImpressionBreakdownByAccountId().parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource.read("readCrawlReportTable").parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B20701054 expected\:<...nputWhitelist.class)[\n        .setBinding()\n        .to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \=\n        ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(\n        veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results)\n            .parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor\n            .getImpressionBreakdownByAccountId()\n            .parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource\n            .read("readCrawlReportTable")\n            .parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n        .field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test\n            ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n            \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field\n            .field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n        .ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n           ] xxxxxxxxxxxxxxxxxxx...> but was\:<...nputWhitelist.class)[.setBinding().to(AllInputWhitelist.class);\n\n    Foo z \= Foo.INSTANCE.field;\n    Foo z \= Foo.INSTANCE.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field;\n    Foo z \= Foo.INSTANCE.field.field.field.field.field;\n\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.INSTANCE.add(1).add(2).add(3).add(4).build();\n\n    ImmutableList<String> x \= ImmutableList.builder().add(1).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).build();\n    ImmutableList<String> x \= ImmutableList.builder().add(1).add(2).add(3).add(4).add(5).add(6).build();\n\n    ImmutableList<String> x \=\n        new ImmutableList.Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    ImmutableList<String> x \=\n        ImmutableList.new Builder<>()\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .add(xxxxx)\n            .build();\n\n    System.err.println(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    Class.my.contrived.example.function(veryLongArgumentxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    PTable<Long, List<PageSpeedUrlResult>> latestResults \=\n        FJ.joinOneShot2(accountSummaryProvider.get(), results).parallelDo("extractPageSpeedUrls", new ExtractPageSpeedUrlsFn(false));\n\n    PTable<Long, Long> adImpressionsByAccount \=\n        impressionExtractor.getImpressionBreakdownByAccountId().parallelDo("rekeyAdImpressionsByAccountId", new ExtractTotalImpressionsFn());\n\n    PTable<String, CrawlError> crawlerErrorsByCode \=\n        crawlReportSource.read("readCrawlReportTable").parallelDo("reKeyErrorsByPropertyCode", new RekeyErrorsByPropertyCodeFn());\n\n    if (ImmutableList.builder().add(1).add(2).add(3)) {}\n\n    if (ImmutableList.builder().add(1).add(2).add(3).add(4)) {}\n\n    if (value.fst.name.toString().equals("value")) {}\n\n    analysis()\n        .analyze(\n            compilationUnit,\n            context,\n            configuration,\n            new DescriptionListener() {\n              @Override\n              public void onDescribed(Description description) {\n                listener.onDescribed(\n                    description.filterFixes(\n                        new Predicate<Fix>() {\n                          @Override\n                          public boolean apply(Fix fix) {\n                            return compiles(fix, (JCCompilationUnit) compilationUnit, context);\n                          }\n                        }));\n              }\n            });\n\n    (test ? xxx \: yyy).zzz(xxx);\n\n    (test ? xxx \: yyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    zzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzz.zzzzzzzzzzzzzzzzzzzzzzzzzzzzz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    (test ? xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy)\n        .field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.field.method(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field.field.field.field.field.field.method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    field\n        .field\n        .field\n        .field\n        .field\n        .field\n        .method(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy();\n\n    edu.oswego.cs.dl.util.concurrent.misc.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n            zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n        .zzzzzzz(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz);\n\n    int u \=\n        edu.oswego.cs.dl.util.concurrent.misc.zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz.ImmutableList.builder(\n                zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz)\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n            .zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\n    for (String configured \: errorProneOptions().getSeverityMap().keySet()) {}\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    return fffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\n        .fffffffffffff(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21031147 expected\:<...ngBuilder(maxLength)[\n        .append(seq, 0, truncationLength)\n        .append(truncationIndicator)\n        ].toString();\n  }\n}\n> but was\:<...ngBuilder(maxLength)[.append(seq, 0, truncationLength).append(truncationIndicator)].toString();\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21031147 expected\:<...ngBuilder(maxLength)[\r        .append(seq, 0, truncationLength)\r        .append(truncationIndicator)\r        ].toString();\r  }\r}\r> but was\:<...ngBuilder(maxLength)[.append(seq, 0, truncationLength).append(truncationIndicator)].toString();\r  }\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21031147 expected\:<...ngBuilder(maxLength)[\n        .append(seq, 0, truncationLength)\n        .append(truncationIndicator)\n        ].toString();\n  }\n}\n> but was\:<...ngBuilder(maxLength)[.append(seq, 0, truncationLength).append(truncationIndicator)].toString();\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21031147 expected\:<...ngBuilder(maxLength)[\n        .append(seq, 0, truncationLength)\n        .append(truncationIndicator)\n        ].toString();\n  }\n}...> but was\:<...ngBuilder(maxLength)[.append(seq, 0, truncationLength).append(truncationIndicator)].toString();\n  }\n}...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21192435 expected\:<...xxxxxxxxxxxxxxxxxxxx[\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx] implements Xxxxxxxx...> but was\:<...xxxxxxxxxxxxxxxxxxxx[ implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx> extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     ] implements Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21192435 expected\:<...xxxxxxxxxxxxxxxxxxxx[\r      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  static class Testxxxxxxxxx\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\r\r  static class Testxxxxxxxxx\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r      implements Xxxxxxxxxxxxxxxx {}\r\r  static class Test<\r          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>\r      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx] implements Xxxxxxxx...> but was\:<...xxxxxxxxxxxxxxxxxxxx[ implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\r\r  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\r\r  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxxxxxxxxxxxxx {}\r\r  static class Test<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx> extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r     ] implements Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21192435 expected\:<...xxxxxxxxxxxxxxxxxxxx[\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx] implements Xxxxxxxx...> but was\:<...xxxxxxxxxxxxxxxxxxxx[ implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx> extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     ] implements Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21192435 expected\:<...xxxxxxxxxxxxxxxxxxxx[\n      implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<\n          Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>\n      extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx] implements Xxxxxxxx...> but was\:<...xxxxxxxxxxxxxxxxxxxx[ implements Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxx {}\n\n  static class Testxxxxxxxxx extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx implements Xxxxxxxxxxxxxxxx {}\n\n  static class Test<Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx> extends Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     ] implements Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21278211 expected\:<...zzzzzzzzzzzzzzzzzz()[\n        .gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f()\n        .g()\n        ].hzzzzzzzzzzzzzzzzzz...> but was\:<...zzzzzzzzzzzzzzzzzz()[.gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f().g()].hzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21278211 expected\:<...zzzzzzzzzzzzzzzzzz()[\r        .gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\r\r    x.f().g().h();\r    x.f()\r        .g()\r        ].hzzzzzzzzzzzzzzzzzz...> but was\:<...zzzzzzzzzzzzzzzzzz()[.gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\r\r    x.f().g().h();\r    x.f().g()].hzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21278211 expected\:<...zzzzzzzzzzzzzzzzzz()[\n        .gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f()\n        .g()\n        ].hzzzzzzzzzzzzzzzzzz...> but was\:<...zzzzzzzzzzzzzzzzzz()[.gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f().g()].hzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21278211 expected\:<...zzzzzzzzzzzzzzzzzz()[\n        .gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f()\n        .g()\n        ].hzzzzzzzzzzzzzzzzzz...> but was\:<...zzzzzzzzzzzzzzzzzz()[.gzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz();\n\n    x.f().g().h();\n    x.f().g()].hzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21283374 expected\:<...___________________([\n        /*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(\n        /*paramName\=*/ false, thingy);\n\n    f(\n        arg1, /* which arg is this attached to? */\n        arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        /* paramName1 */ arg1,\n        /* paramName2 */ arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        arg1, /* paramName1 */\n        arg2, /* paramName2 */\n       ] arg3xxxxxxxxxxxxxxx...> but was\:<...___________________([/*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(/*paramName\=*/ false, thingy);\n\n    f(arg1, /* which arg is this attached to? */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(/* paramName1 */ arg1, /* paramName2 */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(arg1, /* paramName1 */ arg2, /* paramName2 */] arg3xxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21283374 expected\:<...___________________([\r        /*paramName\=*/ false, thingy);\r    assertThat__________________________________________________________(\r        /*paramName\=*/ false, thingy);\r\r    f(\r        arg1, /* which arg is this attached to? */\r        arg2,\r        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    f(\r        /* paramName1 */ arg1,\r        /* paramName2 */ arg2,\r        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    f(\r        arg1, /* paramName1 */\r        arg2, /* paramName2 */\r       ] arg3xxxxxxxxxxxxxxx...> but was\:<...___________________([/*paramName\=*/ false, thingy);\r    assertThat__________________________________________________________(/*paramName\=*/ false, thingy);\r\r    f(arg1, /* which arg is this attached to? */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    f(/* paramName1 */ arg1, /* paramName2 */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\r\r    f(arg1, /* paramName1 */ arg2, /* paramName2 */] arg3xxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21283374 expected\:<...___________________([\n        /*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(\n        /*paramName\=*/ false, thingy);\n\n    f(\n        arg1, /* which arg is this attached to? */\n        arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        /* paramName1 */ arg1,\n        /* paramName2 */ arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        arg1, /* paramName1 */\n        arg2, /* paramName2 */\n       ] arg3xxxxxxxxxxxxxxx...> but was\:<...___________________([/*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(/*paramName\=*/ false, thingy);\n\n    f(arg1, /* which arg is this attached to? */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(/* paramName1 */ arg1, /* paramName2 */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(arg1, /* paramName1 */ arg2, /* paramName2 */] arg3xxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21283374 expected\:<...___________________([\n        /*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(\n        /*paramName\=*/ false, thingy);\n\n    f(\n        arg1, /* which arg is this attached to? */\n        arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        /* paramName1 */ arg1,\n        /* paramName2 */ arg2,\n        arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(\n        arg1, /* paramName1 */\n        arg2, /* paramName2 */\n       ] arg3xxxxxxxxxxxxxxx...> but was\:<...___________________([/*paramName\=*/ false, thingy);\n    assertThat__________________________________________________________(/*paramName\=*/ false, thingy);\n\n    f(arg1, /* which arg is this attached to? */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(/* paramName1 */ arg1, /* paramName2 */ arg2, arg3xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx);\n\n    f(arg1, /* paramName1 */ arg2, /* paramName2 */] arg3xxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21305044 expected\:<...305044 {\n\n  class T<[\n          @Nullable X extends @Nullable Object,\n          @Nullable Y extends @Nullable Object,\n          @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<\n            ? super\n                @Crazy(\n                  key \= value,\n                  other \=\n                      @Crazier({\n                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n                      })\n                )\n                Object>\n        c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \=\n      com.foo.bar\n              .VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\n          \:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \=\n        () ->\n            System.err.println(\n                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \=\n        (someParam) ->\n           ] System.err.println(...> but was\:<...305044 {\n\n  class T<[@Nullable X extends @Nullable Object, @Nullable Y extends @Nullable Object, @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<? super @Crazy(key \= value, other \= @Crazier({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20})) Object> c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \= com.foo.bar.VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \= () -> System.err.println("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \= (someParam) ->] System.err.println(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21305044 expected\:<...305044 {\r\r  class T<[\r          @Nullable X extends @Nullable Object,\r          @Nullable Y extends @Nullable Object,\r          @Nullable Z extends @Nullable Object>\r      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\r    public T(@Nullable T this, List<@Nullable X> xs) {}\r\r    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\r\r    List<@Nullable ?> a;\r    List<@Nullable ? extends @Nullable Object> b;\r    List<@Nullable ? super @Nullable Object> c;\r\r    List<\r            ? super\r                @Crazy(\r                  key \= value,\r                  other \=\r                      @Crazier({\r                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\r                      })\r                )\r                Object>\r        c;\r  }\r\r  Function f \= com.foo.bar.Baz\:\:func;\r  Function g \= new Baz()\:\:func;\r  Function h \= Baz\:\:new;\r  Function i \=\r      com.foo.bar\r              .VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\r          \:\:new;\r\r  {\r    Function f \= () -> moderatelyLongResult;\r    Function f \=\r        () ->\r            breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult;\r    Function f \=\r        () ->\r            System.err.println(\r                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\r    Function f \=\r        (someParam) ->\r           ] System.err.println(...> but was\:<...305044 {\r\r  class T<[@Nullable X extends @Nullable Object, @Nullable Y extends @Nullable Object, @Nullable Z extends @Nullable Object>\r      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\r    public T(@Nullable T this, List<@Nullable X> xs) {}\r\r    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\r\r    List<@Nullable ?> a;\r    List<@Nullable ? extends @Nullable Object> b;\r    List<@Nullable ? super @Nullable Object> c;\r\r    List<? super @Crazy(key \= value, other \= @Crazier({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20})) Object> c;\r  }\r\r  Function f \= com.foo.bar.Baz\:\:func;\r  Function g \= new Baz()\:\:func;\r  Function h \= Baz\:\:new;\r  Function i \= com.foo.bar.VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\:\:new;\r\r  {\r    Function f \= () -> moderatelyLongResult;\r    Function f \=\r        () ->\r            breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult\r                + breakableResult;\r    Function f \= () -> System.err.println("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\r    Function f \= (someParam) ->] System.err.println(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21305044 expected\:<...305044 {\n\n  class T<[\n          @Nullable X extends @Nullable Object,\n          @Nullable Y extends @Nullable Object,\n          @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<\n            ? super\n                @Crazy(\n                  key \= value,\n                  other \=\n                      @Crazier({\n                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n                      })\n                )\n                Object>\n        c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \=\n      com.foo.bar\n              .VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\n          \:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \=\n        () ->\n            System.err.println(\n                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \=\n        (someParam) ->\n           ] System.err.println(...> but was\:<...305044 {\n\n  class T<[@Nullable X extends @Nullable Object, @Nullable Y extends @Nullable Object, @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<? super @Crazy(key \= value, other \= @Crazier({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20})) Object> c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \= com.foo.bar.VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \= () -> System.err.println("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \= (someParam) ->] System.err.println(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21305044 expected\:<...5044 {\n\n  class T<[\n          @Nullable X extends @Nullable Object,\n          @Nullable Y extends @Nullable Object,\n          @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<\n            ? super\n                @Crazy(\n                  key \= value,\n                  other \=\n                      @Crazier({\n                        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n                      })\n                )\n                Object>\n        c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \=\n      com.foo.bar\n              .VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\n          \:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \=\n        () ->\n            System.err.println(\n                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \=\n        (someParam) ->\n           ] System.err.println(...> but was\:<...5044 {\n\n  class T<[@Nullable X extends @Nullable Object, @Nullable Y extends @Nullable Object, @Nullable Z extends @Nullable Object>\n      extends Function<@Nullable X, @Nullable Y> implements Predicate<@Nullable Z> {\n    public T(@Nullable T this, List<@Nullable X> xs) {}\n\n    public T(@Nullable T B21305044.this, List<@Nullable X> xs) {}\n\n    List<@Nullable ?> a;\n    List<@Nullable ? extends @Nullable Object> b;\n    List<@Nullable ? super @Nullable Object> c;\n\n    List<? super @Crazy(key \= value, other \= @Crazier({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20})) Object> c;\n  }\n\n  Function f \= com.foo.bar.Baz\:\:func;\n  Function g \= new Baz()\:\:func;\n  Function h \= Baz\:\:new;\n  Function i \= com.foo.bar.VeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongBaz\:\:new;\n\n  {\n    Function f \= () -> moderatelyLongResult;\n    Function f \=\n        () ->\n            breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult\n                + breakableResult;\n    Function f \= () -> System.err.println("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");\n    Function f \= (someParam) ->] System.err.println(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21331232 expected\:<...F, S> S instantiate([\n      Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(\n      @Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(\n      ]T object, Funnel<? s...> but was\:<...F, S> S instantiate([Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(@Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(]T object, Funnel<? s...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21331232 expected\:<...F, S> S instantiate([\r      Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\r\r  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(\r      @Nullable Iterable<T> target) {\r    return IterableSubject.create(getFailureStrategy(), target);\r  }\r\r  <T> boolean mightContain(\r      ]T object, Funnel<? s...> but was\:<...F, S> S instantiate([Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\r\r  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(@Nullable Iterable<T> target) {\r    return IterableSubject.create(getFailureStrategy(), target);\r  }\r\r  <T> boolean mightContain(]T object, Funnel<? s...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21331232 expected\:<...F, S> S instantiate([\n      Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(\n      @Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(\n      ]T object, Funnel<? s...> but was\:<...F, S> S instantiate([Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(@Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(]T object, Funnel<? s...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21331232 expected\:<...F, S> S instantiate([\n      Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(\n      @Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(\n      ]T object, Funnel<? s...> but was\:<...F, S> S instantiate([Class<?> wrapperType, Type t, FailureStrategy fs, SF factory, Iterable<T> data) {}\n\n  public <T, C extends Iterable<T>> IterableSubject<? extends IterableSubject<?, T, C>, T, C> that(@Nullable Iterable<T> target) {\n    return IterableSubject.create(getFailureStrategy(), target);\n  }\n\n  <T> boolean mightContain(]T object, Funnel<? s...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21465217 expected\:<...treamWriter writer \=[\n            new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=\n       ] env.getFiler().crea...> but was\:<...treamWriter writer \=[ new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=] env.getFiler().crea...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21465217 expected\:<...treamWriter writer \=[\r            new OutputStreamWriter(bout, UTF_8___________________________)) {}\r\r    try (Writer sourceWriter \=\r       ] env.getFiler().crea...> but was\:<...treamWriter writer \=[ new OutputStreamWriter(bout, UTF_8___________________________)) {}\r\r    try (Writer sourceWriter \=] env.getFiler().crea...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21465217 expected\:<...treamWriter writer \=[\n            new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=\n       ] env.getFiler().crea...> but was\:<...treamWriter writer \=[ new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=] env.getFiler().crea...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21465217 expected\:<...treamWriter writer \=[\n            new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=\n       ] env.getFiler().crea...> but was\:<...treamWriter writer \=[ new OutputStreamWriter(bout, UTF_8___________________________)) {}\n\n    try (Writer sourceWriter \=] env.getFiler().crea...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21608216 expected\:<...fied",\n  modules \= {[\n    BackendsModule.class,\n    CommonBackendsModule.class,\n    ChromeSuggestionsPlugin.ChromeSuggestionsModule.class\n  }\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\n    27, 28, 29, 30\n  }\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class\n})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class,\n  JslayoutMeta.class\n]})\nclass B21608216 {...> but was\:<...fied",\n  modules \= {[BackendsModule.class, CommonBackendsModule.class, ChromeSuggestionsPlugin.ChromeSuggestionsModule.class}\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class}\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class]})\nclass B21608216 {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21608216 expected\:<...fied",\r  modules \= {[\r    BackendsModule.class,\r    CommonBackendsModule.class,\r    ChromeSuggestionsPlugin.ChromeSuggestionsModule.class\r  }\r)\r@Module(library \= true, complete \= false)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {\r    ClassInfoTracker.class,\r    JslayoutMetaProto.class,\r    JslayoutMetaProto.class,\r    JslayoutMeta.class\r  }\r)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {\r    ClassInfoTracker.class,\r    JslayoutMetaProto.class,\r    JslayoutMetaProto.class,\r    JslayoutMeta.class,\r    JslayoutMeta.class\r  }\r)\r@Module(\r  injects \= {One.class, Two.class},\r  includes \= {Three.class, Four.class}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {1, 2, 3}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {\r    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26\r  }\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {\r    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\r    27, 28, 29, 30\r  }\r)\r@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\r@Module({\r  ClassInfoTracker.class,\r  JslayoutMetaProto.class,\r  JslayoutMetaProto.class,\r  JslayoutMeta.class\r})\r@Module({\r  ClassInfoTracker.class,\r  JslayoutMetaProto.class,\r  JslayoutMetaProto.class,\r  JslayoutMeta.class,\r  JslayoutMeta.class\r]})\rclass B21608216 {...> but was\:<...fied",\r  modules \= {[BackendsModule.class, CommonBackendsModule.class, ChromeSuggestionsPlugin.ChromeSuggestionsModule.class}\r)\r@Module(library \= true, complete \= false)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class}\r)\r@Module(\r  injects \= {One.class, Two.class},\r  includes \= {Three.class, Four.class}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {1, 2, 3}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26}\r)\r@Module(\r  library \= true,\r  complete \= false,\r  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}\r)\r@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\r@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class})\r@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class]})\rclass B21608216 {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21608216 expected\:<...fied",\n  modules \= {[\n    BackendsModule.class,\n    CommonBackendsModule.class,\n    ChromeSuggestionsPlugin.ChromeSuggestionsModule.class\n  }\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\n    27, 28, 29, 30\n  }\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class\n})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class,\n  JslayoutMeta.class\n]})\nclass B21608216 {...> but was\:<...fied",\n  modules \= {[BackendsModule.class, CommonBackendsModule.class, ChromeSuggestionsPlugin.ChromeSuggestionsModule.class}\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class}\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class]})\nclass B21608216 {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21608216 expected\:<...ied",\n  modules \= {[\n    BackendsModule.class,\n    CommonBackendsModule.class,\n    ChromeSuggestionsPlugin.ChromeSuggestionsModule.class\n  }\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {\n    ClassInfoTracker.class,\n    JslayoutMetaProto.class,\n    JslayoutMetaProto.class,\n    JslayoutMeta.class,\n    JslayoutMeta.class\n  }\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26\n  }\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\n    27, 28, 29, 30\n  }\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class\n})\n@Module({\n  ClassInfoTracker.class,\n  JslayoutMetaProto.class,\n  JslayoutMetaProto.class,\n  JslayoutMeta.class,\n  JslayoutMeta.class\n]})\nclass B21608216 ...> but was\:<...ied",\n  modules \= {[BackendsModule.class, CommonBackendsModule.class, ChromeSuggestionsPlugin.ChromeSuggestionsModule.class}\n)\n@Module(library \= true, complete \= false)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  injects \= {ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class}\n)\n@Module(\n  injects \= {One.class, Two.class},\n  includes \= {Three.class, Four.class}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26}\n)\n@Module(\n  library \= true,\n  complete \= false,\n  numbers \= {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}\n)\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class})\n@Module({ClassInfoTracker.class, JslayoutMetaProto.class, JslayoutMetaProto.class, JslayoutMeta.class, JslayoutMeta.class]})\nclass B21608216 ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21954779 expected\:<...eApi.findOrCreateVm([\n            VM_METADATA,\n            Optional.<InstanceProto>absent(),\n            AssignReservedIp.YES,\n            AttachDataDisk.YES))\n        .thenReturn(OPERATION);\n\n    fail(\n        String.format(\n            "       Experiment name %s is used multiple times in %s",\n            expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(\n                    application.getString(\n                        R.string.working_on_project_format,\n                        Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext()\n        .getErrorReporter()\n        .log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(\n        new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<\n            ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})\n        ].then();\n  }\n}\n> but was\:<...eApi.findOrCreateVm([VM_METADATA, Optional.<InstanceProto>absent(), AssignReservedIp.YES, AttachDataDisk.YES)).thenReturn(OPERATION);\n\n    fail(String.format("       Experiment name %s is used multiple times in %s", expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(application.getString(R.string.working_on_project_format, Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext().getErrorReporter().log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})].then();\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21954779 expected\:<...eApi.findOrCreateVm([\r            VM_METADATA,\r            Optional.<InstanceProto>absent(),\r            AssignReservedIp.YES,\r            AttachDataDisk.YES))\r        .thenReturn(OPERATION);\r\r    fail(\r        String.format(\r            "       Experiment name %s is used multiple times in %s",\r            expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\r\r    new Handler(Looper.getMainLooper())\r        .post(\r            new Runnable() {\r              @Override\r              public void run() {\r                utils.showShortToast(\r                    application.getString(\r                        R.string.working_on_project_format,\r                        Utils.getProjectDisplayName(selectedProject)));\r              }\r            });\r\r    (new Handler())\r        .post(\r            new Runnable() {\r              @Override\r              public void run() {\r                showErrorAndSetDone(error);\r              }\r            });\r\r    getContext()\r        .getErrorReporter()\r        .log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\r\r    bind(\r        new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\r\r    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\r    bind(new Key<\r            ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})\r        ].then();\r  }\r}\r> but was\:<...eApi.findOrCreateVm([VM_METADATA, Optional.<InstanceProto>absent(), AssignReservedIp.YES, AttachDataDisk.YES)).thenReturn(OPERATION);\r\r    fail(String.format("       Experiment name %s is used multiple times in %s", expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\r\r    new Handler(Looper.getMainLooper())\r        .post(\r            new Runnable() {\r              @Override\r              public void run() {\r                utils.showShortToast(application.getString(R.string.working_on_project_format, Utils.getProjectDisplayName(selectedProject)));\r              }\r            });\r\r    (new Handler())\r        .post(\r            new Runnable() {\r              @Override\r              public void run() {\r                showErrorAndSetDone(error);\r              }\r            });\r\r    getContext().getErrorReporter().log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\r\r    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\r\r    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\r    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})].then();\r  }\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21954779 expected\:<...eApi.findOrCreateVm([\n            VM_METADATA,\n            Optional.<InstanceProto>absent(),\n            AssignReservedIp.YES,\n            AttachDataDisk.YES))\n        .thenReturn(OPERATION);\n\n    fail(\n        String.format(\n            "       Experiment name %s is used multiple times in %s",\n            expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(\n                    application.getString(\n                        R.string.working_on_project_format,\n                        Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext()\n        .getErrorReporter()\n        .log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(\n        new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<\n            ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})\n        ].then();\n  }\n}\n> but was\:<...eApi.findOrCreateVm([VM_METADATA, Optional.<InstanceProto>absent(), AssignReservedIp.YES, AttachDataDisk.YES)).thenReturn(OPERATION);\n\n    fail(String.format("       Experiment name %s is used multiple times in %s", expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(application.getString(R.string.working_on_project_format, Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext().getErrorReporter().log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})].then();\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B21954779 expected\:<...eApi.findOrCreateVm([\n            VM_METADATA,\n            Optional.<InstanceProto>absent(),\n            AssignReservedIp.YES,\n            AttachDataDisk.YES))\n        .thenReturn(OPERATION);\n\n    fail(\n        String.format(\n            "       Experiment name %s is used multiple times in %s",\n            expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(\n                    application.getString(\n                        R.string.working_on_project_format,\n                        Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext()\n        .getErrorReporter()\n        .log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(\n        new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<\n            ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})\n        ].then();\n  }\n}\n> but was\:<...eApi.findOrCreateVm([VM_METADATA, Optional.<InstanceProto>absent(), AssignReservedIp.YES, AttachDataDisk.YES)).thenReturn(OPERATION);\n\n    fail(String.format("       Experiment name %s is used multiple times in %s", expName, envName, zzzzzzzzzzzz, zzzzzzzzzzzz));\n\n    new Handler(Looper.getMainLooper())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                utils.showShortToast(application.getString(R.string.working_on_project_format, Utils.getProjectDisplayName(selectedProject)));\n              }\n            });\n\n    (new Handler())\n        .post(\n            new Runnable() {\n              @Override\n              public void run() {\n                showErrorAndSetDone(error);\n              }\n            });\n\n    getContext().getErrorReporter().log(new RuntimeException("Called layout with a non-zero segment index\: " + segmentIndex));\n\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponse>>() {});\n\n    // this isn't a feature; we'd prefer to keep `new Key...` as one unit\n    bind(new Key<ServiceMethodRunner<SyncReferenceNumberRequest, SyncReferenceNumberResponses>>() {})].then();\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22166687 expected\:<...static class Wrapper[\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n              ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<\n              ]ExtensionWrapper<Foo...> but was\:<...static class Wrapper[ extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<]ExtensionWrapper<Foo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22166687 expected\:<...static class Wrapper[\r      extends CrossComponentSetBindingsWrapper<\r          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\r      implements CrossComponentSetBindingsWrapper<\r          ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\r    void m() {}\r  }\r\r  public static class Wrapper\r      extends CrossComponentSetBindingsWrapper<\r          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\r      implements CrossComponentSetBindingsWrapper<\r              ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\r          CrossComponentSetBindingsWrapper<\r              ]ExtensionWrapper<Foo...> but was\:<...static class Wrapper[ extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\r      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\r    void m() {}\r  }\r\r  public static class Wrapper extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\r      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\r          CrossComponentSetBindingsWrapper<]ExtensionWrapper<Foo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22166687 expected\:<...static class Wrapper[\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n              ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<\n              ]ExtensionWrapper<Foo...> but was\:<...static class Wrapper[ extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<]ExtensionWrapper<Foo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22166687 expected\:<...static class Wrapper[\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper\n      extends CrossComponentSetBindingsWrapper<\n          ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<\n              ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<\n              ]ExtensionWrapper<Foo...> but was\:<...static class Wrapper[ extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>> {\n    void m() {}\n  }\n\n  public static class Wrapper extends CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>\n      implements CrossComponentSetBindingsWrapper<ExtensionWrapper<FootprintsGenericSearchResponseExtension>>,\n          CrossComponentSetBindingsWrapper<]ExtensionWrapper<Foo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22169269 expected\:<...assNotFoundException[\n        | NoSuchMethodException\n        | InvocationTargetException\n       ] | IllegalAccessExce...> but was\:<...assNotFoundException[ | NoSuchMethodException | InvocationTargetException] | IllegalAccessExce...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22169269 expected\:<...assNotFoundException[\r        | NoSuchMethodException\r        | InvocationTargetException\r       ] | IllegalAccessExce...> but was\:<...assNotFoundException[ | NoSuchMethodException | InvocationTargetException] | IllegalAccessExce...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22169269 expected\:<...assNotFoundException[\n        | NoSuchMethodException\n        | InvocationTargetException\n       ] | IllegalAccessExce...> but was\:<...assNotFoundException[ | NoSuchMethodException | InvocationTargetException] | IllegalAccessExce...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22169269 expected\:<...assNotFoundException[\n        | NoSuchMethodException\n        | InvocationTargetException\n       ] | IllegalAccessExce...> but was\:<...assNotFoundException[ | NoSuchMethodException | InvocationTargetException] | IllegalAccessExce...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22488373 expected\:<...d().equals(DECLARED)[\n           ] && \!((DeclaredType)...> but was\:<...d().equals(DECLARED)[] && \!((DeclaredType)...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22488373 expected\:<...d().equals(DECLARED)[\r           ] && \!((DeclaredType)...> but was\:<...d().equals(DECLARED)[] && \!((DeclaredType)...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22488373 expected\:<...d().equals(DECLARED)[\n           ] && \!((DeclaredType)...> but was\:<...d().equals(DECLARED)[] && \!((DeclaredType)...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22488373 expected\:<...d().equals(DECLARED)[\n           ] && \!((DeclaredType)...> but was\:<...d().equals(DECLARED)[] && \!((DeclaredType)...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22610221 expected\:<...ct>, Object> entry \:[\n       ] FOO.bar().bazs().<O...> but was\:<...ct>, Object> entry \:[] FOO.bar().bazs().<O...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22610221 expected\:<...ct>, Object> entry \:[\r       ] FOO.bar().bazs().<O...> but was\:<...ct>, Object> entry \:[] FOO.bar().bazs().<O...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22610221 expected\:<...ct>, Object> entry \:[\n       ] FOO.bar().bazs().<O...> but was\:<...ct>, Object> entry \:[] FOO.bar().bazs().<O...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22610221 expected\:<...ct>, Object> entry \:[\n       ] FOO.bar().bazs().<O...> but was\:<...ct>, Object> entry \:[] FOO.bar().bazs().<O...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22848286 expected\:<...8286 {\n\n  @FxxxSxxx([\n    xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx",\n    xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx."\n  )\n  int x;\n\n  @FxxxGxxxxxxxx(\n    xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"\n  ])\n  int y;\n}\n> but was\:<...8286 {\n\n  @FxxxSxxx([xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx", xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx.")\n  int x;\n\n  @FxxxGxxxxxxxx(xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"])\n  int y;\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22848286 expected\:<...8286 {\r\r  @FxxxSxxx([\r    xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx",\r    xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx."\r  )\r  int x;\r\r  @FxxxGxxxxxxxx(\r    xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"\r  ])\r  int y;\r}\r> but was\:<...8286 {\r\r  @FxxxSxxx([xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx", xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx.")\r  int x;\r\r  @FxxxGxxxxxxxx(xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"])\r  int y;\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22848286 expected\:<...8286 {\n\n  @FxxxSxxx([\n    xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx",\n    xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx."\n  )\n  int x;\n\n  @FxxxGxxxxxxxx(\n    xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"\n  ])\n  int y;\n}\n> but was\:<...8286 {\n\n  @FxxxSxxx([xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx", xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx.")\n  int x;\n\n  @FxxxGxxxxxxxx(xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"])\n  int y;\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22848286 expected\:<...86 {\n\n  @FxxxSxxx([\n    xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx",\n    xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx."\n  )\n  int x;\n\n  @FxxxGxxxxxxxx(\n    xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"\n  ])\n  int y;\n}\n> but was\:<...86 {\n\n  @FxxxSxxx([xxxx \= "xxxxxx_xxxxxxx_xxxxxxxxx_xxxx", xxxx \= "Xxxxx xxxx xx xxxxxx xxxxxxx xxxxxxxxx.")\n  int x;\n\n  @FxxxGxxxxxxxx(xxxx \= "Xxx xxxxxx xxxxxxxxy xxx xxx xxxxxxxxx, x.x. xxx xxxxxx xxxxxxxx xxxxxxxxy"])\n  int y;\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22873322 expected\:<...2873322 {\n  {\n    f([\n        param ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(\n                param));\n    f(\n        (param1, param2) ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f(\n        (int param) ->\n           ] veryLoooooooooooooo...> but was\:<...2873322 {\n  {\n    f([param -> veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param));\n    f((param1, param2) -> veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f((int param) ->] veryLoooooooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22873322 expected\:<...2873322 {\r  {\r    f([\r        param ->\r            veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(\r                param));\r    f(\r        (param1, param2) ->\r            veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\r    f(\r        (int param) ->\r           ] veryLoooooooooooooo...> but was\:<...2873322 {\r  {\r    f([param -> veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param));\r    f((param1, param2) -> veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\r    f((int param) ->] veryLoooooooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22873322 expected\:<...2873322 {\n  {\n    f([\n        param ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(\n                param));\n    f(\n        (param1, param2) ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f(\n        (int param) ->\n           ] veryLoooooooooooooo...> but was\:<...2873322 {\n  {\n    f([param -> veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param));\n    f((param1, param2) -> veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f((int param) ->] veryLoooooooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B22873322 expected\:<...73322 {\n  {\n    f([\n        param ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(\n                param));\n    f(\n        (param1, param2) ->\n            veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f(\n        (int param) ->\n           ] veryLoooooooooooooo...> but was\:<...73322 {\n  {\n    f([param -> veryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param));\n    f((param1, param2) -> veryLooooooooooooooooooooooooooooooooooooooooooooooooongExpr(param1, param2));\n    f((int param) ->] veryLoooooooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23514513 expected\:<...ss Test {\n  {\n    f([\n        rrr.kkkkk.uuuuuuuu,\n        rrr.iiiiii.ggggggggggggggggg,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...ss Test {\n  {\n    f([rrr.kkkkk.uuuuuuuu, rrr.iiiiii.ggggggggggggggggg,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23514513 expected\:<...ss Test {\r  {\r    f([\r        rrr.kkkkk.uuuuuuuu,\r        rrr.iiiiii.ggggggggggggggggg,\r       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...ss Test {\r  {\r    f([rrr.kkkkk.uuuuuuuu, rrr.iiiiii.ggggggggggggggggg,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23514513 expected\:<...ss Test {\n  {\n    f([\n        rrr.kkkkk.uuuuuuuu,\n        rrr.iiiiii.ggggggggggggggggg,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...ss Test {\n  {\n    f([rrr.kkkkk.uuuuuuuu, rrr.iiiiii.ggggggggggggggggg,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23514513 expected\:<... Test {\n  {\n    f([\n        rrr.kkkkk.uuuuuuuu,\n        rrr.iiiiii.ggggggggggggggggg,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<... Test {\n  {\n    f([rrr.kkkkk.uuuuuuuu, rrr.iiiiii.ggggggggggggggggg,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23708487 expected\:<...          .setScope([\n                com.google.security.acl.proto2api.ACL.Scope.newBuilder()\n                    ].setMdbUser(BorgTask...> but was\:<...          .setScope([com.google.security.acl.proto2api.ACL.Scope.newBuilder()].setMdbUser(BorgTask...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23708487 expected\:<...          .setScope([\r                com.google.security.acl.proto2api.ACL.Scope.newBuilder()\r                    ].setMdbUser(BorgTask...> but was\:<...          .setScope([com.google.security.acl.proto2api.ACL.Scope.newBuilder()].setMdbUser(BorgTask...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23708487 expected\:<...          .setScope([\n                com.google.security.acl.proto2api.ACL.Scope.newBuilder()\n                    ].setMdbUser(BorgTask...> but was\:<...          .setScope([com.google.security.acl.proto2api.ACL.Scope.newBuilder()].setMdbUser(BorgTask...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23708487 expected\:<...          .setScope([\n                com.google.security.acl.proto2api.ACL.Scope.newBuilder()\n                    ].setMdbUser(BorgTask...> but was\:<...          .setScope([com.google.security.acl.proto2api.ACL.Scope.newBuilder()].setMdbUser(BorgTask...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23749160 expected\:<...maryModuleListFiller[\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt())\n        .anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(\n            anyInt(), anyInt(), anyInt()))\n        ].then();\n\n    final ...> but was\:<...maryModuleListFiller[.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt()).anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(anyInt(), anyInt(), anyInt()))].then();\n\n    final ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23749160 expected\:<...maryModuleListFiller[\r        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\r            anyInt(), anyInt(), anyInt());\r\r    mockDailySummaryModuleListFiller\r        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\r            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\r            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\r                anyInt(), anyInt(), anyInt());\r\r    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\r            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\r            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\r                anyInt(), anyInt(), anyInt())\r        .bar();\r\r    // `.build`... and `anotherThing`... are technically at different syntactic\r    // levels, but the indentation required to express that starts to get out\r    // of hand\r    MockDailySummaryModuleListFiller\r        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\r            anyInt(), anyInt(), anyInt())\r        .anotherThing();\r\r    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(\r            anyInt(), anyInt(), anyInt()))\r        ].then();\r\r    final ...> but was\:<...maryModuleListFiller[.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\r\r    mockDailySummaryModuleListFiller\r        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\r            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\r\r    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\r            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt())\r        .bar();\r\r    // `.build`... and `anotherThing`... are technically at different syntactic\r    // levels, but the indentation required to express that starts to get out\r    // of hand\r    MockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt()).anotherThing();\r\r    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(anyInt(), anyInt(), anyInt()))].then();\r\r    final ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23749160 expected\:<...maryModuleListFiller[\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt())\n        .anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(\n            anyInt(), anyInt(), anyInt()))\n        ].then();\n\n    final ...> but was\:<...maryModuleListFiller[.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt()).anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(anyInt(), anyInt(), anyInt()))].then();\n\n    final ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23749160 expected\:<...maryModuleListFiller[\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX,\n            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n                anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller\n        .buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(\n            anyInt(), anyInt(), anyInt())\n        .anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(\n            anyInt(), anyInt(), anyInt()))\n        ].then();\n\n    fina...> but was\:<...maryModuleListFiller[.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    mockDailySummaryModuleListFiller\n        .<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt());\n\n    foo.<XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY>\n            buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt())\n        .bar();\n\n    // `.build`... and `anotherThing`... are technically at different syntactic\n    // levels, but the indentation required to express that starts to get out\n    // of hand\n    MockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDayxxxxxxxxxxx(anyInt(), anyInt(), anyInt()).anotherThing();\n\n    when(mockDailySummaryModuleListFiller.buildDailySummaryModulesWithHeadersOnlyAndOneExpandedDay(anyInt(), anyInt(), anyInt()))].then();\n\n    fina...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23804934 expected\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[\n          Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(\n      zzz z,\n      @Zzzzzzzz @Zzzzzzzzzz\n          ZzzzzzzzzZzzz<Zzzzzz>\n              zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ)\n          zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ)\n          zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz\n         ] zzzzzzzzzzzzzzzzzzz...> but was\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[ Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(zzz z, @Zzzzzzzz @Zzzzzzzzzz ZzzzzzzzzZzzz<Zzzzzz> zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ) zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ) zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23804934 expected\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[\r          Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\r    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\r    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\r    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\r    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\r  }\r\r  zzzz z(\r      zzz z,\r      @Zzzzzzzz @Zzzzzzzzzz\r          ZzzzzzzzzZzzz<Zzzzzz>\r              zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\r\r  @ZzzZzzzZzzzzzzzzzz\r  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\r  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\r      @Zzz @Zzz zzzz zzzzZzzzZz,\r      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ)\r          zzzzzzz zzzzzzZzzZzzZzzzzzz,\r      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ)\r          zzzzzzz zzzzzZzzZzzzzzzzzzz,\r      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\r\r  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\r      final zzzzzzzzzzzzzz\r         ] zzzzzzzzzzzzzzzzzzz...> but was\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[ Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\r    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\r    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\r    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\r    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\r  }\r\r  zzzz z(zzz z, @Zzzzzzzz @Zzzzzzzzzz ZzzzzzzzzZzzz<Zzzzzz> zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\r\r  @ZzzZzzzZzzzzzzzzzz\r  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\r  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\r      @Zzz @Zzz zzzz zzzzZzzzZz,\r      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ) zzzzzzz zzzzzzZzzZzzZzzzzzz,\r      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ) zzzzzzz zzzzzZzzZzzzzzzzzzz,\r      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\r\r  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\r      final zzzzzzzzzzzzzz] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23804934 expected\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[\n          Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(\n      zzz z,\n      @Zzzzzzzz @Zzzzzzzzzz\n          ZzzzzzzzzZzzz<Zzzzzz>\n              zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ)\n          zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ)\n          zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz\n         ] zzzzzzzzzzzzzzzzzzz...> but was\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[ Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(zzz z, @Zzzzzzzz @Zzzzzzzzzz ZzzzzzzzzZzzz<Zzzzzz> zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ) zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ) zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B23804934 expected\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[\n          Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(\n      zzz z,\n      @Zzzzzzzz @Zzzzzzzzzz\n          ZzzzzzzzzZzzz<Zzzzzz>\n              zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ)\n          zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ)\n          zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz\n         ] zzzzzzzzzzzzzzzzzzz...> but was\:<...ZZZ_ZZZZ_ZZZZZZZZZZ)[ Zzzzzzzz<Zzzzzzz> zzzzzZzzzZzzzzzZzzzZzzzzzzzzz) {\n    zzzz.zzzzzzzzZzzzzzZzzzzZzzzzzzz \= zzzzzzzzZzzzzzZzzzzZzzzzzzz;\n    zzzz.zzzzzzZzzzZzzzZzzzzzzz \= zzzzzzZzzzZzzzZzzzzzzz;\n    zzzz.zzzzzZzzzzzz \= zzzzzZzzzzzz;\n    zzzz.zzzzzZzzzZzzzzzZzzzZzzzzzzzzz \= zzzzzZzzzZzzzzzZzzzZzzzzzzzzz;\n  }\n\n  zzzz z(zzz z, @Zzzzzzzz @Zzzzzzzzzz ZzzzzzzzzZzzz<Zzzzzz> zzzzZzzzZzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz) {}\n\n  @ZzzZzzzZzzzzzzzzzz\n  @Zzzzzzzz(zzzzzzzzz \= Zzzzzzzzz.ZZ)\n  ZzzzzzzzzzZzzzzz<ZzzZzzzzzzzzzzZzzzzzzzz> zzzzzzzZzzzzzzzzzz(\n      @Zzz @Zzz zzzz zzzzZzzzZz,\n      @Zzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZZ_ZZZ_ZZZ_ZZZZZZZ) zzzzzzz zzzzzzZzzZzzZzzzzzz,\n      @Zzzzz @ZzzzzzzzzzZzzzz(zzzz \= ZzzzzZzzzzzZzzzz.ZZZZZ_ZZZ_ZZZZZZZZZZZ) zzzzzzz zzzzzZzzZzzzzzzzzzz,\n      @Zzzzz ZzzzzZzzz zzzzzZzzz) {}\n\n  void fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n      final zzzzzzzzzzzzzz] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24202287 expected\:<...tentSource.values()[[\n            ]mIntent.get().getInt...> but was\:<...tentSource.values()[[]mIntent.get().getInt...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24202287 expected\:<...tentSource.values()[[\r            ]mIntent.get().getInt...> but was\:<...tentSource.values()[[]mIntent.get().getInt...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24202287 expected\:<...tentSource.values()[[\n            ]mIntent.get().getInt...> but was\:<...tentSource.values()[[]mIntent.get().getInt...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24202287 expected\:<...tentSource.values()[[\n            ]mIntent.get().getInt...> but was\:<...tentSource.values()[[]mIntent.get().getInt...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24702438 expected\:<...Nullable @Deprecated[\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n             ] veryVeryLoooooooooo...> but was\:<...Nullable @Deprecated[ ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String>] veryVeryLoooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24702438 expected\:<...Nullable @Deprecated[\r          ImmutableList<String>\r              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated\r          ImmutableList<String>\r              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated\r          ImmutableList<String>\r              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      int c) {}\r\r  void g(\r      @Nullable @Deprecated\r          ImmutableList<String>\r              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated\r          ImmutableList<String>\r             ] veryVeryLoooooooooo...> but was\:<...Nullable @Deprecated[ ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      int c) {}\r\r  void g(\r      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\r      @Nullable @Deprecated ImmutableList<String>] veryVeryLoooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24702438 expected\:<...Nullable @Deprecated[\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n             ] veryVeryLoooooooooo...> but was\:<...Nullable @Deprecated[ ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String>] veryVeryLoooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24702438 expected\:<...Nullable @Deprecated[\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated\n          ImmutableList<String>\n              veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated\n          ImmutableList<String>\n             ] veryVeryLoooooooooo...> but was\:<...Nullable @Deprecated[ ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      int c) {}\n\n  void g(\n      @Nullable @Deprecated ImmutableList<String> veryVeryLooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong,\n      @Nullable @Deprecated ImmutableList<String>] veryVeryLoooooooooo...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24862959 expected\:<...X_XXXX_XXX_XXXXXXXX([\n      ]"                   ...> but was\:<...X_XXXX_XXX_XXXXXXXX([]"                   ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24862959 expected\:<...X_XXXX_XXX_XXXXXXXX([\r      ]"                   ...> but was\:<...X_XXXX_XXX_XXXXXXXX([]"                   ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24862959 expected\:<...X_XXXX_XXX_XXXXXXXX([\n      ]"                   ...> but was\:<...X_XXXX_XXX_XXXXXXXX([]"                   ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24862959 expected\:<...X_XXXX_XXX_XXXXXXXX([\n      ]"                   ...> but was\:<...X_XXXX_XXX_XXXXXXXX([]"                   ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24909927 expected\:<...     .xxxXxxxxxXxxx([\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(-42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(\n                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxx(42)\n                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx\n                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(-42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(\n                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxx(42)\n                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            ].xxxxx())\n          ...> but was\:<...     .xxxXxxxxxXxxx([XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42)].xxxxx())\n          ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24909927 expected\:<...     .xxxXxxxxxXxxx([\r                                                                XxxxxxXxxx\r                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                            .xxxXxxxXxxxxx(\r                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxx(\r                                                                                        XxxxXxxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxx(\r                                                                                                -42)\r                                                                                            .xxxXxxx(\r                                                                                                XxxxXxxx\r                                                                                                    .XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxx(\r                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxx(42)\r                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                    .xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxxXxxxXx(42)\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                    .xxxXxxxxxXxxx(\r                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxXxxx(\r                                                                XxxxxxXxxx\r                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                            .xxxXxxxXxxxxx(\r                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxx(\r                                                                                        XxxxXxxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxx(\r                                                                                                -42)\r                                                                                            .xxxXxxx(\r                                                                                                XxxxXxxx\r                                                                                                    .XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxx(\r                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxx(42)\r                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                    .xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxxXxxxXx(42)\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxxx())\r                    .xxxXxxxxxx(\r                        XxxxxxxXxxx.xxxXxxxxxx()\r                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                            .xxxXxxxxxXxxx(\r                                XxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxXxxx(\r                                        XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                    .xxxXxxxXxxxxx(\r                                        XxxxXxxxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxxxXxxxx(\r                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxxXxxxxxx(\r                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxx(\r                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                    .xxxxx())\r                                                            .xxxXxxxxx(\r                                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxx(-42)\r                                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxxx(\r                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxx(42)\r                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxxxxXxxxXx(42)\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxxx())\r                    .xxxXxxxxxx(\r                        XxxxxxxXxxx.xxxXxxxxxx()\r                            .xxxXxxxxxxx(Xxxxxxxx.XX)\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                            .xxxXxxxxxXxxx(\r                                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx\r                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                    .xxxXxxxXxxxxx(\r                                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxXxxxx(\r                                                                                XxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxXxxxxx(\r                                                                                                XxxxXxxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxxx(\r                                                                                                        -42)\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxXxxx\r                                                                                                            .XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxx(\r                                                                                XxxxXxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxx(42)\r                                                                                    .xxxXxxx(\r                                                                                        XxxxXxxx\r                                                                                            .XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                            .xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxxXxxxXx(42)\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                            .xxxXxxxxxXxxx(\r                                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx\r                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                    .xxxXxxxXxxxxx(\r                                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxXxxxx(\r                                                                                XxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxXxxxxx(\r                                                                                                XxxxXxxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxxx(\r                                                                                                        -42)\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxXxxx\r                                                                                                            .XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxx(\r                                                                                XxxxXxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxx(42)\r                                                                                    .xxxXxxx(\r                                                                                        XxxxXxxx\r                                                                                            .XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                            .xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxxXxxxXx(42)\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                    .xxxXxxxxxXxxx(\r                                        XxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxXxxx(\r                                                XxxxxxXxxx\r                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                            .xxxXxxxXxxxxx(\r                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxxxXxxxx(\r                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                            .xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxx(\r                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxx(-42)\r                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxx(\r                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxx(42)\r                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxxxxXxxxXx(42)\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                            .xxxXxxxxxx(\r                                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxXxxx(\r                                                                                XxxxxxXxxx\r                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                            .xxxXxxxXxxxxx(\r                                                                                XxxxXxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                                        XxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                                            .xxxXxxxxxx()\r                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxXxxxxx(\r                                                                                                        XxxxXxxxxxxx\r                                                                                                            .xxxXxxxxxx()\r                                                                                                            .xxxXxxxx(\r                                                                                                                -42)\r                                                                                                            .xxxXxxx(\r                                                                                                                XxxxXxxx\r                                                                                                                    .XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxxxx(\r                                                                                        XxxxXxxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxx(\r                                                                                                42)\r                                                                                            .xxxXxxx(\r                                                                                                XxxxXxxx\r                                                                                                    .XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxxXxxxXx(\r                                                                                        42)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                            .xxxXxxxxxx(\r                                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxXxxx(\r                                                                                XxxxxxXxxx\r                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                            .xxxXxxxXxxxxx(\r                                                                                XxxxXxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                                        XxxxXxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                                    .xxxXxxxxxx()\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                                                            .xxxXxxxxxx()\r                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxXxxxxx(\r                                                                                                        XxxxXxxxxxxx\r                                                                                                            .xxxXxxxxxx()\r                                                                                                            .xxxXxxxx(\r                                                                                                                -42)\r                                                                                                            .xxxXxxx(\r                                                                                                                XxxxXxxx\r                                                                                                                    .XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxxxx(\r                                                                                        XxxxXxxxxxxx\r                                                                                            .xxxXxxxxxx()\r                                                                                            .xxxXxxxx(\r                                                                                                42)\r                                                                                            .xxxXxxx(\r                                                                                                XxxxXxxx\r                                                                                                    .XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxxXxxxXx(\r                                                                                        42)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                            .xxxXxxxxxXxxx(\r                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxXxxx(\r                                                        XxxxxxXxxx\r                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                    .xxxXxxxXxxxxx(\r                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxXxxxx(\r                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                            .xxxXxxxxxx()\r                                                                            .xxxXxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxx(\r                                                                                XxxxXxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxx(-42)\r                                                                                    .xxxXxxx(\r                                                                                        XxxxXxxx\r                                                                                            .XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxx(\r                                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxx(42)\r                                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxxXxxxXx(42)\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                            .xxxXxxxxxXxxx(\r                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxXxxx(\r                                                        XxxxxxXxxx\r                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                    .xxxXxxxXxxxxx(\r                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxXxxxx(\r                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx\r                                                                            .xxxXxxxxxx()\r                                                                            .xxxXxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxx(\r                                                                                XxxxXxxxxxxx\r                                                                                    .xxxXxxxxxx()\r                                                                                    .xxxXxxxx(-42)\r                                                                                    .xxxXxxx(\r                                                                                        XxxxXxxx\r                                                                                            .XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxx(\r                                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxx(42)\r                                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxxXxxxXx(42)\r                                                            ].xxxxx())\r          ...> but was\:<...     .xxxXxxxxxXxxx([XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                            .xxxXxxxXxxxxx(\r                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxx(\r                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxx(-42)\r                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                    .xxxXxxxxxXxxx(\r                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                            .xxxXxxxXxxxxx(\r                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxx(\r                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxx(-42)\r                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxxx())\r                    .xxxXxxxxxx(\r                        XxxxxxxXxxx.xxxXxxxxxx()\r                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                            .xxxXxxxxxXxxx(\r                                XxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                    .xxxXxxxXxxxxx(\r                                        XxxxXxxxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxxxXxxxx(\r                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxxXxxxxxx(\r                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxx(\r                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                    .xxxxx())\r                                                            .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                    .xxxxx())\r                            .xxxxx())\r                    .xxxXxxxxxx(\r                        XxxxxxxXxxx.xxxXxxxxxx()\r                            .xxxXxxxxxxx(Xxxxxxxx.XX)\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                            .xxxXxxxxxXxxx(\r                                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                    .xxxXxxxXxxxxx(\r                                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxXxxxx(\r                                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxXxxxxx(\r                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxxx(-42)\r                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxx(\r                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                            .xxxXxxxxxXxxx(\r                                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                    .xxxXxxxXxxxxx(\r                                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxxXxxxx(\r                                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxXxxxxx(\r                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxxx(-42)\r                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxx(\r                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                    .xxxXxxxxxXxxx(\r                                        XxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                            .xxxXxxxXxxxxx(\r                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxxxXxxxx(\r                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                            .xxxxx())\r                                                                    .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                            .xxxxx())\r                                    .xxxxx())\r                            .xxxXxxxxxx(\r                                XxxxxxxXxxx.xxxXxxxxxx()\r                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                            .xxxXxxxxxx(\r                                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                            .xxxXxxxXxxxxx(\r                                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxXxxxxx(\r                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                                            .xxxXxxxx(-42)\r                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxxxx(\r                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxx(42)\r                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxXxxxxxx(\r                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\r                                                    .xxxXxxxxxx(\r                                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\r                                                            .xxxXxxxxxx(\r                                                                XxxxxxxXxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                                                    .xxxXxxxxxXxxx(\r                                                                        XxxxxxXxxx.xxxXxxxxxx()\r                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                                            .xxxXxxxXxxxxx(\r                                                                                XxxxXxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxXxxxx(\r                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxxxxxXxxxxxx(\r                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                    .xxxXxxx(\r                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\r                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxXxxxxx(\r                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                                            .xxxXxxxx(-42)\r                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                                            .xxxxx())\r                                                                                                    .xxxxx())\r                                                                                            .xxxxx())\r                                                                                    .xxxXxxxxxxx(\r                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\r                                                                                            .xxxXxxxx(42)\r                                                                                            .xxxXxxx(XxxxXxxx.XXX)\r                                                                                            .xxxxx())\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\r                                                                                    .xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                            .xxxXxxxxxXxxx(\r                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                    .xxxXxxxXxxxxx(\r                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxXxxxx(\r                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxx(\r                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\r                                                    .xxxxx())\r                                            .xxxxx())\r                                    .xxxXxxxxxx(\r                                        XxxxxxxXxxx.xxxXxxxxxx()\r                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\r                                            .xxxXxxxxxXxxx(\r                                                XxxxxxXxxx.xxxXxxxxxx()\r                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\r                                                    .xxxXxxxXxxxxx(\r                                                        XxxxXxxxxx.xxxXxxxxxx()\r                                                            .xxxXxxxxxxxxXxxxx(\r                                                                XxxxXxxxxxx.xxxXxxxxxx()\r                                                                    .xxxXxxxxxxxXxxxxxx(\r                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                            .xxxXxxx(\r                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\r                                                                                    .xxxXxxxxxxxXxxxxxxxx(\r                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\r                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\r                                                                                    .xxxxx())\r                                                                            .xxxXxxxxx(\r                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                                            .xxxxx())\r                                                                    .xxxxx())\r                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\r                                                            .xxxxx())\r                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\r                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42)].xxxxx())\r          ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24909927 expected\:<...     .xxxXxxxxxXxxx([\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(-42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(\n                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxx(42)\n                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx\n                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(-42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(\n                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxx(42)\n                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            ].xxxxx())\n          ...> but was\:<...     .xxxXxxxxxXxxx([XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42)].xxxxx())\n          ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24909927 expected\:<...     .xxxXxxxxxXxxx([\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx\n                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                -42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                    .xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(-42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(\n                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxx(42)\n                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx\n                                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(\n                                                                                                        -42)\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxXxxx\n                                                                                                            .XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx\n                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(\n                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxx(-42)\n                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(\n                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxx(42)\n                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(\n                                                                                XxxxxxXxxx\n                                                                                    .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                                    .xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx\n                                                                                                            .xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(\n                                                                                                                -42)\n                                                                                                            .xxxXxxx(\n                                                                                                                XxxxXxxx\n                                                                                                                    .XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx\n                                                                                            .xxxXxxxxxx()\n                                                                                            .xxxXxxxx(\n                                                                                                42)\n                                                                                            .xxxXxxx(\n                                                                                                XxxxXxxx\n                                                                                                    .XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(\n                                                                                        42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx\n                                                            .XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx\n                                                                            .xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx\n                                                                                    .xxxXxxxxxx()\n                                                                                    .xxxXxxxx(-42)\n                                                                                    .xxxXxxx(\n                                                                                        XxxxXxxx\n                                                                                            .XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(\n                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxx(42)\n                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxxXxxxXx(42)\n                                                            ].xxxxx())\n         ...> but was\:<...     .xxxXxxxxxXxxx([XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                    .xxxXxxxxxXxxx(\n                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                            .xxxXxxxXxxxxx(\n                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(-42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                            .xxxXxxxxxXxxx(\n                                XxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                    .xxxXxxxXxxxxx(\n                                        XxxxXxxxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxxxXxxxx(\n                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxXxxxxxx(\n                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                    .xxxxx())\n                                                            .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                    .xxxxx())\n                            .xxxxx())\n                    .xxxXxxxxxx(\n                        XxxxxxxXxxx.xxxXxxxxxx()\n                            .xxxXxxxxxxx(Xxxxxxxx.XX)\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                            .xxxXxxxxxXxxx(\n                                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                    .xxxXxxxXxxxxx(\n                                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxxXxxxx(\n                                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxXxxxxx(\n                                                                                                XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxxx(-42)\n                                                                                                    .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                    .xxxXxxxxxXxxx(\n                                        XxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                            .xxxXxxxXxxxxx(\n                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxxxXxxxx(\n                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx.XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                            .xxxxx())\n                                                                    .xxxXxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                            .xxxxx())\n                                    .xxxxx())\n                            .xxxXxxxxxx(\n                                XxxxxxxXxxx.xxxXxxxxxx()\n                                    .xxxXxxxxxxx(Xxxxxxxx.XX)\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxXxxxxxx(\n                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxxx(Xxxxxxxx.XXX)\n                                                    .xxxXxxxxxx(\n                                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxx(Xxxxxxxx.XX_XXXXX)\n                                                            .xxxXxxxxxx(\n                                                                XxxxxxxXxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                                                    .xxxXxxxxxXxxx(\n                                                                        XxxxxxXxxx.xxxXxxxxxx()\n                                                                            .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                                            .xxxXxxxXxxxxx(\n                                                                                XxxxXxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxXxxxx(\n                                                                                        XxxxXxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxxxxxXxxxxxx(\n                                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                    .xxxXxxx(\n                                                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxxxxxXxxxxxxxx(\n                                                                                                                XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                                                    .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxXxxxxx(\n                                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                                            .xxxXxxxx(-42)\n                                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                                            .xxxxx())\n                                                                                                    .xxxxx())\n                                                                                            .xxxxx())\n                                                                                    .xxxXxxxxxxx(\n                                                                                        XxxxXxxxxxxx.xxxXxxxxxx()\n                                                                                            .xxxXxxxx(42)\n                                                                                            .xxxXxxx(XxxxXxxx.XXX)\n                                                                                            .xxxxx())\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                                                XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxxxXxxxXx(42)\n                                                                                    .xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42).xxxxx())\n                                                    .xxxxx())\n                                            .xxxxx())\n                                    .xxxXxxxxxx(\n                                        XxxxxxxXxxx.xxxXxxxxxx()\n                                            .xxxXxxxxxxx(Xxxxxxxx.XXXX)\n                                            .xxxXxxxxxXxxx(\n                                                XxxxxxXxxx.xxxXxxxxxx()\n                                                    .xxxXxxxxxXxxx(XxxxxxXxxx.XXX_XXXXXXXXXXXXXXX_XXXX_XXXXXXX_XXXXX_XXXXX)\n                                                    .xxxXxxxXxxxxx(\n                                                        XxxxXxxxxx.xxxXxxxxxx()\n                                                            .xxxXxxxxxxxxXxxxx(\n                                                                XxxxXxxxxxx.xxxXxxxxxx()\n                                                                    .xxxXxxxxxxxXxxxxxx(\n                                                                        XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                            .xxxXxxx(\n                                                                                XxxxxxxxXxxxXxxxxxx.xxxXxxxxxx()\n                                                                                    .xxxXxxxxxxxXxxxxxxxx(\n                                                                                        XxxxxxxxXxxxXxxxxxxXxxxxxxxXxxxxxxxx\n                                                                                            .XXXX_XXXXXX_XXXX_XXXXX_XX_XXX)\n                                                                                    .xxxxx())\n                                                                            .xxxXxxxxx(\n                                                                                XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(-42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                                            .xxxxx())\n                                                                    .xxxxx())\n                                                            .xxxXxxxxxxx(XxxxXxxxxxxx.xxxXxxxxxx().xxxXxxxx(42).xxxXxxx(XxxxXxxx.XXX).xxxxx())\n                                                            .xxxxx())\n                                                    .xxxXxxxxxxxxxXxxXxxxXxxxxxxxx(\n                                                        XxxxxxxxxxXxxXxxxXxxxxxxxx.xxxXxxxxxx().xxxXxxxxxxxxxXxxxXx(42)].xxxxx())\n         ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24988078 expected\:<...nal<T> fromNullable([\n      ]@Nullable T nullable...> but was\:<...nal<T> fromNullable([]@Nullable T nullable...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24988078 expected\:<...nal<T> fromNullable([\r      ]@Nullable T nullable...> but was\:<...nal<T> fromNullable([]@Nullable T nullable...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24988078 expected\:<...nal<T> fromNullable([\n      ]@Nullable T nullable...> but was\:<...nal<T> fromNullable([]@Nullable T nullable...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B24988078 expected\:<...nal<T> fromNullable([\n      ]@Nullable T nullable...> but was\:<...nal<T> fromNullable([]@Nullable T nullable...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26207047 expected\:<...{\n    String.format([\n        "%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "{0}                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...{\n    String.format(["%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("%s                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("{0}                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("                                                                           ", xxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26207047 expected\:<...{\r    String.format([\r        "%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "{0}                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           "\r            + "                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           ",\r        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\r        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\r        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\r    String.format(\r        "%s    ",\r        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\r        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\r        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\r    Set<TimeZone> ZONES \=\r        ImmutableSet.of(\r            TimeZone.getTimeZone("EST"),\r            // TODO\:\r            TimeZone.getTimeZone("GMT"),\r            TimeZone.getTimeZone("HST"),\r            TimeZone.getTimeZone("MST"));\r    String.format(\r        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s",\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx,\r       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...{\r    String.format(["%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format("%s                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format("{0}                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           "\r            + "                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           ",\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx,\r        xxxxxxxxxxxxxxxxxxxx);\r    String.format(\r        "%s                                                                           ",\r        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\r        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\r    String.format(\r        "%s    ",\r        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\r        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\r    Set<TimeZone> ZONES \=\r        ImmutableSet.of(\r            TimeZone.getTimeZone("EST"),\r            // TODO\:\r            TimeZone.getTimeZone("GMT"),\r            TimeZone.getTimeZone("HST"),\r            TimeZone.getTimeZone("MST"));\r    String.format(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\r    String.format("                                                                           ", xxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26207047 expected\:<...{\n    String.format([\n        "%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "{0}                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...{\n    String.format(["%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("%s                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("{0}                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("                                                                           ", xxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26207047 expected\:<...\n    String.format([\n        "%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "{0}                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(\n        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n       ] xxxxxxxxxxxxxxxxxxx...> but was\:<...\n    String.format(["%s                                        ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("%s                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("{0}                                                                           ", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           "\n            + "                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx,\n        xxxxxxxxxxxxxxxxxxxx);\n    String.format(\n        "%s                                                                           ",\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx,\n        xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx, xxxxxx);\n    String.format(\n        "%s    ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",\n        "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ");\n    Set<TimeZone> ZONES \=\n        ImmutableSet.of(\n            TimeZone.getTimeZone("EST"),\n            // TODO\:\n            TimeZone.getTimeZone("GMT"),\n            TimeZone.getTimeZone("HST"),\n            TimeZone.getTimeZone("MST"));\n    String.format(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + "%s", xxxxxxxxxxxxxxxxxxxx, xxxxxxxxxxxxxxxxxxxx);\n    String.format("                                                                           ", xxxxxxxxxxxxxxxxxxxx,] xxxxxxxxxxxxxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26293162 expected\:<...xxxxxXxxxxxXxxxxxxx<[\n      X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<\n          X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>>\n      extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<\n          X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X>\n      extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>>\n      extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<\n      XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx,\n          X extends Xxxxxxx,\n          X extends Xxxxxxx,\n         ] XX extends Xxxxxxxx...> but was\:<...xxxxxXxxxxxXxxxxxxx<[X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X> extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>> extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, X extends Xxxxxxx,] XX extends Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26293162 expected\:<...xxxxxXxxxxxXxxxxxxx<[\r      X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\r\r    int x;\r  }\r\r  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<\r          X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>>\r      extends Xxxxx {\r\r    int x;\r  }\r\r  class XxxxxxxxXxxxxxxxxXxxxXxxx<\r          X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X>\r      extends XxxxXxxx {\r\r    int x;\r  }\r\r  @Xxx\r  class XxxxxxxxxxxXxxxxxXx<\r          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>>\r      extends XxxxxxxxXx<X, XX> {\r\r    int x;\r  }\r\r  static class XxxxxXxxxxXxxx<\r      XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\r\r    int x;\r  }\r\r  @Xxx\r  class XxxxxxxxxxxXxxxxxXx<\r          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx,\r          X extends Xxxxxxx,\r          X extends Xxxxxxx,\r         ] XX extends Xxxxxxxx...> but was\:<...xxxxxXxxxxxXxxxxxxx<[X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\r\r    int x;\r  }\r\r  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> extends Xxxxx {\r\r    int x;\r  }\r\r  class XxxxxxxxXxxxxxxxxXxxxXxxx<X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X> extends XxxxXxxx {\r\r    int x;\r  }\r\r  @Xxx\r  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>> extends XxxxxxxxXx<X, XX> {\r\r    int x;\r  }\r\r  static class XxxxxXxxxxXxxx<XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\r\r    int x;\r  }\r\r  @Xxx\r  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, X extends Xxxxxxx,] XX extends Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26293162 expected\:<...xxxxxXxxxxxXxxxxxxx<[\n      X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<\n          X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>>\n      extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<\n          X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X>\n      extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>>\n      extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<\n      XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx,\n          X extends Xxxxxxx,\n          X extends Xxxxxxx,\n         ] XX extends Xxxxxxxx...> but was\:<...xxxxxXxxxxxXxxxxxxx<[X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X> extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>> extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, X extends Xxxxxxx,] XX extends Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26293162 expected\:<...xxxxxXxxxxxXxxxxxxx<[\n      X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<\n          X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>>\n      extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<\n          X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X>\n      extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>>\n      extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<\n      XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<\n          X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx,\n          X extends Xxxxxxx,\n          X extends Xxxxxxx,\n         ] XX extends Xxxxxxxx...> but was\:<...xxxxxXxxxxxXxxxxxxx<[X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> {\n\n    int x;\n  }\n\n  public static final class XxxxXxxxxxxxXxxxxxxxxXxxxxxXxxxxxxx<X, X, X extends XxxxxxxxxXxxxxxxxxXxxxxxxx<X, X>> extends Xxxxx {\n\n    int x;\n  }\n\n  class XxxxxxxxXxxxxxxxxXxxxXxxx<X extends XxxxxxxxxXxxxxxx, X extends XxxxxxxxxXxxxxx, X extends Xxxxxxxxxxxxx, X> extends XxxxXxxx {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, XX extends Xxxxxxxxx<X>> extends XxxxxxxxXx<X, XX> {\n\n    int x;\n  }\n\n  static class XxxxxXxxxxXxxx<XXXXX extends XxxxxxxxXxxxxxx<XXXXX>, XXX extends XxxxxxxxXxxxxxx<XXX>> {\n\n    int x;\n  }\n\n  @Xxx\n  class XxxxxxxxxxxXxxxxxXx<X extends XxxxxxXxxxxxxxxxxXxxxxxXxxxxx, X extends Xxxxxxx, X extends Xxxxxxx,] XX extends Xxxxxxxx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26884608 expected\:<...XxxxxxXxxxxxxXxxxxx([\n        XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(\n        XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(\n        XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(\n        ]XxxxxXxxx.xxxxxXx(xx...> but was\:<...XxxxxxXxxxxxxXxxxxx([XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(]XxxxxXxxx.xxxxxXx(xx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26884608 expected\:<...XxxxxxXxxxxxxXxxxxx([\r        XXXXXXXXX_XXXXXXXXX);\r    this.xxxXxxxxXxxxxxx(\r        XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\r        XXXXXXXXX_XXXXXXXXX);\r    Xxxxx.this.xxxXxxxxXxxx(\r        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    xxx.xxxxxx.Xxxxx.this\r        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\r            XXXXXXXXX_XXXXXXXXX);\r    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(\r        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r\r    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\r        XXXXXXXXX_XXXXXXXXX);\r    super.xxxXxxxxXxxx(\r        XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\r        XXXXXXXXX_XXXXXXXXX);\r    Xxxxx.super.xxxXxxxxXxxx(\r        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    xxx.xxxxxx.Xxxxx.super\r        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\r            XXXXXXXXX_XXXXXXXXX);\r    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(\r        ]XxxxxXxxx.xxxxxXx(xx...> but was\:<...XxxxxxXxxxxxxXxxxxx([XXXXXXXXX_XXXXXXXXX);\r    this.xxxXxxxxXxxxxxx(XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\r    Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    xxx.xxxxxx.Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\r    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r\r    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\r    super.xxxXxxxxXxxx(XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\r    Xxxxx.super.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\r    xxx.xxxxxx.Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\r    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(]XxxxxXxxx.xxxxxXx(xx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26884608 expected\:<...XxxxxxXxxxxxxXxxxxx([\n        XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(\n        XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(\n        XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(\n        ]XxxxxXxxx.xxxxxXx(xx...> but was\:<...XxxxxxXxxxxxxXxxxxx([XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(]XxxxxXxxx.xxxxxXx(xx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B26884608 expected\:<...XxxxxxXxxxxxxXxxxxx([\n        XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(\n        XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(\n        XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n        XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(\n        XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super\n        .<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(\n            XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(\n        ]XxxxxXxxx.xxxxxXx(xx...> but was\:<...XxxxxxXxxxxxxXxxxxx([XXXXXXXXX_XXXXXXXXX);\n    this.xxxXxxxxXxxxxxx(XxxxxXxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.this.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.this.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n\n    super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    super.xxxXxxxxXxxx(XxxxxXxxxx.xxxxxXxxxx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    Xxxxx.super.xxxXxxxxXxxx(XxxxxXxxx.xxxxxXx(xxxxxx.xxxxxxxXxxxxxXxxxx(xxxxxx), xxxxxx.xxXxxxxxx()));\n    xxx.xxxxxx.Xxxxx.super.<XxxxxXxxxxxxxXxxxxx, XxxxxxxxxXxxxxxxXxxxxxxxx>xxxxxxxxxXxxxxxXxxxxxxXxxxxx(XXXXXXXXX_XXXXXXXXX);\n    xxx.xxxxxx.Xxxxx.super.xxxXxxxxXxxx(]XxxxxXxxx.xxxxxXx(xx...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B30223986 expected\:<...rning a new instance[\n * of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in\n *] the subclass. Examp...> but was\:<...rning a new instance[ of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in] the subclass. Examp...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B30223986 expected\:<...rning a new instance[\r * of the foo relevant to that baz.\r *\r * <p>Example\: <code>\r *   @Override\r *   protected Foo bar() {\r *     return new Foo();\r *   }\r * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in\r *] the subclass. Examp...> but was\:<...rning a new instance[ of the foo relevant to that baz.\r *\r * <p>Example\: <code>\r *   @Override\r *   protected Foo bar() {\r *     return new Foo();\r *   }\r * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in] the subclass. Examp...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B30223986 expected\:<...rning a new instance[\n * of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in\n *] the subclass. Examp...> but was\:<...rning a new instance[ of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in] the subclass. Examp...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B30223986 expected\:<...rning a new instance[\n * of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in\n *] the subclass. Examp...> but was\:<...rning a new instance[ of the foo relevant to that baz.\n *\n * <p>Example\: <code>\n *   @Override\n *   protected Foo bar() {\n *     return new Foo();\n *   }\n * </code> The subclass should call {@link \#get()} to get the foo object, and should not cache it in] the subclass. Examp...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32114928 expected\:<...   Class<T> tClass \=[\n        (Class<T>)\n            verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())\n                ].getActualTypeArgume...> but was\:<...   Class<T> tClass \=[ (Class<T>) verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())].getActualTypeArgume...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32114928 expected\:<...   Class<T> tClass \=[\r        (Class<T>)\r            verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())\r                ].getActualTypeArgume...> but was\:<...   Class<T> tClass \=[ (Class<T>) verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())].getActualTypeArgume...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32114928 expected\:<...   Class<T> tClass \=[\n        (Class<T>)\n            verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())\n                ].getActualTypeArgume...> but was\:<...   Class<T> tClass \=[ (Class<T>) verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())].getActualTypeArgume...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32114928 expected\:<...   Class<T> tClass \=[\n        (Class<T>)\n            verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())\n                ].getActualTypeArgume...> but was\:<...   Class<T> tClass \=[ (Class<T>) verifyNotNull((ParameterizedType) getClass().getGenericSuperclass())].getActualTypeArgume...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32397217 expected\:<class T {\n  {\n    f([\n        1 /* 1                                       */,\n       ] 2 /* 2             ...> but was\:<class T {\n  {\n    f([1 /* 1                                       */,] 2 /* 2             ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32397217 expected\:<class T {\r  {\r    f([\r        1 /* 1                                       */,\r       ] 2 /* 2             ...> but was\:<class T {\r  {\r    f([1 /* 1                                       */,] 2 /* 2             ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32397217 expected\:<class T {\n  {\n    f([\n        1 /* 1                                       */,\n       ] 2 /* 2             ...> but was\:<class T {\n  {\n    f([1 /* 1                                       */,] 2 /* 2             ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for B32397217 expected\:<...ass T {\n  {\n    f([\n        1 /* 1                                       */,\n       ] 2 /* 2             ...> but was\:<...ass T {\n  {\n    f([1 /* 1                                       */,] 2 /* 2             ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for C expected\:<...ssInstanceCreations,[\n * CommentHelper, ConditionalExpressions, ConstructorInvocations, ContinueStatements, and\n * CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \=\n          i \=\= 0\n              ? 0\n              \: i \=\= 1\n                  ? 1\n                 ] \: i \=\= 2 ? 2 \: i \=\=...> but was\:<...ssInstanceCreations,[ CommentHelper, ConditionalExpressions, ConstructorInvocations,\n * ContinueStatements, and CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \= i \=\= 0 ? 0 \: i \=\= 1 ? 1] \: i \=\= 2 ? 2 \: i \=\=...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for C expected\:<...ssInstanceCreations,[\r * CommentHelper, ConditionalExpressions, ConstructorInvocations, ContinueStatements, and\r * CreationReferences.\r */\rclass C<T> {\r  // TODO(jdd)\: Test higher-language-level constructs.\r\r  C() {\r    this(\r        0, 1,\r        2, 3,\r        4, 5,\r        6, 7,\r        8, 9,\r        10, 11,\r        12, 13,\r        14, 15,\r        16, 17,\r        18, 19,\r        20, 21,\r        22, 23,\r        24, 25,\r        26, 27,\r        28, 29,\r        30, 31);\r  }\r\r  C(int... x) {}\r\r  void f() {\r    try {\r    } catch (RuntimeException e) {\r      Object x \=\r          (Pair<\r                  Pair<\r                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\r                  Pair<\r                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\r              null;\r      C<Integer> c \=\r          new C<Integer>(\r              0, 1,\r              2, 3,\r              4, 5,\r              6, 7,\r              8, 9,\r              10, 11,\r              12, 13,\r              14, 15,\r              16, 17,\r              18, 19,\r              20, 21,\r              22, 23,\r              24, 25,\r              26, 27,\r              28, 29,\r              30, 31);\r      int i \= 0;\r      int j \=\r          i \=\= 0\r              ? 0\r              \: i \=\= 1\r                  ? 1\r                 ] \: i \=\= 2 ? 2 \: i \=\=...> but was\:<...ssInstanceCreations,[ CommentHelper, ConditionalExpressions, ConstructorInvocations,\r * ContinueStatements, and CreationReferences.\r */\rclass C<T> {\r  // TODO(jdd)\: Test higher-language-level constructs.\r\r  C() {\r    this(\r        0, 1,\r        2, 3,\r        4, 5,\r        6, 7,\r        8, 9,\r        10, 11,\r        12, 13,\r        14, 15,\r        16, 17,\r        18, 19,\r        20, 21,\r        22, 23,\r        24, 25,\r        26, 27,\r        28, 29,\r        30, 31);\r  }\r\r  C(int... x) {}\r\r  void f() {\r    try {\r    } catch (RuntimeException e) {\r      Object x \=\r          (Pair<\r                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\r                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\r              null;\r      C<Integer> c \=\r          new C<Integer>(\r              0, 1,\r              2, 3,\r              4, 5,\r              6, 7,\r              8, 9,\r              10, 11,\r              12, 13,\r              14, 15,\r              16, 17,\r              18, 19,\r              20, 21,\r              22, 23,\r              24, 25,\r              26, 27,\r              28, 29,\r              30, 31);\r      int i \= 0;\r      int j \= i \=\= 0 ? 0 \: i \=\= 1 ? 1] \: i \=\= 2 ? 2 \: i \=\=...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for C expected\:<...ssInstanceCreations,[\n * CommentHelper, ConditionalExpressions, ConstructorInvocations, ContinueStatements, and\n * CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \=\n          i \=\= 0\n              ? 0\n              \: i \=\= 1\n                  ? 1\n                 ] \: i \=\= 2 ? 2 \: i \=\=...> but was\:<...ssInstanceCreations,[ CommentHelper, ConditionalExpressions, ConstructorInvocations,\n * ContinueStatements, and CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \= i \=\= 0 ? 0 \: i \=\= 1 ? 1] \: i \=\= 2 ? 2 \: i \=\=...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for C expected\:<...ssInstanceCreations,[\n * CommentHelper, ConditionalExpressions, ConstructorInvocations, ContinueStatements, and\n * CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                      Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \=\n          i \=\= 0\n              ? 0\n              \: i \=\= 1\n                  ? 1\n                 ] \: i \=\= 2 ? 2 \: i \=\=...> but was\:<...ssInstanceCreations,[ CommentHelper, ConditionalExpressions, ConstructorInvocations,\n * ContinueStatements, and CreationReferences.\n */\nclass C<T> {\n  // TODO(jdd)\: Test higher-language-level constructs.\n\n  C() {\n    this(\n        0, 1,\n        2, 3,\n        4, 5,\n        6, 7,\n        8, 9,\n        10, 11,\n        12, 13,\n        14, 15,\n        16, 17,\n        18, 19,\n        20, 21,\n        22, 23,\n        24, 25,\n        26, 27,\n        28, 29,\n        30, 31);\n  }\n\n  C(int... x) {}\n\n  void f() {\n    try {\n    } catch (RuntimeException e) {\n      Object x \=\n          (Pair<\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>,\n                  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>)\n              null;\n      C<Integer> c \=\n          new C<Integer>(\n              0, 1,\n              2, 3,\n              4, 5,\n              6, 7,\n              8, 9,\n              10, 11,\n              12, 13,\n              14, 15,\n              16, 17,\n              18, 19,\n              20, 21,\n              22, 23,\n              24, 25,\n              26, 27,\n              28, 29,\n              30, 31);\n      int i \= 0;\n      int j \= i \=\= 0 ? 0 \: i \=\= 1 ? 1] \: i \=\= 2 ? 2 \: i \=\=...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for D expected\:<...[][][][][][][][][][][\n          [][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]\n          [][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n           ] + 1 + 1 + 1 + 1 + 1...> but was\:<...[][][][][][][][][][][[][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1] + 1 + 1 + 1 + 1 + 1...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for D expected\:<...[][][][][][][][][][][\r          [][][][]\r      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]\r          [][][][][][][];\r\r  void f() {\r    do {\r      assert false;\r    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r           ] + 1 + 1 + 1 + 1 + 1...> but was\:<...[][][][][][][][][][][[][][][]\r      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][];\r\r  void f() {\r    do {\r      assert false;\r    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\r        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1] + 1 + 1 + 1 + 1 + 1...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for D expected\:<...[][][][][][][][][][][\n          [][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]\n          [][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n           ] + 1 + 1 + 1 + 1 + 1...> but was\:<...[][][][][][][][][][][[][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1] + 1 + 1 + 1 + 1 + 1...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for D expected\:<...[][][][][][][][][][][\n          [][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]\n          [][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n            + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n           ] + 1 + 1 + 1 + 1 + 1...> but was\:<...[][][][][][][][][][][[][][][]\n      array[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][];\n\n  void f() {\n    do {\n      assert false;\n    } while (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n        \=\= 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1] + 1 + 1 + 1 + 1 + 1...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for E expected\:<...s, EnumDeclarations,[\n * ExpressionMethodReferences, ExpressionStatements, Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \:\n        ImmutableList.<Integer>of(\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n        x \:\n            Lists\n                .<Pair<\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n    ]                newA...> but was\:<...s, EnumDeclarations,[ ExpressionMethodReferences, ExpressionStatements,\n * Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \: ImmutableList.<Integer>of(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>> x \:\n        Lists\n            .<Pair<\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n]                newA...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for E expected\:<...s, EnumDeclarations,[\r * ExpressionMethodReferences, ExpressionStatements, Expressions, and ExtendedModifiers.\r */\r@MarkerAnnotation\rclass E<T> {\r  // TODO(jdd)\: Test higher language-level features.\r\r  enum Enum1 {\r    A,\r    B,\r    C,\r    D;\r\r    Enum1() {}\r  }\r\r  @MarkerAnnotation\r  public enum Enum2 {\r    A,\r    B,\r    C,\r    D,\r    ;\r\r    Enum2() {}\r  }\r\r  enum Enum3 {\r    A(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\r    B(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\r    C(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\r    D(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\r\r    Enum3(int x) {}\r  }\r\r  enum Enum4 {\r    A(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\r    B(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\r    C(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\r    D(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\r    ;\r\r    Enum4(int x) {}\r  }\r\r  int f(int value) {\r    ;;;;;\r    for (Integer x \:\r        ImmutableList.<Integer>of(\r            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\r    for (Pair<\r            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r        x \:\r            Lists\r                .<Pair<\r                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\r    ]                newA...> but was\:<...s, EnumDeclarations,[ ExpressionMethodReferences, ExpressionStatements,\r * Expressions, and ExtendedModifiers.\r */\r@MarkerAnnotation\rclass E<T> {\r  // TODO(jdd)\: Test higher language-level features.\r\r  enum Enum1 {\r    A,\r    B,\r    C,\r    D;\r\r    Enum1() {}\r  }\r\r  @MarkerAnnotation\r  public enum Enum2 {\r    A,\r    B,\r    C,\r    D,\r    ;\r\r    Enum2() {}\r  }\r\r  enum Enum3 {\r    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\r    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\r    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\r    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\r\r    Enum3(int x) {}\r  }\r\r  enum Enum4 {\r    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\r    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\r    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\r    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\r    ;\r\r    Enum4(int x) {}\r  }\r\r  int f(int value) {\r    ;;;;;\r    for (Integer x \: ImmutableList.<Integer>of(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\r    for (Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>> x \:\r        Lists\r            .<Pair<\r                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\r]                newA...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for E expected\:<...s, EnumDeclarations,[\n * ExpressionMethodReferences, ExpressionStatements, Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \:\n        ImmutableList.<Integer>of(\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n        x \:\n            Lists\n                .<Pair<\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n    ]                newA...> but was\:<...s, EnumDeclarations,[ ExpressionMethodReferences, ExpressionStatements,\n * Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \: ImmutableList.<Integer>of(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>> x \:\n        Lists\n            .<Pair<\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n]                newA...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for E expected\:<...s, EnumDeclarations,[\n * ExpressionMethodReferences, ExpressionStatements, Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \:\n        ImmutableList.<Integer>of(\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n            Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n        x \:\n            Lists\n                .<Pair<\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                        Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n    ]                newA...> but was\:<...s, EnumDeclarations,[ ExpressionMethodReferences, ExpressionStatements,\n * Expressions, and ExtendedModifiers.\n */\n@MarkerAnnotation\nclass E<T> {\n  // TODO(jdd)\: Test higher language-level features.\n\n  enum Enum1 {\n    A,\n    B,\n    C,\n    D;\n\n    Enum1() {}\n  }\n\n  @MarkerAnnotation\n  public enum Enum2 {\n    A,\n    B,\n    C,\n    D,\n    ;\n\n    Enum2() {}\n  }\n\n  enum Enum3 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3);\n\n    Enum3(int x) {}\n  }\n\n  enum Enum4 {\n    A(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0),\n    B(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 1),\n    C(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 2),\n    D(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 3),\n    ;\n\n    Enum4(int x) {}\n  }\n\n  int f(int value) {\n    ;;;;;\n    for (Integer x \: ImmutableList.<Integer>of(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)) {}\n    for (Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>> x \:\n        Lists\n            .<Pair<\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n                    Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>>\n]                newA...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for F expected\:<...l;\n  Object field0 \=[\n      true\n          ? true ? true ? null \: null \: true ? null \: null\n          \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field1 \= null;\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field2 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field3 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=\n         ] null;\n    }\n  }\n}\n> but was\:<...l;\n  Object field0 \=[ true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field1 \= null;\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field2 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field3 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=] null;\n    }\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for F expected\:<...l;\r  Object field0 \=[\r      true\r          ? true ? true ? null \: null \: true ? null \: null\r          \: true ? true ? null \: null \: true ? null \: null;\r\r  Pair<\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\r      field1 \= null;\r  Pair<\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\r      field2 \=\r          true\r              ? true ? true ? null \: null \: true ? null \: null\r              \: true ? true ? null \: null \: true ? null \: null;\r\r  @MarkerAnnotation\r  Pair<\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\r      field3 \=\r          true\r              ? true ? true ? null \: null \: true ? null \: null\r              \: true ? true ? null \: null \: true ? null \: null;\r\r  void f() {\r    for (int i \=\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\r        i\r            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\r        i++) {\r      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\r    }\r    for (int i \=\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\r        i\r            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\r        i++) {\r      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=\r         ] null;\r    }\r  }\r}\r> but was\:<...l;\r  Object field0 \=[ true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\r\r  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field1 \= null;\r  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field2 \=\r      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\r\r  @MarkerAnnotation\r  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field3 \=\r      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\r\r  void f() {\r    for (int i \=\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\r        i\r            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\r        i++) {\r      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\r    }\r    for (int i \=\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\r        i\r            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\r        i++) {\r      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=] null;\r    }\r  }\r}\r>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for F expected\:<...l;\n  Object field0 \=[\n      true\n          ? true ? true ? null \: null \: true ? null \: null\n          \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field1 \= null;\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field2 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field3 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=\n         ] null;\n    }\n  }\n}\n> but was\:<...l;\n  Object field0 \=[ true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field1 \= null;\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field2 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field3 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=] null;\n    }\n  }\n}\n>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for F expected\:<...;\n  Object field0 \=[\n      true\n          ? true ? true ? null \: null \: true ? null \: null\n          \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field1 \= null;\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field2 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n          Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n      field3 \=\n          true\n              ? true ? true ? null \: null \: true ? null \: null\n              \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=\n         ] null;\n    }\n  }\n...> but was\:<...;\n  Object field0 \=[ true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field1 \= null;\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field2 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  @MarkerAnnotation\n  Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> field3 \=\n      true ? true ? true ? null \: null \: true ? null \: null \: true ? true ? null \: null \: true ? null \: null;\n\n  void f() {\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \= null;\n    }\n    for (int i \=\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0;\n        i\n            < 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 10;\n        i++) {\n      f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.Ff \=] null;\n    }\n  }\n...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I expected\:<...java.util.List;\n\n/**[\n * Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers,\n * InstanceofExpressions, and IntersectionTypes.\n */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<\n      T extends\n          I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16\n              & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0\n              & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n           ] + 0 + 0 + 0 + 0 + 0...> but was\:<...java.util.List;\n\n/**[ Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers, InstanceofExpressions, and IntersectionTypes. */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<T extends I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16 & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0 & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I expected\:<...java.util.List;\r\r/**[\r * Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers,\r * InstanceofExpressions, and IntersectionTypes.\r */\rclass I {\r  interface I0 {}\r\r  interface I1 {}\r\r  interface I2 {}\r\r  interface I3 {}\r\r  interface I4 {}\r\r  interface I5 {}\r\r  interface I6 {}\r\r  interface I7 {}\r\r  interface I8 {}\r\r  interface I9 {}\r\r  interface I10 {}\r\r  interface I11 {}\r\r  interface I12 {}\r\r  interface I13 {}\r\r  interface I14 {}\r\r  interface I15 {}\r\r  interface I16 {}\r\r  interface I17 {}\r\r  interface I18 {}\r\r  interface I19 {}\r\r  class II<\r      T extends\r          I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16\r              & I17 & I18 & I19> {}\r\r  static class CC {\r    static {\r      int i \= 0;\r    }\r  }\r\r  int x \=\r      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\r          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0\r              & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\r          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\r\r  void f() {\r    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r           ] + 0 + 0 + 0 + 0 + 0...> but was\:<...java.util.List;\r\r/**[ Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers, InstanceofExpressions, and IntersectionTypes. */\rclass I {\r  interface I0 {}\r\r  interface I1 {}\r\r  interface I2 {}\r\r  interface I3 {}\r\r  interface I4 {}\r\r  interface I5 {}\r\r  interface I6 {}\r\r  interface I7 {}\r\r  interface I8 {}\r\r  interface I9 {}\r\r  interface I10 {}\r\r  interface I11 {}\r\r  interface I12 {}\r\r  interface I13 {}\r\r  interface I14 {}\r\r  interface I15 {}\r\r  interface I16 {}\r\r  interface I17 {}\r\r  interface I18 {}\r\r  interface I19 {}\r\r  class II<T extends I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16 & I17 & I18 & I19> {}\r\r  static class CC {\r    static {\r      int i \= 0;\r    }\r  }\r\r  int x \=\r      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\r          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0 & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\r          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\r\r  void f() {\r    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I expected\:<...java.util.List;\n\n/**[\n * Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers,\n * InstanceofExpressions, and IntersectionTypes.\n */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<\n      T extends\n          I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16\n              & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0\n              & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n           ] + 0 + 0 + 0 + 0 + 0...> but was\:<...java.util.List;\n\n/**[ Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers, InstanceofExpressions, and IntersectionTypes. */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<T extends I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16 & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0 & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I expected\:<...va.util.List;\n\n/**[\n * Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers,\n * InstanceofExpressions, and IntersectionTypes.\n */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<\n      T extends\n          I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16\n              & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0\n              & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n           ] + 0 + 0 + 0 + 0 + 0...> but was\:<...va.util.List;\n\n/**[ Tests for IfStatements, ImportDeclarations, InfixExpressions, Initializers, InstanceofExpressions, and IntersectionTypes. */\nclass I {\n  interface I0 {}\n\n  interface I1 {}\n\n  interface I2 {}\n\n  interface I3 {}\n\n  interface I4 {}\n\n  interface I5 {}\n\n  interface I6 {}\n\n  interface I7 {}\n\n  interface I8 {}\n\n  interface I9 {}\n\n  interface I10 {}\n\n  interface I11 {}\n\n  interface I12 {}\n\n  interface I13 {}\n\n  interface I14 {}\n\n  interface I15 {}\n\n  interface I16 {}\n\n  interface I17 {}\n\n  interface I18 {}\n\n  interface I19 {}\n\n  class II<T extends I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & I8 & I9 & I10 & I11 & I12 & I13 & I14 & I15 & I16 & I17 & I18 & I19> {}\n\n  static class CC {\n    static {\n      int i \= 0;\n    }\n  }\n\n  int x \=\n      0 >>> 0 + 0 / 0 * 0 - 0 & 0 << 0 * 0 / 0 >> 0 - 0 ^ 0 * 0 / 0 >>> 0 << 0 * 0 - 0 / 0\n          | 0 * 0 >> 0 + 0 / 0 * 0 - 0 << 0 & 0 * 0 / 0 >>> 0 - 0 * 0 >> 0 / 0 << 0 * 0 + 0 - 0 / 0 * 0\n          | 0 - 0 * 0 >>> 0 << 0 / 0 * 0 >> 0 - 0 ^ 0 * 0 / 0 & 0 << 0 + 0;\n\n  void f() {\n    if (0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n        \=\= 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I1 expected\:<...nal @Nullable String[\n      creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String\n        creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n\n  @Nullable\n  final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable\n   ] final String creati...> but was\:<...nal @Nullable String[ creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n  @Nullable final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable] final String creati...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I1 expected\:<...nal @Nullable String[\r      creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r  final Token externalId;\r\r  {\r    final CreationMechanism creationMechanism;\r    final @Nullable String creationUserAgent;\r    final ClientId clientId;\r    final @Nullable String\r        creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r    final Token externalId;\r  }\r}\r\rclass Test {\r  final CreationMechanism creationMechanism;\r  @Nullable final String creationUserAgent;\r  final ClientId clientId;\r\r  @Nullable\r  final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r\r  final Token externalId;\r\r  {\r    final CreationMechanism creationMechanism;\r    @Nullable final String creationUserAgent;\r    final ClientId clientId;\r    @Nullable\r   ] final String creati...> but was\:<...nal @Nullable String[ creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r  final Token externalId;\r\r  {\r    final CreationMechanism creationMechanism;\r    final @Nullable String creationUserAgent;\r    final ClientId clientId;\r    final @Nullable String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r    final Token externalId;\r  }\r}\r\rclass Test {\r  final CreationMechanism creationMechanism;\r  @Nullable final String creationUserAgent;\r  final ClientId clientId;\r\r  @Nullable final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\r\r  final Token externalId;\r\r  {\r    final CreationMechanism creationMechanism;\r    @Nullable final String creationUserAgent;\r    final ClientId clientId;\r    @Nullable] final String creati...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I1 expected\:<...nal @Nullable String[\n      creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String\n        creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n\n  @Nullable\n  final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable\n   ] final String creati...> but was\:<...nal @Nullable String[ creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n\n  @Nullable final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable] final String creati...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for I1 expected\:<...nal @Nullable String[\n      creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String\n        creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n\n  @Nullable\n  final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable\n   ] final String creati...> but was\:<...nal @Nullable String[ creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    final @Nullable String creationUserAgent;\n    final ClientId clientId;\n    final @Nullable String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n    final Token externalId;\n  }\n}\n\nclass Test {\n  final CreationMechanism creationMechanism;\n  @Nullable final String creationUserAgent;\n  final ClientId clientId;\n\n  @Nullable final String creationUserAgentXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;\n\n  final Token externalId;\n\n  {\n    final CreationMechanism creationMechanism;\n    @Nullable final String creationUserAgent;\n    final ClientId clientId;\n    @Nullable] final String creati...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for M expected\:<...java.util.List;\n\n/**[\n * Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and\n * Modifiers.\n */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<\n            Pair<\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n        list3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n        pair3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null)\n                .get(\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity())\n        .identity()\n        .identity()\n        .identity()\n        .identity();\n    f(\n        x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13]\n            + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n  }\n\n  static\n  class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \=\n      null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0)\n        .fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M()\n        .ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n            0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .fff(0)\n        .fff(0)\n        .f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .ffffffffff(0);\n    return this;\n  }\n\n  <\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX>\n      M(\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z)\n          throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,\n             ] EEEEEEEEEE, EEEEEEE...> but was\:<...java.util.List;\n\n/**[ Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and Modifiers. */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \= ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>> list3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> pair3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity()).identity().identity().identity().identity();\n    f(x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13] + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0).fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M().ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).fff(0).fff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).ffffffffff(0);\n    return this;\n  }\n\n  <XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX> M(\n      ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z)\n      throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,] EEEEEEEEEE, EEEEEEE...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for M expected\:<...java.util.List;\r\r/**[\r * Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and\r * Modifiers.\r */\r@MarkerAnnotation\rclass M {\r  class Exception0 extends Exception {}\r\r  class Exception1 extends Exception {}\r\r  class Exception2 extends Exception {}\r\r  class Exception3 extends Exception {}\r\r  class Exception4 extends Exception {}\r\r  class Exception5 extends Exception {}\r\r  class Exception6 extends Exception {}\r\r  class Exception7 extends Exception {}\r\r  class Exception8 extends Exception {}\r\r  class Exception9 extends Exception {}\r\r  void methodName1(int x) {}\r\r  void methodName2(int x) throws Exception {}\r\r  /** JavaDoc. */\r  void methodName3(int x)\r      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r          Exception7, Exception8, Exception9 {}\r\r  /** JavaDoc. */\r  void methodName4(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v) {}\r\r  /** JavaDoc. */\r  void methodName5(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v)\r      throws Exception {}\r\r  /** JavaDoc. */\r  void methodName6(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v)\r      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r          Exception7, Exception8, Exception9 {}\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName10(int x) {\r    return null;\r  }\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName12(int x) throws Exception {\r    return null;\r  }\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName11(int x)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r              Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName15(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v) {\r    return null;\r  }\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName14(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception {\r    return null;\r  }\r\r  Pair<\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName13(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r              Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName20(int x) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName21(int x) throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName22(int x)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r              Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName22(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName23(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName30(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\r              Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName31(int x) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName32(int x) throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName(int x)\r              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\r                  Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName41(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName40(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v)\r              throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\r              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v)\r              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\r                  Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  static <T0, T1, T2> void m() {}\r\r  M identity() {\r    return this;\r  }\r\r  void f(double x) {\r    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\r    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \=\r        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\r    List<\r            Pair<\r                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\r        list3 \=\r            ImmutableList\r                .<Pair<\r                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\r                    of(null);\r    Pair<Integer, Integer> pair1 \=\r        ImmutableList.<Pair<Integer, Integer>>of(null)\r            .get(\r                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\r        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\r            .get(\r                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Pair<\r            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\r        pair3 \=\r            ImmutableList\r                .<Pair<\r                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\r                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\r                    of(null)\r                .get(\r                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r  }\r\r  void f(int... x) {\r    M m \= null;\r    ((m.identity().identity().identity().identity()).identity().identity().identity().identity())\r        .identity()\r        .identity()\r        .identity()\r        .identity();\r    f(\r        x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13]\r            + x[14] + x[15]);\r  }\r\r  static void method999(Object... args) {\r    method999(1, 2, 3, 4, 5);\r    method999(1, 2, 3, 4, 5);\r    method999(\r        1, 2,\r        3, 4,\r        5, 6);\r    method999(1, 2, 3, 4, 5, 6);\r    method999("one", 1, "two", 2, "three", 3);\r    method999("one", 1);\r    method999(\r        "one", 1,\r        "two", 2);\r    method999(\r        "one", 1,\r        "two", 1 + 1,\r        "three", 1 + 1 + 1);\r    method999(\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx");\r  }\r\r  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\r        int x) {\r      return null;\r    }\r  }\r\r  static\r  class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\r        int x) {\r      return null;\r    }\r\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r        ffffffffff(int x) {\r      return null;\r    }\r  }\r\r  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\r  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \=\r      null;\r\r  M fff(int x) {\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r        .ffffffffff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0)\r        .fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\r        .fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r        .ffffffffff(0)\r        .fff(0);\r    return this;\r  }\r\r  M ffffffffff(int x) {\r    return this;\r  }\r\r  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\r    new M()\r        .ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\r            0 + 0 + 0 + 0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\r        .fff(0)\r        .fff(0)\r        .f(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\r        .ffffffffff(0);\r    return this;\r  }\r\r  <\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX,\r          XXXXXXXXXX>\r      M(\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z,\r          ZZZZZZZZZZ z)\r          throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,\r             ] EEEEEEEEEE, EEEEEEE...> but was\:<...java.util.List;\r\r/**[ Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and Modifiers. */\r@MarkerAnnotation\rclass M {\r  class Exception0 extends Exception {}\r\r  class Exception1 extends Exception {}\r\r  class Exception2 extends Exception {}\r\r  class Exception3 extends Exception {}\r\r  class Exception4 extends Exception {}\r\r  class Exception5 extends Exception {}\r\r  class Exception6 extends Exception {}\r\r  class Exception7 extends Exception {}\r\r  class Exception8 extends Exception {}\r\r  class Exception9 extends Exception {}\r\r  void methodName1(int x) {}\r\r  void methodName2(int x) throws Exception {}\r\r  /** JavaDoc. */\r  void methodName3(int x)\r      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\r\r  /** JavaDoc. */\r  void methodName4(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v) {}\r\r  /** JavaDoc. */\r  void methodName5(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v)\r      throws Exception {}\r\r  /** JavaDoc. */\r  void methodName6(\r      int a,\r      int b,\r      int c,\r      int d,\r      int e,\r      int f,\r      int g,\r      int h,\r      int i,\r      int j,\r      int k,\r      int l,\r      int m,\r      int n,\r      int o,\r      int p,\r      int q,\r      int r,\r      int s,\r      int t,\r      int u,\r      int v)\r      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName10(int x) {\r    return null;\r  }\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName12(int x) throws Exception {\r    return null;\r  }\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName11(int x)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName15(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v) {\r    return null;\r  }\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName14(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception {\r    return null;\r  }\r\r  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r      methodName13(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName20(int x) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName21(int x) throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName22(int x)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName22(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName23(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      T methodName30(\r          int a,\r          int b,\r          int c,\r          int d,\r          int e,\r          int f,\r          int g,\r          int h,\r          int i,\r          int j,\r          int k,\r          int l,\r          int m,\r          int n,\r          int o,\r          int p,\r          int q,\r          int r,\r          int s,\r          int t,\r          int u,\r          int v)\r          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName31(int x) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName32(int x) throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName(int x)\r              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName41(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v) {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName40(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v)\r              throws Exception {\r    return null;\r  }\r\r  <\r          T0,\r          T1,\r          T2,\r          T3,\r          T4,\r          T5,\r          T6,\r          T7,\r          T8,\r          T9,\r          T10,\r          T11,\r          T12,\r          T13,\r          T14,\r          T15,\r          T16,\r          T17,\r          T18,\r          T19,\r          T20,\r          T21,\r          T22,\r          T23,\r          T24,\r          T25,\r          T26,\r          T27,\r          T28,\r          T29,\r          T30,\r          T31>\r      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\r          methodName(\r              int a,\r              int b,\r              int c,\r              int d,\r              int e,\r              int f,\r              int g,\r              int h,\r              int i,\r              int j,\r              int k,\r              int l,\r              int m,\r              int n,\r              int o,\r              int p,\r              int q,\r              int r,\r              int s,\r              int t,\r              int u,\r              int v)\r              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\r    return null;\r  }\r\r  static <T0, T1, T2> void m() {}\r\r  M identity() {\r    return this;\r  }\r\r  void f(double x) {\r    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\r    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \= ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\r    List<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>> list3 \=\r        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null);\r    Pair<Integer, Integer> pair1 \=\r        ImmutableList.<Pair<Integer, Integer>>of(null)\r            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\r        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\r            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> pair3 \=\r        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null)\r            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r  }\r\r  void f(int... x) {\r    M m \= null;\r    ((m.identity().identity().identity().identity()).identity().identity().identity().identity()).identity().identity().identity().identity();\r    f(x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13] + x[14] + x[15]);\r  }\r\r  static void method999(Object... args) {\r    method999(1, 2, 3, 4, 5);\r    method999(1, 2, 3, 4, 5);\r    method999(\r        1, 2,\r        3, 4,\r        5, 6);\r    method999(1, 2, 3, 4, 5, 6);\r    method999("one", 1, "two", 2, "three", 3);\r    method999("one", 1);\r    method999(\r        "one", 1,\r        "two", 2);\r    method999(\r        "one", 1,\r        "two", 1 + 1,\r        "three", 1 + 1 + 1);\r    method999(\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx",\r        "xxxxxxxxxxxxxx");\r  }\r\r  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\r      return null;\r    }\r  }\r\r  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\r      return null;\r    }\r\r    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ffffffffff(int x) {\r      return null;\r    }\r  }\r\r  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\r  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\r\r  M fff(int x) {\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0).fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\r        .fff(0);\r    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0).fff(0);\r    return this;\r  }\r\r  M ffffffffff(int x) {\r    return this;\r  }\r\r  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\r    new M().ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0 + 0 + 0 + 0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\r        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).fff(0).fff(0).f(0);\r    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).ffffffffff(0);\r    return this;\r  }\r\r  <XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX> M(\r      ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z)\r      throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,] EEEEEEEEEE, EEEEEEE...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for M expected\:<...java.util.List;\n\n/**[\n * Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and\n * Modifiers.\n */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<\n            Pair<\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n        list3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n        pair3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null)\n                .get(\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity())\n        .identity()\n        .identity()\n        .identity()\n        .identity();\n    f(\n        x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13]\n            + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n  }\n\n  static\n  class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \=\n      null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0)\n        .fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M()\n        .ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n            0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .fff(0)\n        .fff(0)\n        .f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .ffffffffff(0);\n    return this;\n  }\n\n  <\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX>\n      M(\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z)\n          throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,\n             ] EEEEEEEEEE, EEEEEEE...> but was\:<...java.util.List;\n\n/**[ Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and Modifiers. */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \= ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>> list3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> pair3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity()).identity().identity().identity().identity();\n    f(x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13] + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0).fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M().ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).fff(0).fff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).ffffffffff(0);\n    return this;\n  }\n\n  <XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX> M(\n      ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z)\n      throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,] EEEEEEEEEE, EEEEEEE...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for M expected\:<...va.util.List;\n\n/**[\n * Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and\n * Modifiers.\n */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n          Exception7, Exception8, Exception9 {}\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n          Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6,\n              Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>,\n              Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5,\n                  Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<\n            Pair<\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n        list3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(\n                0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                    + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n            Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>\n        pair3 \=\n            ImmutableList\n                .<Pair<\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>,\n                        Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>\n                    of(null)\n                .get(\n                    0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                        + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity())\n        .identity()\n        .identity()\n        .identity()\n        .identity();\n    f(\n        x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13]\n            + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n  }\n\n  static\n  class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(\n        int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \=\n      null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n                + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        .ffffffffff(0)\n        .fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M()\n        .ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n            0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n            + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .fff(0)\n        .fff(0)\n        .f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0)\n        .ffffffffff(0);\n    return this;\n  }\n\n  <\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX,\n          XXXXXXXXXX>\n      M(\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z,\n          ZZZZZZZZZZ z)\n          throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,\n             ] EEEEEEEEEE, EEEEEEE...> but was\:<...va.util.List;\n\n/**[ Tests for MarkerAnnotations, MemberValuePairs, MethodDeclarations, MethodInvocations, and Modifiers. */\n@MarkerAnnotation\nclass M {\n  class Exception0 extends Exception {}\n\n  class Exception1 extends Exception {}\n\n  class Exception2 extends Exception {}\n\n  class Exception3 extends Exception {}\n\n  class Exception4 extends Exception {}\n\n  class Exception5 extends Exception {}\n\n  class Exception6 extends Exception {}\n\n  class Exception7 extends Exception {}\n\n  class Exception8 extends Exception {}\n\n  class Exception9 extends Exception {}\n\n  void methodName1(int x) {}\n\n  void methodName2(int x) throws Exception {}\n\n  /** JavaDoc. */\n  void methodName3(int x)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  /** JavaDoc. */\n  void methodName4(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v) {}\n\n  /** JavaDoc. */\n  void methodName5(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception {}\n\n  /** JavaDoc. */\n  void methodName6(\n      int a,\n      int b,\n      int c,\n      int d,\n      int e,\n      int f,\n      int g,\n      int h,\n      int i,\n      int j,\n      int k,\n      int l,\n      int m,\n      int n,\n      int o,\n      int p,\n      int q,\n      int r,\n      int s,\n      int t,\n      int u,\n      int v)\n      throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {}\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName10(int x) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName12(int x) throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName11(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName15(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName14(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n      methodName13(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName20(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName21(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(int x)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName22(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName23(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      T methodName30(\n          int a,\n          int b,\n          int c,\n          int d,\n          int e,\n          int f,\n          int g,\n          int h,\n          int i,\n          int j,\n          int k,\n          int l,\n          int m,\n          int n,\n          int o,\n          int p,\n          int q,\n          int r,\n          int s,\n          int t,\n          int u,\n          int v)\n          throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName31(int x) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName32(int x) throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(int x)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName41(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v) {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName40(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception {\n    return null;\n  }\n\n  <\n          T0,\n          T1,\n          T2,\n          T3,\n          T4,\n          T5,\n          T6,\n          T7,\n          T8,\n          T9,\n          T10,\n          T11,\n          T12,\n          T13,\n          T14,\n          T15,\n          T16,\n          T17,\n          T18,\n          T19,\n          T20,\n          T21,\n          T22,\n          T23,\n          T24,\n          T25,\n          T26,\n          T27,\n          T28,\n          T29,\n          T30,\n          T31>\n      Pair<Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>, Pair<Pair<Pair<T, T>, Pair<T, T>>, Pair<Pair<T, T>, Pair<T, T>>>>\n          methodName(\n              int a,\n              int b,\n              int c,\n              int d,\n              int e,\n              int f,\n              int g,\n              int h,\n              int i,\n              int j,\n              int k,\n              int l,\n              int m,\n              int n,\n              int o,\n              int p,\n              int q,\n              int r,\n              int s,\n              int t,\n              int u,\n              int v)\n              throws Exception0, Exception1, Exception2, Exception3, Exception4, Exception5, Exception6, Exception7, Exception8, Exception9 {\n    return null;\n  }\n\n  static <T0, T1, T2> void m() {}\n\n  M identity() {\n    return this;\n  }\n\n  void f(double x) {\n    List<Pair<Integer, Integer>> list1 \= ImmutableList.<Pair<Integer, Integer>>of(null);\n    List<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> list2 \= ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null);\n    List<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>> list3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null);\n    Pair<Integer, Integer> pair1 \=\n        ImmutableList.<Pair<Integer, Integer>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> pair2 \=\n        ImmutableList.<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>> pair3 \=\n        ImmutableList.<Pair<Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>, Pair<Pair<Integer, Integer>, Pair<Integer, Integer>>>>of(null)\n            .get(0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n  }\n\n  void f(int... x) {\n    M m \= null;\n    ((m.identity().identity().identity().identity()).identity().identity().identity().identity()).identity().identity().identity().identity();\n    f(x[0] + x[1] + x[2] + x[3] + x[4] + x[5] + x[6] + x[7] + x[8] + x[9] + x[11] + x[12] + x[13] + x[14] + x[15]);\n  }\n\n  static void method999(Object... args) {\n    method999(1, 2, 3, 4, 5);\n    method999(1, 2, 3, 4, 5);\n    method999(\n        1, 2,\n        3, 4,\n        5, 6);\n    method999(1, 2, 3, 4, 5, 6);\n    method999("one", 1, "two", 2, "three", 3);\n    method999("one", 1);\n    method999(\n        "one", 1,\n        "two", 2);\n    method999(\n        "one", 1,\n        "two", 1 + 1,\n        "three", 1 + 1 + 1);\n    method999(\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx",\n        "xxxxxxxxxxxxxx");\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n  }\n\n  static class Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx fff(int x) {\n      return null;\n    }\n\n    static Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ffffffffff(int x) {\n      return null;\n    }\n  }\n\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n  M xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \= null;\n\n  M fff(int x) {\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(0 + 0).fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.fff(\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n        .fff(0);\n    Xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.ffffffffff(0).fff(0);\n    return this;\n  }\n\n  M ffffffffff(int x) {\n    return this;\n  }\n\n  M ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(int x) {\n    new M().ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(\n        0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).fff(0).fff(0).f(0);\n    ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(0).ffffffffff(0);\n    return this;\n  }\n\n  <XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX, XXXXXXXXXX> M(\n      ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z, ZZZZZZZZZZ z)\n      throws EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE, EEEEEEEEEE,] EEEEEEEEEE, EEEEEEE...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Multivariables expected\:<...xxxxxxxxxxxxxxxxxxx,[\n      yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n     ] zzzzzzzzzzzzzzzzzzz...> but was\:<...xxxxxxxxxxxxxxxxxxx,[ yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Multivariables expected\:<...xxxxxxxxxxxxxxxxxxx,[\r      yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\r     ] zzzzzzzzzzzzzzzzzzz...> but was\:<...xxxxxxxxxxxxxxxxxxx,[ yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Multivariables expected\:<...xxxxxxxxxxxxxxxxxxx,[\n      yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n     ] zzzzzzzzzzzzzzzzzzz...> but was\:<...xxxxxxxxxxxxxxxxxxx,[ yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Multivariables expected\:<...xxxxxxxxxxxxxxxxxxx,[\n      yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n     ] zzzzzzzzzzzzzzzzzzz...> but was\:<...xxxxxxxxxxxxxxxxxxx,[ yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,] zzzzzzzzzzzzzzzzzzz...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for P expected\:<...rmat.java.test;\n\n/**[\n * Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions,\n * PrefixExpressions, and PrimitiveTypes.\n */\nclass P<\n    T1,\n    T2,\n    T3,\n    T4,\n    T5,\n    T6,\n    T7,\n    T8,\n    T9,\n    T10,\n    T11,\n    T12,\n    T13,\n    T14,\n    T15,\n    T16,\n    T17,\n    T18,\n    T19,\n    T20,\n    T21,\n    T22,\n    T23,\n   ] T24> {\n  void f() {...> but was\:<...rmat.java.test;\n\n/**[ Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions, PrefixExpressions, and PrimitiveTypes. */\nclass P<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23,] T24> {\n  void f() {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for P expected\:<...rmat.java.test;\r\r/**[\r * Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions,\r * PrefixExpressions, and PrimitiveTypes.\r */\rclass P<\r    T1,\r    T2,\r    T3,\r    T4,\r    T5,\r    T6,\r    T7,\r    T8,\r    T9,\r    T10,\r    T11,\r    T12,\r    T13,\r    T14,\r    T15,\r    T16,\r    T17,\r    T18,\r    T19,\r    T20,\r    T21,\r    T22,\r    T23,\r   ] T24> {\r  void f() {...> but was\:<...rmat.java.test;\r\r/**[ Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions, PrefixExpressions, and PrimitiveTypes. */\rclass P<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23,] T24> {\r  void f() {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for P expected\:<...rmat.java.test;\n\n/**[\n * Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions,\n * PrefixExpressions, and PrimitiveTypes.\n */\nclass P<\n    T1,\n    T2,\n    T3,\n    T4,\n    T5,\n    T6,\n    T7,\n    T8,\n    T9,\n    T10,\n    T11,\n    T12,\n    T13,\n    T14,\n    T15,\n    T16,\n    T17,\n    T18,\n    T19,\n    T20,\n    T21,\n    T22,\n    T23,\n   ] T24> {\n  void f() {...> but was\:<...rmat.java.test;\n\n/**[ Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions, PrefixExpressions, and PrimitiveTypes. */\nclass P<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23,] T24> {\n  void f() {...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for P expected\:<...at.java.test;\n\n/**[\n * Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions,\n * PrefixExpressions, and PrimitiveTypes.\n */\nclass P<\n    T1,\n    T2,\n    T3,\n    T4,\n    T5,\n    T6,\n    T7,\n    T8,\n    T9,\n    T10,\n    T11,\n    T12,\n    T13,\n    T14,\n    T15,\n    T16,\n    T17,\n    T18,\n    T19,\n    T20,\n    T21,\n    T22,\n    T23,\n   ] T24> {\n  void f() ...> but was\:<...at.java.test;\n\n/**[ Tests for PackageDeclarations, ParameterizedTypes, ParenthesizedExpressions, PostfixExpressions, PrefixExpressions, and PrimitiveTypes. */\nclass P<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23,] T24> {\n  void f() ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for R expected\:<... + x + x + x + x + x[\n       ] + x + x + x + x + x...> but was\:<... + x + x + x + x + x[] + x + x + x + x + x...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for R expected\:<... + x + x + x + x + x[\r       ] + x + x + x + x + x...> but was\:<... + x + x + x + x + x[] + x + x + x + x + x...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for R expected\:<... + x + x + x + x + x[\n       ] + x + x + x + x + x...> but was\:<... + x + x + x + x + x[] + x + x + x + x + x...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for R expected\:<... + x + x + x + x + x[\n       ] + x + x + x + x + x...> but was\:<... + x + x + x + x + x[] + x + x + x + x + x...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for S expected\:<...ariableDeclarations,[\n * Statements, StringLiterals, SuperConstructorInvocations, SuperFieldAccesses,\n * SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and\n * SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n          + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n               ] + 0 + 0 + 0 + 0 + 0...> but was\:<...ariableDeclarations,[ Statements, StringLiterals, SuperConstructorInvocations,\n * SuperFieldAccesses, SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for S expected\:<...ariableDeclarations,[\r * Statements, StringLiterals, SuperConstructorInvocations, SuperFieldAccesses,\r * SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and\r * SynchronizedStatements.\r */\rclass S {\r  // TODO(jdd)\: Add tests for higher language levels.\r\r  int x \= 0;\r\r  @SingleMemberAnnotation(\r      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r          + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\r  S() {\r    super();\r  }\r\r  class SS extends S {\r    SS() {\r      super();\r      super.x \= 0;\r      super.foo();\r    }\r  }\r\r  void foo() {\r    Object[] object \= null;\r    synchronized (\r        object[\r            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\r               ] + 0 + 0 + 0 + 0 + 0...> but was\:<...ariableDeclarations,[ Statements, StringLiterals, SuperConstructorInvocations,\r * SuperFieldAccesses, SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and SynchronizedStatements.\r */\rclass S {\r  // TODO(jdd)\: Add tests for higher language levels.\r\r  int x \= 0;\r\r  @SingleMemberAnnotation(\r      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\r  S() {\r    super();\r  }\r\r  class SS extends S {\r    SS() {\r      super();\r      super.x \= 0;\r      super.foo();\r    }\r  }\r\r  void foo() {\r    Object[] object \= null;\r    synchronized (\r        object[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for S expected\:<...ariableDeclarations,[\n * Statements, StringLiterals, SuperConstructorInvocations, SuperFieldAccesses,\n * SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and\n * SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n          + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n               ] + 0 + 0 + 0 + 0 + 0...> but was\:<...ariableDeclarations,[ Statements, StringLiterals, SuperConstructorInvocations,\n * SuperFieldAccesses, SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for S expected\:<...ariableDeclarations,[\n * Statements, StringLiterals, SuperConstructorInvocations, SuperFieldAccesses,\n * SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and\n * SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n          + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[\n            0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0\n               ] + 0 + 0 + 0 + 0 + 0...> but was\:<...ariableDeclarations,[ Statements, StringLiterals, SuperConstructorInvocations,\n * SuperFieldAccesses, SuperMethodInvocations, SuperMethodReferences, SwitchCases, SwitchStatements, and SynchronizedStatements.\n */\nclass S {\n  // TODO(jdd)\: Add tests for higher language levels.\n\n  int x \= 0;\n\n  @SingleMemberAnnotation(\n      0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0)\n  S() {\n    super();\n  }\n\n  class SS extends S {\n    SS() {\n      super();\n      super.x \= 0;\n      super.foo();\n    }\n  }\n\n  void foo() {\n    Object[] object \= null;\n    synchronized (\n        object[0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0] + 0 + 0 + 0 + 0 + 0...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for SuperQualifier expected\:<...his.toStringHelper()[\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper()\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(\n        ]cccccccccccccccccccc...> but was\:<...his.toStringHelper()[.add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper().add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(]cccccccccccccccccccc...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for SuperQualifier expected\:<...his.toStringHelper()[\r        .add("foo", foo_________________________________________)\r        .add("bar", bar_________________________________________);\r  }\r\r  String b() {\r    return super.toStringHelper()\r        .add("foo", foo_________________________________________)\r        .add("bar", bar_________________________________________);\r  }\r\r  {\r    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(\r        ]cccccccccccccccccccc...> but was\:<...his.toStringHelper()[.add("foo", foo_________________________________________).add("bar", bar_________________________________________);\r  }\r\r  String b() {\r    return super.toStringHelper().add("foo", foo_________________________________________).add("bar", bar_________________________________________);\r  }\r\r  {\r    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(]cccccccccccccccccccc...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for SuperQualifier expected\:<...his.toStringHelper()[\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper()\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(\n        ]cccccccccccccccccccc...> but was\:<...his.toStringHelper()[.add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper().add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(]cccccccccccccccccccc...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for SuperQualifier expected\:<...his.toStringHelper()[\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper()\n        .add("foo", foo_________________________________________)\n        .add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(\n        ]cccccccccccccccccccc...> but was\:<...his.toStringHelper()[.add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  String b() {\n    return super.toStringHelper().add("foo", foo_________________________________________).add("bar", bar_________________________________________);\n  }\n\n  {\n    this.aaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb(]cccccccccccccccccccc...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for T expected\:<...clarationStatements,[\n * TypeDeclarations, TypeLiterals, TypeMethodReferences,] TypeParameters, and...> but was\:<...clarationStatements,[ TypeDeclarations, TypeLiterals, TypeMethodReferences,\n *] TypeParameters, and...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for T expected\:<...clarationStatements,[\r * TypeDeclarations, TypeLiterals, TypeMethodReferences,] TypeParameters, and...> but was\:<...clarationStatements,[ TypeDeclarations, TypeLiterals, TypeMethodReferences,\r *] TypeParameters, and...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for T expected\:<...clarationStatements,[\n * TypeDeclarations, TypeLiterals, TypeMethodReferences,] TypeParameters, and...> but was\:<...clarationStatements,[ TypeDeclarations, TypeLiterals, TypeMethodReferences,\n *] TypeParameters, and...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for T expected\:<...clarationStatements,[\n * TypeDeclarations, TypeLiterals, TypeMethodReferences,] TypeParameters, and...> but was\:<...clarationStatements,[ TypeDeclarations, TypeLiterals, TypeMethodReferences,\n *] TypeParameters, and...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for TryWithResources expected\:<...feredWriter writer \=[\n       ] new BufferedWriter(...> but was\:<...feredWriter writer \=[] new BufferedWriter(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for TryWithResources expected\:<...feredWriter writer \=[\r       ] new BufferedWriter(...> but was\:<...feredWriter writer \=[] new BufferedWriter(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for TryWithResources expected\:<...feredWriter writer \=[\n       ] new BufferedWriter(...> but was\:<...feredWriter writer \=[] new BufferedWriter(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for TryWithResources expected\:<...feredWriter writer \=[\n       ] new BufferedWriter(...> but was\:<...feredWriter writer \=[] new BufferedWriter(...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for U expected\:<... } catch (Exception0[\n        | Exception1\n        | Exception2\n        | Exception3\n        | Exception4\n        | Exception5\n        | Exception6\n        | Exception7\n        | Exception8\n       ] | Exception9 e) {\n ...> but was\:<... } catch (Exception0[ | Exception1 | Exception2 | Exception3 | Exception4 | Exception5 | Exception6 | Exception7 | Exception8] | Exception9 e) {\n ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for U expected\:<... } catch (Exception0[\r        | Exception1\r        | Exception2\r        | Exception3\r        | Exception4\r        | Exception5\r        | Exception6\r        | Exception7\r        | Exception8\r       ] | Exception9 e) {\r ...> but was\:<... } catch (Exception0[ | Exception1 | Exception2 | Exception3 | Exception4 | Exception5 | Exception6 | Exception7 | Exception8] | Exception9 e) {\r ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for U expected\:<... } catch (Exception0[\n        | Exception1\n        | Exception2\n        | Exception3\n        | Exception4\n        | Exception5\n        | Exception6\n        | Exception7\n        | Exception8\n       ] | Exception9 e) {\n ...> but was\:<... } catch (Exception0[ | Exception1 | Exception2 | Exception3 | Exception4 | Exception5 | Exception6 | Exception7 | Exception8] | Exception9 e) {\n ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for U expected\:<... } catch (Exception0[\n        | Exception1\n        | Exception2\n        | Exception3\n        | Exception4\n        | Exception5\n        | Exception6\n        | Exception7\n        | Exception8\n       ] | Exception9 e) {\n...> but was\:<... } catch (Exception0[ | Exception1 | Exception2 | Exception3 | Exception4 | Exception5 | Exception6 | Exception7 | Exception8] | Exception9 e) {\n...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted expected\:<...rectory, and confirm[\n * that the result is the same as the file in the output directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \=\n          Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \=\n          Files.readAllBytes(\n              ]FileSystems.getDefau...> but was\:<...rectory, and confirm[ that the result is the same as the file in the output\n * directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \= Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \= Files.readAllBytes(]FileSystems.getDefau...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted expected\:<...rectory, and confirm[\r * that the result is the same as the file in the output directory.\r */\rpublic final class Unformatted extends TestCase {\r  private static final int MAX_WIDTH \= 100;\r\r  public void testFormatter() throws Exception {\r    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\r    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\r    File inputDirectory \= new File(inputPath.toString());\r    File outputDirectory \= new File(outputPath.toString());\r    for (File file \: inputDirectory.listFiles()) {\r      assertTrue(file.isFile());\r      String fileName \= file.getName();\r      assertTrue(fileName.endsWith(".java"));\r      byte[] inputBytes \=\r          Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\r      String inputString \= new String(inputBytes, Charsets.UTF_8);\r      byte[] expectedOutputBytes \=\r          Files.readAllBytes(\r              ]FileSystems.getDefau...> but was\:<...rectory, and confirm[ that the result is the same as the file in the output\r * directory.\r */\rpublic final class Unformatted extends TestCase {\r  private static final int MAX_WIDTH \= 100;\r\r  public void testFormatter() throws Exception {\r    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\r    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\r    File inputDirectory \= new File(inputPath.toString());\r    File outputDirectory \= new File(outputPath.toString());\r    for (File file \: inputDirectory.listFiles()) {\r      assertTrue(file.isFile());\r      String fileName \= file.getName();\r      assertTrue(fileName.endsWith(".java"));\r      byte[] inputBytes \= Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\r      String inputString \= new String(inputBytes, Charsets.UTF_8);\r      byte[] expectedOutputBytes \= Files.readAllBytes(]FileSystems.getDefau...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted expected\:<...rectory, and confirm[\n * that the result is the same as the file in the output directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \=\n          Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \=\n          Files.readAllBytes(\n              ]FileSystems.getDefau...> but was\:<...rectory, and confirm[ that the result is the same as the file in the output\n * directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \= Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \= Files.readAllBytes(]FileSystems.getDefau...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted expected\:<...rectory, and confirm[\n * that the result is the same as the file in the output directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \=\n          Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \=\n          Files.readAllBytes(\n              ]FileSystems.getDefau...> but was\:<...rectory, and confirm[ that the result is the same as the file in the output\n * directory.\n */\npublic final class Unformatted extends TestCase {\n  private static final int MAX_WIDTH \= 100;\n\n  public void testFormatter() throws Exception {\n    Path inputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "input");\n    Path outputPath \= FileSystems.getDefault().getPath(TestPath.getDir(), "output");\n    File inputDirectory \= new File(inputPath.toString());\n    File outputDirectory \= new File(outputPath.toString());\n    for (File file \: inputDirectory.listFiles()) {\n      assertTrue(file.isFile());\n      String fileName \= file.getName();\n      assertTrue(fileName.endsWith(".java"));\n      byte[] inputBytes \= Files.readAllBytes(FileSystems.getDefault().getPath(inputDirectory.toString(), fileName));\n      String inputString \= new String(inputBytes, Charsets.UTF_8);\n      byte[] expectedOutputBytes \= Files.readAllBytes(]FileSystems.getDefau...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted2 expected\:<...oglejavaformat;\n\n/**[\n * Rewrite comments. This interface is implemented by {@link\n * com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.\n] */\npublic interface...> but was\:<...oglejavaformat;\n\n/**[ Rewrite comments. This interface is implemented by {@link com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.] */\npublic interface...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted2 expected\:<...oglejavaformat;\r\r/**[\r * Rewrite comments. This interface is implemented by {@link\r * com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.\r] */\rpublic interface...> but was\:<...oglejavaformat;\r\r/**[ Rewrite comments. This interface is implemented by {@link com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.] */\rpublic interface...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted2 expected\:<...oglejavaformat;\n\n/**[\n * Rewrite comments. This interface is implemented by {@link\n * com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.\n] */\npublic interface...> but was\:<...oglejavaformat;\n\n/**[ Rewrite comments. This interface is implemented by {@link com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.] */\npublic interface...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for Unformatted2 expected\:<...lejavaformat;\n\n/**[\n * Rewrite comments. This interface is implemented by {@link\n * com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.\n] */\npublic interfac...> but was\:<...lejavaformat;\n\n/**[ Rewrite comments. This interface is implemented by {@link com.google.googlejavaformat.java.JavaCommentsHelper JavaCommentsHelper}.] */\npublic interfac...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for V expected\:<...rmat.java.test;\n\n/**[\n * Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and\n * VariableDeclarationStatements.\n] */\nclass V {\n  int ...> but was\:<...rmat.java.test;\n\n/**[ Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and VariableDeclarationStatements.] */\nclass V {\n  int ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for V expected\:<...rmat.java.test;\r\r/**[\r * Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and\r * VariableDeclarationStatements.\r] */\rclass V {\r  int ...> but was\:<...rmat.java.test;\r\r/**[ Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and VariableDeclarationStatements.] */\rclass V {\r  int ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for V expected\:<...rmat.java.test;\n\n/**[\n * Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and\n * VariableDeclarationStatements.\n] */\nclass V {\n  int ...> but was\:<...rmat.java.test;\n\n/**[ Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and VariableDeclarationStatements.] */\nclass V {\n  int ...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for V expected\:<...at.java.test;\n\n/**[\n * Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and\n * VariableDeclarationStatements.\n] */\nclass V {\n  in...> but was\:<...at.java.test;\n\n/**[ Tests for VariableDeclarationExpressions, VariableDeclarationFragments, and VariableDeclarationStatements.] */\nclass V {\n  in...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for W expected\:<...true \=\= true \=\= true[\n       ] \=\= true \=\= true) {}...> but was\:<...true \=\= true \=\= true[] \=\= true \=\= true) {}...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for W expected\:<...true \=\= true \=\= true[\r       ] \=\= true \=\= true) {}...> but was\:<...true \=\= true \=\= true[] \=\= true \=\= true) {}...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for W expected\:<...true \=\= true \=\= true[\n       ] \=\= true \=\= true) {}...> but was\:<...true \=\= true \=\= true[] \=\= true \=\= true) {}...>', isError\=false}, FailureType{failureName\='org.junit.ComparisonFailure', failureDetail\='bad output for W expected\:<...true \=\= true \=\= true[\n       ] \=\= true \=\= true) {}...> but was\:<...true \=\= true \=\= true[] \=\= true \=\= true) {}...>', isError\=false}], nbFailures\=236, nbErrors\=0}
pr-base-commit-id=24edd0ce19b54be268ead4611f2db02c83d9d327
