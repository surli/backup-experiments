/** * Meta class for 'jdkLocalTime' property <br/> * The meta class exposes some useful methods: <ul> *    <li>encodeFromJava: encode a property from raw Java to CQL java compatible type </li> *    <li>encodeField: extract the current property value from the given info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs instance and encode to CQL java compatible type </li> *    <li>decodeFromGettable: decode from a {@link com.datastax.driver.core.GettableData} instance (Row, UDTValue, TupleValue) the current property</li> * </ul> */@java.lang.SuppressWarnings({"serial", "unchecked"})public static final info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.time.LocalTime, java.time.LocalTime> jdkLocalTime = new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.time.LocalTime, java.time.LocalTime>(new info.archinnov.achilles.internals.metamodel.columns.FieldInfo<>((info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$) -> entity$.getJdkLocalTime(), (info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$, java.time.LocalTime value$) -> entity$.setJdkLocalTime(value$), "jdkLocalTime", "jdk_local_time", info.archinnov.achilles.internals.metamodel.columns.ColumnType.NORMAL, new info.archinnov.achilles.internals.metamodel.columns.ColumnInfo(false), info.archinnov.achilles.internals.metamodel.index.IndexInfo.noIndex()), com.datastax.driver.core.DataType.time(), gettableData$ -> gettableData$.get("jdk_local_time", java.time.LocalTime.class), (settableData$, value$) -> settableData$.set("jdk_local_time", value$, java.time.LocalTime.class), new com.google.common.reflect.TypeToken<java.time.LocalTime>(){}, new com.google.common.reflect.TypeToken<java.time.LocalTime>(){}, new info.archinnov.achilles.internals.codec.FallThroughCodec<>(java.time.LocalTime.class));