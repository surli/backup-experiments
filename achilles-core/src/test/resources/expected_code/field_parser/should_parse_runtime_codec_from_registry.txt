/** * Meta class for 'encoding' property <br/> * The meta class exposes some useful methods: <ul> *    <li>encodeFromJava: encode a property from raw Java to CQL java compatible type </li> *    <li>encodeField: extract the current property value from the given info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs instance and encode to CQL java compatible type </li> *    <li>decodeFromGettable: decode from a {@link com.datastax.driver.core.GettableData} instance (Row, UDTValue, TupleValue) the current property</li> * </ul> */@java.lang.SuppressWarnings({"serial", "unchecked"})public static final info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, info.archinnov.achilles.annotations.Enumerated.Encoding, java.lang.Integer> encoding = new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, info.archinnov.achilles.annotations.Enumerated.Encoding, java.lang.Integer>(new info.archinnov.achilles.internals.metamodel.columns.FieldInfo<>((info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$) -> entity$.getEncoding(), (info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$, info.archinnov.achilles.annotations.Enumerated.Encoding value$) -> entity$.setEncoding(value$), "encoding", "encoding", info.archinnov.achilles.internals.metamodel.columns.ColumnType.NORMAL, new info.archinnov.achilles.internals.metamodel.columns.ColumnInfo(false), info.archinnov.achilles.internals.metamodel.index.IndexInfo.noIndex()), com.datastax.driver.core.DataType.cint(), gettableData$ -> gettableData$.get("encoding", java.lang.Integer.class), (settableData$, value$) -> settableData$.set("encoding", value$, java.lang.Integer.class), new com.google.common.reflect.TypeToken<info.archinnov.achilles.annotations.Enumerated.Encoding>(){}, new com.google.common.reflect.TypeToken<java.lang.Integer>(){}, new info.archinnov.achilles.internals.types.RuntimeCodecWrapper<info.archinnov.achilles.annotations.Enumerated.Encoding,java.lang.Integer>(info.archinnov.achilles.annotations.Enumerated.Encoding.class, java.lang.Integer.class, java.util.Optional.<java.lang.String>empty()));